trigger:
  branches:
    include:
      - main
      - beta
      - release/beta/*
      - stable
      - release/stable/*

  paths:
    include:
    - '/'
    exclude:
    - .dependabot/
    - .github/
    # don't trigger the CI if only docs files are changed
    - doc/*
    - '**/*.md'

pr: 
  branches:
    include:
      - main
      - beta
      - release/beta/*
      - stable
      - release/stable/*

  paths:
    include:
    - '/'
    exclude:
    - .dependabot/
    - .github/
    # don't trigger the CI if only docs files are changed
    - doc/*
    - '**/*.md'

variables:
  # Path where packages (nuget or app packages) will be copied to.
  PackageOutputPath: $(Build.ArtifactStagingDirectory)\nuget

  IsCanaryBranch: $[startsWith(variables['Build.SourceBranch'], 'refs/heads/canaries/')]
  IsReleaseBranch: $[or(eq(variables['Build.SourceBranch'], 'refs/heads/main'), startsWith(variables['Build.SourceBranch'], 'refs/heads/feature/'), startsWith(variables['Build.SourceBranch'], 'refs/heads/release/'))]

  ANDROID_NDK_HOME: C:\Microsoft\AndroidNDK64\android-ndk-r16b
  ANDROID_NDK_PATH: C:\Microsoft\AndroidNDK64\android-ndk-r16b
  AndroidNdkDirectory: C:\Microsoft\AndroidNDK64\android-ndk-r16b

jobs:
- job: Windows
  strategy:
    maxParallel: 4
    matrix:
      Samples:
        ApplicationPlatform: Samples
        ArtifactName: Samples
        DisableNet6MobileTargets: true
        GeneratePackageOnBuild: false
      Samples_WinUI:
        ApplicationPlatform: Samples_WinUI
        ArtifactName: Samples_WinUI
        DisableNet6MobileTargets: true
        GeneratePackageOnBuild: false
      Packages:
        ApplicationPlatform: Packages
        ArtifactName: uno-ui-toolkit-drop
        GeneratePackageOnBuild: true
      Packages_WinUI:
        ApplicationPlatform: Packages_WinUI
        ArtifactName: uno-ui-toolkit-drop
        GeneratePackageOnBuild: true
  pool:
    vmImage: windows-2022
  
  steps:
    - template: templates/gitversion.yml
    - template: templates/dotnet7-install-windows.yml

    # This SDK version is needed as long as `uap10.0` will be supported in Uno.Core
    - powershell: .\build\Install-WindowsSdkISO.ps1 18362
      displayName: Install Windows SDK 18362

    - template: stage-build.yml

- job: macOS

  timeoutInMinutes: 90 

  strategy:
    maxParallel: 2
    matrix:
      iOS:
        ApplicationPlatform: iPhone
        ArtifactName: iOS
        GeneratePackageOnBuild: false
        DisableNet6MobileTargets: true
      macOS:
        ApplicationPlatform: macOS
        ArtifactName: macOS
        GeneratePackageOnBuild: false
        DisableNet6MobileTargets: true

  pool:
    vmImage: 'macOS-11'
  
  variables:
   - name: XCODE_ROOT
     value: '/Applications/Xcode_13.2.1.app'
   - name: XamarinSDKVersion
     value: 6_12_12
   - group: unoplatform.apple.ios.appstore.distribution

  steps:
  - task: InstallAppleCertificate@2
    displayName: Install Certificate
    inputs:
      certSecureFile: UnoPlatform-Apple-Distribution.p12
      certPwd: '$(appleappstorecertificatepassword)'
      keychain: temp
      deleteCert: true
  
  - task: InstallAppleProvisioningProfile@1
    inputs:
      provisioningProfileLocation: secureFiles
      provProfileSecureFile: Uno_Toolkit_iOS.mobileprovision

  - template: templates/gitversion.yml
  - template: templates/dotnet7-install-mac.yml

  - bash: /bin/bash -c "sudo $AGENT_HOMEDIRECTORY/scripts/select-xamarin-sdk.sh $(XamarinSDKVersion)"
    displayName: Select Xamarin Version

  - bash: |
      echo 'xCode Root to ${XCODE_ROOT}'
      echo '##vso[task.setvariable variable=MD_APPLE_SDK_ROOT;]'${XCODE_ROOT}
      sudo xcode-select --switch ${XCODE_ROOT}/Contents/Developer

    displayName: Select Xcode

  - bash: |
      rm -f ${HOME}/Library/Preferences/Xamarin/Settings.plist

    # https://github.com/actions/virtual-environments/issues/1932
    displayName: Apply workaround for Azure Devops issue 1932

  - bash: |
      chmod +x $(build.sourcesdirectory)/build/workflow/scripts/macos-build.sh
      $(build.sourcesdirectory)/build/workflow/scripts/macos-build.sh
    displayName: 'Build solution in Release | $(ApplicationPlatform)'
    retryCountOnTaskFailure: 3
    env:
      BUILD_PLATFORM: "$(ApplicationPlatform)"
      BUILD_PACKAGEVERSION: "$(SemVer)"
      BUILD_GENERATEPACKAGE: "$(GeneratePackageOnBuild)"
      BUILD_SOLUTION: "src/Uno.Toolkit.sln"
      BUILD_BINLOG: "$(build.artifactstagingdirectory)/toolkit-build-$(ApplicationPlatform).binlog"

- template: stage-uitests-build.yml
- template: stage-uitests-wasm.yml
- template: stage-uitests-ios.yml
- template: stage-uitests-android.yml
