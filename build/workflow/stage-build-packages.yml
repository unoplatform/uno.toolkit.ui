jobs:
- job: Build_Packages
  timeoutInMinutes: 90
  pool:
    vmImage: windows-2022

  steps:
    - template: templates/gitversion.yml
    - template: templates/dotnet-workload-install-windows.yml

    # This SDK version is needed as long as `uap10.0` will be supported in Uno.Core
    - powershell: .\build\Install-WindowsSdkISO.ps1 19041
      displayName: Install Windows SDK 19041

    - task: MSBuild@1
      displayName: 'Build solution'
      inputs:
        solution: src/Uno.Toolkit.sln
        configuration: Release
        msbuildLocationMethod: version
        msbuildVersion: latest
        maximumCpuCount: true
        msbuildArguments: /m /v:m /r /p:GeneratePackageOnBuild=true /p:UseDotNetNativeToolchain=false /p:AotAssemblies=false "/p:PackageVersion=$(GitVersion.FullSemVer)" "/p:InformationalVersion=$(GitVersion.InformationalVersion)" /detailedsummary /bl:$(build.artifactstagingdirectory)/toolkit-build-packages.binlog

    - task: DotNetCoreInstaller@0
      inputs:
        version: '2.1.504'

    - task: PowerShell@2
      displayName: Authenticode Sign Packages
      inputs:
        filePath: build/Sign-Package.ps1
      env:
        SignClientUser: $(SignClientUser)
        SignClientSecret: $(SignClientSecret)
        SignPackageName: "Uno.Toolkit"
        SignPackageDescription: "Uno.Toolkit"
        ArtifactDirectory: $(build.artifactstagingdirectory)
      condition: and(succeeded(), not(eq(variables['build.reason'], 'PullRequest')), not(eq(variables['SignClientSecret'], '')), not(eq(variables['SignClientUser'], '')))

    - task: PublishBuildArtifacts@1
      condition: always()
      displayName: 'Publish artifact'
      inputs:
        PathtoPublish: $(build.artifactstagingdirectory)
        ArtifactName: uno-ui-toolkit-drop
        ArtifactType: Container
