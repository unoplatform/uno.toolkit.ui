jobs:
- job: iOS

  timeoutInMinutes: 90

  strategy:
    maxParallel: 2
    matrix:
      WinUI:
        ArtifactName: ios-winui
        ProjectName: Uno.Toolkit.WinUI.Samples
        ApplicationBuildNumberOffset: 50
        VersionCodeOffset: 50
        CI_Build: true
      UWP:
        ArtifactName: ios-uwp
        ProjectName: Uno.Toolkit.Samples
        ApplicationBuildNumberOffset: 50
        VersionCodeOffset: 50
        CI_Build: true
  pool:
    vmImage: 'macOS-12'

  variables:
   - group: unoplatform.apple.ios.appstore.distribution

  steps:
  - task: InstallAppleCertificate@2
    displayName: Install Certificate
    inputs:
      certSecureFile: UnoPlatform-Apple-Distribution.p12
      certPwd: '$(appleappstorecertificatepassword)'
      keychain: temp
      deleteCert: true

  - task: InstallAppleProvisioningProfile@1
    displayName: 'Install Apple Provisioning Profile (UWP)'
    condition: eq(variables['IsCanaryBranch'], false)
    inputs:
      provisioningProfileLocation: 'secureFiles'
      provProfileSecureFile: Uno_Toolkit_UWP_iOS.mobileprovision

  - task: InstallAppleProvisioningProfile@1
    displayName: 'Install Apple Provisioning Profile (UWP Canary)'
    condition: eq(variables['IsCanaryBranch'], true)
    inputs:
      provisioningProfileLocation: 'secureFiles'
      provProfileSecureFile: Uno_Toolkit_UWP_Canary_iOS.mobileprovision

  - task: InstallAppleProvisioningProfile@1
    displayName: 'Install Apple Provisioning Profile (WinUI)'
    condition: eq(variables['IsCanaryBranch'], false)
    inputs:
      provisioningProfileLocation: 'secureFiles'
      provProfileSecureFile: Uno_Toolkit_iOS.mobileprovision

  - task: InstallAppleProvisioningProfile@1
    displayName: 'Install Apple Provisioning Profile (WinUI Canary)'
    condition: eq(variables['IsCanaryBranch'], true)
    inputs:
      provisioningProfileLocation: 'secureFiles'
      provProfileSecureFile: Uno_Toolkit_Canary_iOS.mobileprovision

  - template: templates/dotnet-workload-install-mac.yml
  - template: templates/canary-updater.yml
  - template: templates/gitversion.yml
  - template: templates/set-app-versions.yml

  - bash: |
      cd $(build.sourcesdirectory)/samples/$(ProjectName)/$(ProjectName).Mobile
      echo "BUILD_SOURCEBRANCH: $BUILD_SOURCEBRANCH"
      dotnet publish -f net7.0-ios -c Release /p:ArchiveOnBuild=true "/p:InformationalVersion=%GITVERSION_InformationalVersion%" "/bl:$(build.artifactstagingdirectory)/toolkit-build-$(ArtifactName).binlog"
    displayName: Build project for Release - (net7.0-ios)
    condition: eq(variables['System.PullRequest.IsFork'],'False')

  - bash: |
      cd $(build.sourcesdirectory)/samples/$(ProjectName)/$(ProjectName).Mobile
      echo "BUILD_SOURCEBRANCH: $BUILD_SOURCEBRANCH"
      dotnet build -f net7.0-ios -c Release "/p:InformationalVersion=%GITVERSION_InformationalVersion%" "/bl:$(build.artifactstagingdirectory)/toolkit-build-$(ArtifactName).binlog"
    displayName: Build project for Release - (net7.0-ios)
    condition: eq(variables['System.PullRequest.IsFork'],'True')

  - task: CopyFiles@2
    displayName: 'Publish Binaries'
    condition: eq(variables['System.PullRequest.IsFork'],'False')
    retryCountOnTaskFailure: 3
    inputs:
      SourceFolder: $(build.sourcesdirectory)/samples/$(ProjectName)/$(ProjectName).Mobile/bin/Release
      Contents: |
        **/*.ipa
      TargetFolder: $(build.artifactstagingdirectory)
      CleanTargetFolder: false
      OverWrite: false
      flattenFolders: false

  - task: PublishBuildArtifacts@1
    retryCountOnTaskFailure: 3
    condition: always()
    inputs:
      ArtifactName: $(ArtifactName)
