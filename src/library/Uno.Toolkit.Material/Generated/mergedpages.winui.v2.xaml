<ResourceDictionary xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" mc:Ignorable="d mobile todo not_win android ios wasm macos" xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mobile="http://uno.ui/mobile" xmlns:not_mobile="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:todo="what should be done" xmlns:toolkit="using:Uno.UI.Toolkit" xmlns:um="using:Uno.Material" xmlns:utu="using:Uno.Toolkit.UI" xmlns:not_win="http://uno.ui/not_win" xmlns:win="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:android="http://uno.ui/android" xmlns:ios="http://uno.ui/ios" xmlns:wasm="http://uno.ui/wasm" xmlns:macos="http://uno.ui/macos" xmlns:contract4Present="http://schemas.microsoft.com/winfx/2006/xaml/presentation?IsApiContractPresent(Windows.Foundation.UniversalApiContract,4)" xmlns:contract6Present="http://schemas.microsoft.com/winfx/2006/xaml/presentation?IsApiContractPresent(Windows.Foundation.UniversalApiContract,6)" xmlns:contract7Present="http://schemas.microsoft.com/winfx/2006/xaml/presentation?IsApiContractPresent(Windows.Foundation.UniversalApiContract,7)" xmlns:contract7NotPresent="http://schemas.microsoft.com/winfx/2006/xaml/presentation?IsApiContractNotPresent(Windows.Foundation.UniversalApiContract,7)" xmlns:contract8Present="http://schemas.microsoft.com/winfx/2006/xaml/presentation?IsApiContractPresent(Windows.Foundation.UniversalApiContract,8)" xmlns:contract12Present="http://schemas.microsoft.com/winfx/2006/xaml/presentation?IsApiContractPresent(Windows.Foundation.UniversalApiContract,12)" xmlns:contract12NotPresent="http://schemas.microsoft.com/winfx/2006/xaml/presentation?IsApiContractNotPresent(Windows.Foundation.UniversalApiContract,12)" xmlns:contract6NotPresent="http://schemas.microsoft.com/winfx/2006/xaml/presentation?IsApiContractNotPresent(Windows.Foundation.UniversalApiContract,6)" xmlns:contract5NotPresent="http://schemas.microsoft.com/winfx/2006/xaml/presentation?IsApiContractNotPresent(Windows.Foundation.UniversalApiContract,5)" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
  <ResourceDictionary.MergedDictionaries>
    <um:MaterialFonts />
    <um:MaterialColorsV2 />
    <um:MaterialResourcesV2 />
  </ResourceDictionary.MergedDictionaries>
  <!--origin: Styles\Controls\v2\BottomTabBar.xaml-->
  <StaticResource x:Key="M3MaterialBottomTabBarBackground" ResourceKey="SurfaceBrush" />
  <StaticResource x:Key="M3MaterialBottomTabBarItemBackground" ResourceKey="SystemControlTransparentBrush" />
  <StaticResource x:Key="M3MaterialBottomTabBarItemBackgroundPointerOver" ResourceKey="OnSurfaceVariantHoverBrush" />
  <StaticResource x:Key="M3MaterialBottomTabBarItemBackgroundPressed" ResourceKey="OnSurfaceVariantPressedBrush" />
  <StaticResource x:Key="M3MaterialBottomTabBarItemBackgroundSelected" ResourceKey="SystemControlTransparentBrush" />
  <StaticResource x:Key="M3MaterialBottomTabBarItemBackgroundSelectedPointerOver" ResourceKey="OnSurfaceHoverBrush" />
  <StaticResource x:Key="M3MaterialBottomTabBarItemBackgroundSelectedPressed" ResourceKey="OnSurfacePressedBrush" />
  <StaticResource x:Key="M3MaterialBottomTabBarItemForeground" ResourceKey="OnSurfaceVariantBrush" />
  <StaticResource x:Key="M3MaterialBottomTabBarItemForegroundPointerOver" ResourceKey="OnSurfaceVariantBrush" />
  <StaticResource x:Key="M3MaterialBottomTabBarItemForegroundPressed" ResourceKey="OnSurfaceVariantBrush" />
  <StaticResource x:Key="M3MaterialBottomTabBarItemForegroundDisabled" ResourceKey="SystemControlDisabledBaseMediumLowBrush" />
  <StaticResource x:Key="M3MaterialBottomTabBarItemForegroundSelected" ResourceKey="OnSurfaceBrush" />
  <StaticResource x:Key="M3MaterialBottomTabBarItemForegroundSelectedPointerOver" ResourceKey="OnSurfaceBrush" />
  <StaticResource x:Key="M3MaterialBottomTabBarItemForegroundSelectedPressed" ResourceKey="OnSurfaceBrush" />
  <StaticResource x:Key="M3MaterialBottomTabBarItemBorderBrush" ResourceKey="SystemControlTransparentBrush" />
  <StaticResource x:Key="M3MaterialBottomTabBarItemIconForeground" ResourceKey="OnSurfaceVariantBrush" />
  <StaticResource x:Key="M3MaterialBottomTabBarItemIconForegroundSelected" ResourceKey="OnSecondaryContainerBrush" />
  <StaticResource x:Key="M3MaterialBottomTabBarItemActiveIndicatorBackgroundSelected" ResourceKey="SecondaryContainerBrush" />
  <SolidColorBrush x:Key="M3MaterialBottomTabBarBackgroundTint" Opacity="0.08" Color="{ThemeResource PrimaryColor}" />
  <StaticResource x:Key="M3MaterialBottomFabTabBarItemDisabledBackground" ResourceKey="SystemControlTransparentBrush" />
  <StaticResource x:Key="M3MaterialBottomFabTabBarItemDisabledForeground" ResourceKey="OnSurfaceDisabledBrush" />
  <StaticResource x:Key="M3MaterialBottomFabTabBarItemPointerOverStateOverlay" ResourceKey="OnPrimaryContainerHoverBrush" />
  <StaticResource x:Key="M3MaterialBottomFabTabBarItemFocusedStateOverlay" ResourceKey="OnPrimaryContainerFocusedBrush" />
  <StaticResource x:Key="M3MaterialBottomFabTabBarItemPressedStateOverlay" ResourceKey="OnPrimaryContainerPressedBrush" />
  <StaticResource x:Key="M3MaterialBottomFabTabBarItemDisabledStateOverlay" ResourceKey="OnSurfaceDisabledLowBrush" />
  <x:Double x:Key="M3MaterialBottomTabBarFontSize">12</x:Double>
  <FontWeight x:Key="M3MaterialBottomTabBarFontWeight">Medium</FontWeight>
  <x:Double x:Key="M3MaterialBottomTabBarHeight">80</x:Double>
  <GridLength x:Key="M3MaterialBottomTabBarGridLengthHeight">80</GridLength>
  <x:Double x:Key="FabItemVerticalOffset">-32</x:Double>
  <x:Double x:Key="M3MaterialBottomTabBarItemIconHeight">16</x:Double>
  <x:Double x:Key="M3MaterialBottomTabBarItemIconWidth">16</x:Double>
  <Thickness x:Key="M3MaterialBottomTabBarItemContentMargin">0,0,0,6</Thickness>
  <Thickness x:Key="M3MaterialBottomTabBarItemContentOnlyMargin">12,0</Thickness>
  <CornerRadius x:Key="M3MaterialBottomTabBarItemActiveIndicatorCornerRadius">16</CornerRadius>
  <Thickness x:Key="M3MaterialBottomTabBarItemActiveIndicatorPadding">26,10</Thickness>
  <x:Double x:Key="AjustedMaterialBottomTabBarHeight">108</x:Double>
  <Thickness x:Key="M3MaterialBottomFabTabBarItemPadding">16</Thickness>
  <x:Double x:Key="M3MaterialBottomFabTabBarItemContentWidthOrHeight">18</x:Double>
  <CornerRadius x:Key="M3MaterialBottomFabTabBarItemCornerRadius">16</CornerRadius>
  <x:Double x:Key="M3MaterialBottomFabTabBarItemIconTextPadding">12</x:Double>
  <Style x:Key="M3MaterialBottomTabBarStyle" TargetType="utu:TabBar">
    <Setter Property="Background" Value="{ThemeResource M3MaterialBottomTabBarBackground}" />
    <Setter Property="IsTabStop" Value="False" />
    <Setter Property="toolkit:VisibleBoundsPadding.PaddingMask" Value="Bottom" />
    <Setter Property="ItemsPanel">
      <Setter.Value>
        <ItemsPanelTemplate>
          <utu:TabBarListPanel />
        </ItemsPanelTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="ItemContainerStyle" Value="{StaticResource M3MaterialBottomTabBarItemStyle}" />
    <!--  Workaround until this issue is fixed, can be removed after  -->
    <!--  https://github.com/unoplatform/uno/issues/7393  -->
    <Setter Property="VerticalContentAlignment" Value="Bottom" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="utu:TabBar">
          <!--  Code can be used when this issue is fixed in Uno:  -->
          <!--  https://github.com/unoplatform/uno/issues/7393  -->
          <todo:Grid x:Name="TabBarGrid" Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
            <ItemsPresenter Height="{StaticResource M3MaterialBottomTabBarHeight}" />
          </todo:Grid>
          <!--  Workaround until the above issue is fixed, can be removed after  -->
          <Grid x:Name="TabBarGrid">
            <Grid.RowDefinitions>
              <RowDefinition Height="Auto" />
              <RowDefinition Height="{StaticResource M3MaterialBottomTabBarGridLengthHeight}" />
              <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <Border x:Name="BackgroundBorder" Grid.Row="1" Height="{StaticResource M3MaterialBottomTabBarHeight}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Background="{TemplateBinding Background}" />
            <Border Grid.Row="1" Height="{StaticResource M3MaterialBottomTabBarHeight}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Background="{StaticResource M3MaterialBottomTabBarBackgroundTint}" />
            <ItemsPresenter Grid.RowSpan="2" Height="{StaticResource AjustedMaterialBottomTabBarHeight}" />
            <Border x:Name="VisibleBoundsBorder" Grid.Row="2" Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}" />
            <Border Grid.Row="2" Padding="{TemplateBinding Padding}" Background="{StaticResource M3MaterialBottomTabBarBackgroundTint}" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="M3MaterialBottomFabTabBarItemStyle" TargetType="utu:TabBarItem">
    <Setter Property="Background" Value="{ThemeResource PrimaryBrush}" />
    <Setter Property="Foreground" Value="{ThemeResource OnPrimaryBrush}" />
    <Setter Property="BorderBrush" Value="{ThemeResource M3MaterialBottomTabBarItemBorderBrush}" />
    <Setter Property="FontFamily" Value="{StaticResource MaterialMediumFontFamily}" />
    <Setter Property="FontSize" Value="{StaticResource M3MaterialBottomTabBarFontSize}" />
    <Setter Property="FontWeight" Value="Normal" />
    <Setter Property="IsSelectable" Value="False" />
    <Setter Property="UseSystemFocusVisuals" Value="True" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="HorizontalContentAlignment" Value="Center" />
    <Setter Property="CornerRadius" Value="{StaticResource M3MaterialBottomFabTabBarItemCornerRadius}" />
    <Setter Property="Padding" Value="{StaticResource M3MaterialBottomFabTabBarItemPadding}" />
    <!--  Code can be uncommented when this issue is fixed in Uno:  -->
    <!--  https://github.com/unoplatform/uno/issues/7393  -->
    <!--<Setter Property="RenderTransform">	
			<Setter.Value>	
				<TranslateTransform Y="{StaticResource FabItemVerticalOffset}" />	
			</Setter.Value>	
		</Setter>-->
    <!--  Workaround until the above issue is fixed, can be removed after  -->
    <Setter Property="VerticalAlignment" Value="Top" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="utu:TabBarItem">
          <Grid VerticalAlignment="{TemplateBinding VerticalAlignment}">
            <toolkit:ElevatedView x:Name="ElevatedView" Margin="0,0,6,6" HorizontalAlignment="Center" Background="Transparent" CornerRadius="{TemplateBinding CornerRadius}" Elevation="6">
              <um:Ripple x:Name="Ripple" CornerRadius="{TemplateBinding CornerRadius}" Feedback="{TemplateBinding Foreground}" FeedbackOpacity="{StaticResource PressedOpacity}">
                <Grid x:Name="Root" Background="{TemplateBinding Background}">
                  <StackPanel x:Name="ContentPanel" Margin="{TemplateBinding Padding}" Orientation="Horizontal">
                    <!--  Icon  -->
                    <Viewbox Width="{StaticResource M3MaterialBottomFabTabBarItemContentWidthOrHeight}" Height="{StaticResource M3MaterialBottomFabTabBarItemContentWidthOrHeight}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Visibility="{Binding Path=Icon, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource MaterialNullToCollapsedConverter}, FallbackValue=Collapsed, TargetNullValue=Collapsed}">
                      <ContentPresenter x:Name="IconPresenter" Content="{TemplateBinding Icon}" Foreground="{Binding Path=Foreground, RelativeSource={RelativeSource TemplatedParent}}" />
                    </Viewbox>
                    <!--  Icon/Content spacing  -->
                    <Border Visibility="{Binding Path=Content, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource MaterialEmptyToCollapsed}, FallbackValue=Collapsed, TargetNullValue=Collapsed}">
                      <Border Width="{StaticResource M3MaterialBottomFabTabBarItemIconTextPadding}" Visibility="{Binding Path=Icon, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource MaterialNullToCollapsedConverter}, FallbackValue=Collapsed, TargetNullValue=Collapsed}" />
                    </Border>
                    <!--  Content  -->
                    <ContentPresenter x:Name="ContentPresenter" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" ContentTransitions="{TemplateBinding ContentTransitions}" FontFamily="{TemplateBinding FontFamily}" FontSize="{TemplateBinding FontSize}" />
                  </StackPanel>
                  <Border x:Name="StateOverlay" />
                </Grid>
              </um:Ripple>
            </toolkit:ElevatedView>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="PointerOver">
                  <VisualState.Setters>
                    <Setter Target="StateOverlay.Background" Value="{StaticResource M3MaterialBottomFabTabBarItemPointerOverStateOverlay}" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="Pressed">
                  <VisualState.Setters>
                    <Setter Target="StateOverlay.Background" Value="{StaticResource M3MaterialBottomFabTabBarItemPressedStateOverlay}" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="Disabled">
                  <VisualState.Setters>
                    <Setter Target="IconPresenter.Foreground" Value="{StaticResource M3MaterialBottomFabTabBarItemDisabledForeground}" />
                    <Setter Target="ContentPresenter.Foreground" Value="{StaticResource M3MaterialBottomFabTabBarItemDisabledForeground}" />
                    <Setter Target="Root.Background" Value="{StaticResource M3MaterialBottomFabTabBarItemDisabledBackground}" />
                    <Setter Target="StateOverlay.Background" Value="{StaticResource M3MaterialBottomFabTabBarItemDisabledStateOverlay}" />
                  </VisualState.Setters>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="FocusStates">
                <VisualState x:Name="Focused">
                  <VisualState.Setters>
                    <Setter Target="StateOverlay.Background" Value="{StaticResource M3MaterialBottomFabTabBarItemFocusedStateOverlay}" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="PointerFocused" />
                <VisualState x:Name="Unfocused" />
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="M3MaterialBottomTabBarItemStyle" TargetType="utu:TabBarItem">
    <Setter Property="Background" Value="{ThemeResource M3MaterialBottomTabBarItemBackground}" />
    <Setter Property="Foreground" Value="{ThemeResource M3MaterialBottomTabBarItemForeground}" />
    <Setter Property="BorderBrush" Value="{ThemeResource M3MaterialBottomTabBarItemBorderBrush}" />
    <Setter Property="FontFamily" Value="{StaticResource MaterialMediumFontFamily}" />
    <Setter Property="FontSize" Value="{StaticResource M3MaterialBottomTabBarFontSize}" />
    <Setter Property="FontWeight" Value="{StaticResource M3MaterialBottomTabBarFontWeight}" />
    <Setter Property="UseSystemFocusVisuals" Value="True" />
    <Setter Property="HorizontalContentAlignment" Value="Center" />
    <!--  Workaround with these two properties until this issue is fixed, can be removed after  -->
    <!--  https://github.com/unoplatform/uno/issues/7393  -->
    <Setter Property="Height" Value="{StaticResource M3MaterialBottomTabBarHeight}" />
    <Setter Property="VerticalAlignment" Value="Bottom" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="utu:TabBarItem">
          <Grid x:Name="LayoutRoot" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Control.IsTemplateFocusTarget="True">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="PointerStates">
                <VisualState x:Name="Normal" />
                <not_mobile:VisualState x:Name="PointerOver">
                  <VisualState.Setters>
                    <Setter Target="StateOverlay.Background" Value="{ThemeResource M3MaterialBottomTabBarItemBackgroundPointerOver}" />
                    <Setter Target="PointerRectangle.Fill" Value="{ThemeResource M3MaterialBottomTabBarItemBackgroundPointerOver}" />
                    <Setter Target="Icon.Foreground" Value="{ThemeResource M3MaterialBottomTabBarItemForegroundPointerOver}" />
                    <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource M3MaterialBottomTabBarItemForegroundPointerOver}" />
                  </VisualState.Setters>
                </not_mobile:VisualState>
                <VisualState x:Name="Pressed">
                  <VisualState.Setters>
                    <Setter Target="StateOverlay.Background" Value="{ThemeResource M3MaterialBottomTabBarItemBackgroundPressed}" />
                    <Setter Target="PointerRectangle.Fill" Value="{ThemeResource M3MaterialBottomTabBarItemBackgroundPressed}" />
                    <Setter Target="Icon.Foreground" Value="{ThemeResource M3MaterialBottomTabBarItemForegroundPressed}" />
                    <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource M3MaterialBottomTabBarItemForegroundPressed}" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="Selected">
                  <VisualState.Setters>
                    <Setter Target="ActiveIndicator.Background" Value="{ThemeResource M3MaterialBottomTabBarItemActiveIndicatorBackgroundSelected}" />
                    <Setter Target="StateOverlay.Background" Value="{ThemeResource M3MaterialBottomTabBarItemBackgroundSelected}" />
                    <Setter Target="PointerRectangle.Fill" Value="{ThemeResource M3MaterialBottomTabBarItemBackgroundSelected}" />
                    <Setter Target="Icon.Foreground" Value="{ThemeResource M3MaterialBottomTabBarItemIconForegroundSelected}" />
                    <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource M3MaterialBottomTabBarItemForegroundSelected}" />
                  </VisualState.Setters>
                </VisualState>
                <not_mobile:VisualState x:Name="PointerOverSelected">
                  <VisualState.Setters>
                    <Setter Target="ActiveIndicator.Background" Value="{ThemeResource M3MaterialBottomTabBarItemActiveIndicatorBackgroundSelected}" />
                    <Setter Target="StateOverlay.Background" Value="{ThemeResource M3MaterialBottomTabBarItemBackgroundSelectedPointerOver}" />
                    <Setter Target="PointerRectangle.Fill" Value="{ThemeResource M3MaterialBottomTabBarItemBackgroundSelectedPointerOver}" />
                    <Setter Target="Icon.Foreground" Value="{ThemeResource M3MaterialBottomTabBarItemForegroundSelectedPointerOver}" />
                    <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource M3MaterialBottomTabBarItemForegroundSelectedPointerOver}" />
                  </VisualState.Setters>
                </not_mobile:VisualState>
                <VisualState x:Name="PressedSelected">
                  <VisualState.Setters>
                    <Setter Target="ActiveIndicator.Background" Value="{ThemeResource M3MaterialBottomTabBarItemActiveIndicatorBackgroundSelected}" />
                    <Setter Target="StateOverlay.Background" Value="{ThemeResource M3MaterialBottomTabBarItemBackgroundSelectedPressed}" />
                    <Setter Target="PointerRectangle.Fill" Value="{ThemeResource M3MaterialBottomTabBarItemBackgroundSelectedPressed}" />
                    <Setter Target="Icon.Foreground" Value="{ThemeResource M3MaterialBottomTabBarItemForegroundSelectedPressed}" />
                    <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource M3MaterialBottomTabBarItemForegroundSelectedPressed}" />
                  </VisualState.Setters>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="DisabledStates">
                <VisualState x:Name="Enabled" />
                <VisualState x:Name="Disabled">
                  <VisualState.Setters>
                    <Setter Target="Icon.Foreground" Value="{ThemeResource M3MaterialBottomTabBarItemForegroundDisabled}" />
                    <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource M3MaterialBottomTabBarItemForegroundDisabled}" />
                  </VisualState.Setters>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="TabBarIconPositionStates">
                <VisualState x:Name="IconOnTop" />
                <VisualState x:Name="IconOnly">
                  <VisualState.Setters>
                    <Setter Target="PointerRectangle.Visibility" Value="Visible" />
                    <Setter Target="ContentPresenter.Visibility" Value="Collapsed" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="ContentOnly">
                  <VisualState.Setters>
                    <Setter Target="IconBox.Visibility" Value="Collapsed" />
                    <Setter Target="ContentPresenter.Margin" Value="{StaticResource M3MaterialBottomTabBarItemContentOnlyMargin}" />
                    <Setter Target="IconRow.Height" Value="0" />
                    <Setter Target="ContentRow.Height" Value="*" />
                  </VisualState.Setters>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <um:Ripple x:Name="RippleControl" Padding="{TemplateBinding Padding}" AutomationProperties.AccessibilityView="Raw" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding CornerRadius}" Feedback="{ThemeResource OnSurfaceBrush}" FeedbackOpacity="{StaticResource PressedOpacity}">
              <um:Ripple.Content>
                <Grid>
                  <Rectangle x:Name="PointerRectangle" Fill="Transparent" Visibility="Collapsed" />
                  <Grid x:Name="ContentGrid">
                    <Grid.RowDefinitions>
                      <RowDefinition x:Name="IconRow" Height="*" />
                      <RowDefinition x:Name="ContentRow" Height="Auto" />
                    </Grid.RowDefinitions>
                    <Grid x:Name="ActiveIndicator" Padding="{StaticResource M3MaterialBottomTabBarItemActiveIndicatorPadding}" CornerRadius="{StaticResource M3MaterialBottomTabBarItemActiveIndicatorCornerRadius}">
                      <Viewbox x:Name="IconBox" Width="{StaticResource M3MaterialBottomTabBarItemIconWidth}" Height="{StaticResource M3MaterialBottomTabBarItemIconHeight}">
                        <ContentPresenter x:Name="Icon" Content="{TemplateBinding Icon}" Foreground="{StaticResource M3MaterialBottomTabBarItemIconForeground}" />
                      </Viewbox>
                    </Grid>
                    <Border x:Name="StateOverlay" CornerRadius="{StaticResource M3MaterialBottomTabBarItemActiveIndicatorCornerRadius}" />
                    <ContentPresenter x:Name="ContentPresenter" Grid.Row="1" Margin="{StaticResource M3MaterialBottomTabBarItemContentMargin}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" AutomationProperties.AccessibilityView="Raw" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}" ContentTransitions="{TemplateBinding ContentTransitions}" FontSize="{TemplateBinding FontSize}" Foreground="{TemplateBinding Foreground}" TextWrapping="NoWrap" />
                  </Grid>
                </Grid>
              </um:Ripple.Content>
            </um:Ripple>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <!--origin: Styles\Controls\v2\Card.xaml-->
  <StaticResource x:Key="M3MaterialElevatedCardBackground" ResourceKey="SurfaceBrush" />
  <StaticResource x:Key="M3MaterialFilledCardBackground" ResourceKey="SurfaceVariantBrush" />
  <StaticResource x:Key="M3MaterialOutlinedCardBackground" ResourceKey="SurfaceBrush" />
  <StaticResource x:Key="M3MaterialOutlinedCardBorderBrush" ResourceKey="OutlineBrush" />
  <x:Double x:Key="M3MaterialCardMinHeight">72</x:Double>
  <x:Double x:Key="M3MaterialCardMaxWidth">344</x:Double>
  <Thickness x:Key="M3MaterialCardPadding">16</Thickness>
  <Thickness x:Key="M3MaterialCardBorderThickness">1</Thickness>
  <CornerRadius x:Key="M3MaterialCardCornerRadius">12</CornerRadius>
  <x:Double x:Key="M3MaterialCardElevation">6</x:Double>
  <Thickness x:Key="M3MaterialCardElevationMargin">6</Thickness>
  <DataTemplate x:Key="M3DefaultHeaderContentTemplate">
    <TextBlock Text="{Binding}" MaxLines="1" Margin="16,16,16,0" Style="{ThemeResource TitleMedium}" />
  </DataTemplate>
  <DataTemplate x:Key="M3DefaultSubHeaderContentTemplate">
    <TextBlock Text="{Binding}" MaxLines="2" Margin="16,0,16,16" Foreground="{ThemeResource OnSurfaceMediumBrush}" Style="{ThemeResource LabelSmall}" />
  </DataTemplate>
  <DataTemplate x:Key="M3DefaultSupportingContentTemplate">
    <TextBlock Text="{Binding}" Margin="16,0,16,16" Foreground="{ThemeResource OnSurfaceMediumBrush}" Style="{ThemeResource BodyMedium}" />
  </DataTemplate>
  <DataTemplate x:Key="M3DefaultAvatarSupportingContentTemplate">
    <TextBlock Text="{Binding}" Margin="16,12,16,16" Foreground="{ThemeResource OnSurfaceMediumBrush}" Style="{ThemeResource BodyMedium}" />
  </DataTemplate>
  <DataTemplate x:Key="M3DefaultSmallMediaSupportingContentTemplate">
    <Border BorderThickness="0,1,0,0" BorderBrush="{ThemeResource OnSurfaceMediumBrush}">
      <TextBlock Text="{Binding}" Margin="16,12,16,16" Foreground="{ThemeResource OnSurfaceMediumBrush}" Style="{ThemeResource BodyMedium}" />
    </Border>
  </DataTemplate>
  <DataTemplate x:Key="M3DefaultMediaContentTemplate">
    <Image Source="{Binding}" Stretch="Uniform" MaxHeight="194" />
  </DataTemplate>
  <DataTemplate x:Key="M3DefaultSmallMediaContentTemplate">
    <Image Source="{Binding}" Stretch="Uniform" MaxHeight="94" VerticalAlignment="Top" />
  </DataTemplate>
  <DataTemplate x:Key="M3DefaultAvatarContentTemplate">
    <Image Source="{Binding}" Stretch="Uniform" MaxHeight="40" />
  </DataTemplate>
  <Style x:Key="M3MaterialBaseCardStyle" TargetType="utu:Card">
    <Setter Property="MinHeight" Value="{StaticResource M3MaterialCardMinHeight}" />
    <Setter Property="MaxWidth" Value="{StaticResource M3MaterialCardMaxWidth}" />
    <Setter Property="CornerRadius" Value="{StaticResource M3MaterialCardCornerRadius}" />
    <Setter Property="Margin" Value="{StaticResource M3MaterialCardElevationMargin}" />
    <Setter Property="Padding" Value="{StaticResource M3MaterialCardPadding}" />
    <Setter Property="HeaderContentTemplate" Value="{StaticResource M3DefaultHeaderContentTemplate}" />
    <Setter Property="SubHeaderContentTemplate" Value="{StaticResource M3DefaultSubHeaderContentTemplate}" />
    <Setter Property="SupportingContentTemplate" Value="{StaticResource M3DefaultSupportingContentTemplate}" />
    <Setter Property="MediaContentTemplate" Value="{StaticResource M3DefaultMediaContentTemplate}" />
    <Setter Property="HorizontalAlignment" Value="Stretch" />
    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
  </Style>
  <Style x:Key="M3MaterialAvatarBaseCardStyle" BasedOn="{StaticResource M3MaterialBaseCardStyle}" TargetType="utu:Card">
    <Setter Property="SupportingContentTemplate" Value="{StaticResource M3DefaultAvatarSupportingContentTemplate}" />
    <Setter Property="AvatarContentTemplate" Value="{StaticResource M3DefaultAvatarContentTemplate}" />
  </Style>
  <Style x:Key="M3MaterialSmallMediaBaseCardStyle" BasedOn="{StaticResource M3MaterialBaseCardStyle}" TargetType="utu:Card">
    <Setter Property="Padding" Value="0" />
    <Setter Property="VerticalAlignment" Value="Stretch" />
    <Setter Property="VerticalContentAlignment" Value="Stretch" />
    <Setter Property="MediaContentTemplate" Value="{StaticResource M3DefaultSmallMediaContentTemplate}" />
    <Setter Property="SupportingContentTemplate" Value="{StaticResource M3DefaultSmallMediaSupportingContentTemplate}" />
  </Style>
  <Style x:Key="M3MaterialFilledCardStyle" TargetType="utu:Card" BasedOn="{StaticResource M3MaterialBaseCardStyle}">
    <Setter Property="Background" Value="{StaticResource M3MaterialFilledCardBackground}" />
    <Setter Property="VerticalAlignment" Value="Stretch" />
    <Setter Property="VerticalContentAlignment" Value="Stretch" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="utu:Card">
          <Grid x:Name="GridRoot" MinWidth="{TemplateBinding MinWidth}" MinHeight="{TemplateBinding MinHeight}" MaxWidth="{TemplateBinding MaxWidth}" MaxHeight="{TemplateBinding MaxHeight}" Margin="{TemplateBinding Margin}" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" CornerRadius="{TemplateBinding CornerRadius}" BorderThickness="{TemplateBinding BorderThickness}" HorizontalAlignment="{TemplateBinding HorizontalAlignment}">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal">
                  <VisualState.Setters>
                    <Setter Target="HoverOverlay.Opacity" Value="0" />
                    <Setter Target="FocusedOverlay.Opacity" Value="0" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="PointerOver">
                  <Storyboard>
                    <DoubleAnimation Storyboard.TargetName="HoverOverlay" Storyboard.TargetProperty="Opacity" Duration="{StaticResource MaterialAnimationDuration}" From="0" To="1">
                      <DoubleAnimation.EasingFunction>
                        <CubicEase EasingMode="EaseIn" />
                      </DoubleAnimation.EasingFunction>
                    </DoubleAnimation>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Pressed">
                  <Storyboard>
                    <DoubleAnimation Storyboard.TargetName="HoverOverlay" Storyboard.TargetProperty="Opacity" Duration="{StaticResource MaterialAnimationDuration}" To="0">
                      <DoubleAnimation.EasingFunction>
                        <CubicEase EasingMode="EaseIn" />
                      </DoubleAnimation.EasingFunction>
                    </DoubleAnimation>
                    <DoubleAnimation Storyboard.TargetName="FocusedOverlay" Storyboard.TargetProperty="Opacity" Duration="{StaticResource MaterialAnimationDuration}" To="0">
                      <DoubleAnimation.EasingFunction>
                        <CubicEase EasingMode="EaseIn" />
                      </DoubleAnimation.EasingFunction>
                    </DoubleAnimation>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Disabled">
                  <VisualState.Setters>
                    <Setter Target="HoverOverlay.Opacity" Value="0" />
                    <Setter Target="FocusedOverlay.Opacity" Value="0" />
                    <Setter Target="GridRoot.Opacity" Value="0.38" />
                  </VisualState.Setters>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="FocusStates">
                <VisualState x:Name="Focused">
                  <VisualState.Setters>
                    <Setter Target="FocusedOverlay.Opacity" Value="1" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="PointerFocused" />
                <VisualState x:Name="Unfocused">
                  <VisualState.Setters>
                    <Setter Target="FocusedOverlay.Opacity" Value="0" />
                  </VisualState.Setters>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid.RowDefinitions>
              <RowDefinition Height="Auto" />
              <RowDefinition Height="Auto" />
              <RowDefinition Height="Auto" />
              <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <!--  Border for PointerOver State  -->
            <Border Grid.RowSpan="4" x:Name="HoverOverlay" Background="{StaticResource OnSurfaceHoverBrush}" Opacity="0" />
            <!--  Border for Focused State  -->
            <Border Grid.RowSpan="4" x:Name="FocusedOverlay" Background="{StaticResource OnSurfaceFocusedBrush}" Opacity="0" />
            <!--  Media content part  -->
            <ContentPresenter x:Name="MediaContentPresenter" Content="{TemplateBinding MediaContent}" ContentTemplate="{TemplateBinding MediaContentTemplate}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" AutomationProperties.AccessibilityView="Raw" IsHitTestVisible="False" Visibility="{Binding MediaContent, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource MaterialEmptyOrNullToCollapsed}}" />
            <!--  Header part  -->
            <ContentPresenter Grid.Row="1" x:Name="HeaderContentPresenter" Content="{TemplateBinding HeaderContent}" ContentTemplate="{TemplateBinding HeaderContentTemplate}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" AutomationProperties.AccessibilityView="Raw" Visibility="{Binding HeaderContent, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource MaterialEmptyOrNullToCollapsed}}" />
            <!--  SubHeader part  -->
            <ContentPresenter Grid.Row="2" x:Name="SubHeaderContentPresenter" Content="{TemplateBinding SubHeaderContent}" ContentTemplate="{TemplateBinding SubHeaderContentTemplate}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" AutomationProperties.AccessibilityView="Raw" Visibility="{Binding SubHeaderContent, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource MaterialEmptyOrNullToCollapsed}}" />
            <!--  Ripple effect  -->
            <um:Ripple Grid.RowSpan="4" Feedback="{StaticResource OnSurfaceFocusedBrush}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{StaticResource M3MaterialCardCornerRadius}" Padding="{TemplateBinding Padding}" AutomationProperties.AccessibilityView="Raw" />
            <!--  Supporting Content part  -->
            <ContentPresenter Grid.Row="3" x:Name="SupportingContentPresenter" Content="{TemplateBinding SupportingContent}" ContentTemplate="{TemplateBinding SupportingContentTemplate}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" AutomationProperties.AccessibilityView="Raw" Visibility="{Binding SupportingContent, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource MaterialEmptyOrNullToCollapsed}}" />
            <!--  Icons section part  -->
            <ContentPresenter Grid.Row="3" x:Name="IconsContentPresenter" Content="{TemplateBinding IconsContent}" ContentTemplate="{TemplateBinding IconsContentTemplate}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" AutomationProperties.AccessibilityView="Raw" Visibility="{Binding IconsContentTemplate, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource MaterialNullToCollapsedConverter}}" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="M3MaterialOutlinedCardStyle" TargetType="utu:Card" BasedOn="{StaticResource M3MaterialFilledCardStyle}">
    <Setter Property="Background" Value="{StaticResource M3MaterialOutlinedCardBackground}" />
    <Setter Property="BorderBrush" Value="{ThemeResource M3MaterialOutlinedCardBorderBrush}" />
    <Setter Property="BorderThickness" Value="{StaticResource M3MaterialCardBorderThickness}" />
  </Style>
  <Style x:Key="M3MaterialElevatedCardStyle" BasedOn="{StaticResource M3MaterialBaseCardStyle}" TargetType="utu:Card">
    <Setter Property="Background" Value="{StaticResource M3MaterialElevatedCardBackground}" />
    <Setter Property="VerticalAlignment" Value="Stretch" />
    <Setter Property="VerticalContentAlignment" Value="Stretch" />
    <Setter Property="Elevation" Value="{StaticResource M3MaterialCardElevation}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="utu:Card">
          <!--  Elevated View  -->
          <toolkit:ElevatedView x:Name="ElevatedRoot" MinWidth="{TemplateBinding MinWidth}" MinHeight="{TemplateBinding MinHeight}" MaxWidth="{TemplateBinding MaxWidth}" MaxHeight="{TemplateBinding MaxHeight}" Margin="{TemplateBinding Margin}" Background="{TemplateBinding Background}" HorizontalAlignment="{TemplateBinding HorizontalAlignment}" VerticalAlignment="{TemplateBinding VerticalAlignment}" CornerRadius="{TemplateBinding CornerRadius}" Elevation="{TemplateBinding Elevation}" ShadowColor="{TemplateBinding ShadowColor}">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal">
                  <VisualState.Setters>
                    <Setter Target="HoverOverlay.Opacity" Value="0" />
                    <Setter Target="FocusedOverlay.Opacity" Value="0" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="PointerOver">
                  <Storyboard>
                    <DoubleAnimation Storyboard.TargetName="HoverOverlay" Storyboard.TargetProperty="Opacity" Duration="{StaticResource MaterialAnimationDuration}" From="0" To="1">
                      <DoubleAnimation.EasingFunction>
                        <CubicEase EasingMode="EaseIn" />
                      </DoubleAnimation.EasingFunction>
                    </DoubleAnimation>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Pressed">
                  <Storyboard>
                    <DoubleAnimation Storyboard.TargetName="HoverOverlay" Storyboard.TargetProperty="Opacity" Duration="{StaticResource MaterialAnimationDuration}" To="0">
                      <DoubleAnimation.EasingFunction>
                        <CubicEase EasingMode="EaseIn" />
                      </DoubleAnimation.EasingFunction>
                    </DoubleAnimation>
                    <DoubleAnimation Storyboard.TargetName="FocusedOverlay" Storyboard.TargetProperty="Opacity" Duration="{StaticResource MaterialAnimationDuration}" To="0">
                      <DoubleAnimation.EasingFunction>
                        <CubicEase EasingMode="EaseIn" />
                      </DoubleAnimation.EasingFunction>
                    </DoubleAnimation>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Disabled">
                  <VisualState.Setters>
                    <Setter Target="HoverOverlay.Opacity" Value="0" />
                    <Setter Target="FocusedOverlay.Opacity" Value="0" />
                    <Setter Target="GridRoot.Opacity" Value="0.38" />
                  </VisualState.Setters>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="FocusStates">
                <VisualState x:Name="Focused">
                  <VisualState.Setters>
                    <Setter Target="FocusedOverlay.Opacity" Value="1" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="PointerFocused" />
                <VisualState x:Name="Unfocused">
                  <VisualState.Setters>
                    <Setter Target="FocusedOverlay.Opacity" Value="0" />
                  </VisualState.Setters>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid x:Name="GridRoot" CornerRadius="{TemplateBinding CornerRadius}">
              <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
              </Grid.RowDefinitions>
              <!--  Border for PointerOver State  -->
              <Border Grid.RowSpan="4" x:Name="HoverOverlay" Background="{StaticResource OnSurfaceHoverBrush}" Opacity="0" />
              <!--  Border for Focused State  -->
              <Border Grid.RowSpan="4" x:Name="FocusedOverlay" Background="{StaticResource OnSurfaceFocusedBrush}" Opacity="0" />
              <!--  Media content part  -->
              <ContentPresenter x:Name="MediaContentPresenter" Content="{TemplateBinding MediaContent}" ContentTemplate="{TemplateBinding MediaContentTemplate}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" AutomationProperties.AccessibilityView="Raw" IsHitTestVisible="False" Visibility="{Binding MediaContent, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource MaterialEmptyOrNullToCollapsed}}" />
              <!--  Header part  -->
              <ContentPresenter Grid.Row="1" x:Name="HeaderContentPresenter" Content="{TemplateBinding HeaderContent}" ContentTemplate="{TemplateBinding HeaderContentTemplate}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" AutomationProperties.AccessibilityView="Raw" Visibility="{Binding HeaderContent, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource MaterialEmptyOrNullToCollapsed}}" />
              <!--  SubHeader part  -->
              <ContentPresenter Grid.Row="2" x:Name="SubHeaderContentPresenter" Content="{TemplateBinding SubHeaderContent}" ContentTemplate="{TemplateBinding SubHeaderContentTemplate}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" AutomationProperties.AccessibilityView="Raw" Visibility="{Binding SubHeaderContent, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource MaterialEmptyOrNullToCollapsed}}" />
              <!--  Ripple effect  -->
              <um:Ripple Grid.RowSpan="4" Feedback="{StaticResource OnSurfaceFocusedBrush}" CornerRadius="{StaticResource M3MaterialCardCornerRadius}" Padding="{TemplateBinding Padding}" AutomationProperties.AccessibilityView="Raw" />
              <!--  Supporting Content part  -->
              <ContentPresenter Grid.Row="3" x:Name="SupportingContentPresenter" Content="{TemplateBinding SupportingContent}" ContentTemplate="{TemplateBinding SupportingContentTemplate}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" AutomationProperties.AccessibilityView="Raw" Visibility="{Binding SupportingContent, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource MaterialEmptyOrNullToCollapsed}}" />
              <!--  Icons section part  -->
              <ContentPresenter Grid.Row="3" x:Name="IconsContentPresenter" Content="{TemplateBinding IconsContent}" ContentTemplate="{TemplateBinding IconsContentTemplate}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" AutomationProperties.AccessibilityView="Raw" Visibility="{Binding IconsContentTemplate, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource MaterialNullToCollapsedConverter}}" />
            </Grid>
          </toolkit:ElevatedView>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="M3MaterialAvatarFilledCardStyle" BasedOn="{StaticResource M3MaterialAvatarBaseCardStyle}" TargetType="utu:Card">
    <Setter Property="Background" Value="{StaticResource M3MaterialFilledCardBackground}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="utu:Card">
          <Grid x:Name="GridRoot" MinWidth="{TemplateBinding MinWidth}" MinHeight="{TemplateBinding MinHeight}" MaxWidth="{TemplateBinding MaxWidth}" MaxHeight="{TemplateBinding MaxHeight}" Margin="{TemplateBinding Margin}" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" CornerRadius="{TemplateBinding CornerRadius}" BorderThickness="{TemplateBinding BorderThickness}" HorizontalAlignment="{TemplateBinding HorizontalAlignment}">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal">
                  <VisualState.Setters>
                    <Setter Target="HoverOverlay.Opacity" Value="0" />
                    <Setter Target="FocusedOverlay.Opacity" Value="0" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="PointerOver">
                  <Storyboard>
                    <DoubleAnimation Storyboard.TargetName="HoverOverlay" Storyboard.TargetProperty="Opacity" Duration="{StaticResource MaterialAnimationDuration}" From="0" To="1">
                      <DoubleAnimation.EasingFunction>
                        <CubicEase EasingMode="EaseIn" />
                      </DoubleAnimation.EasingFunction>
                    </DoubleAnimation>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Pressed">
                  <Storyboard>
                    <DoubleAnimation Storyboard.TargetName="HoverOverlay" Storyboard.TargetProperty="Opacity" Duration="{StaticResource MaterialAnimationDuration}" To="0">
                      <DoubleAnimation.EasingFunction>
                        <CubicEase EasingMode="EaseIn" />
                      </DoubleAnimation.EasingFunction>
                    </DoubleAnimation>
                    <DoubleAnimation Storyboard.TargetName="FocusedOverlay" Storyboard.TargetProperty="Opacity" Duration="{StaticResource MaterialAnimationDuration}" To="0">
                      <DoubleAnimation.EasingFunction>
                        <CubicEase EasingMode="EaseIn" />
                      </DoubleAnimation.EasingFunction>
                    </DoubleAnimation>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Disabled">
                  <VisualState.Setters>
                    <Setter Target="HoverOverlay.Opacity" Value="0" />
                    <Setter Target="FocusedOverlay.Opacity" Value="0" />
                    <Setter Target="GridRoot.Opacity" Value="0.38" />
                  </VisualState.Setters>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="FocusStates">
                <VisualState x:Name="Focused">
                  <VisualState.Setters>
                    <Setter Target="FocusedOverlay.Opacity" Value="1" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="PointerFocused" />
                <VisualState x:Name="Unfocused">
                  <VisualState.Setters>
                    <Setter Target="FocusedOverlay.Opacity" Value="0" />
                  </VisualState.Setters>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid.RowDefinitions>
              <RowDefinition Height="Auto" />
              <RowDefinition Height="Auto" />
              <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="Auto" />
              <ColumnDefinition Width="*" />
              <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <!--  Border for PointedOver state  -->
            <Border Grid.RowSpan="3" Grid.ColumnSpan="3" x:Name="HoverOverlay" Background="{StaticResource OnSurfaceHoverBrush}" Opacity="0" />
            <!--  Border for Focus state  -->
            <Border Grid.RowSpan="3" Grid.ColumnSpan="3" x:Name="FocusedOverlay" Background="{StaticResource OnSurfaceFocusedBrush}" Opacity="0" />
            <!--  Avatart part  -->
            <ContentPresenter x:Name="AvatarContentPresenter" Content="{TemplateBinding AvatarContent}" ContentTemplate="{TemplateBinding AvatarContentTemplate}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" AutomationProperties.AccessibilityView="Raw" IsHitTestVisible="False" Margin="16,0,0,0" Visibility="{Binding AvatarContent, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource MaterialEmptyOrNullToCollapsed}}" />
            <StackPanel Grid.Column="1" IsHitTestVisible="False">
              <!--  Header part  -->
              <ContentPresenter x:Name="HeaderContentPresenter" Content="{TemplateBinding HeaderContent}" ContentTemplate="{TemplateBinding HeaderContentTemplate}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" AutomationProperties.AccessibilityView="Raw" Visibility="{Binding HeaderContent, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource MaterialEmptyOrNullToCollapsed}}" />
              <!--  SubHeader part  -->
              <ContentPresenter x:Name="SubHeaderContentPresenter" Content="{TemplateBinding SubHeaderContent}" ContentTemplate="{TemplateBinding SubHeaderContentTemplate}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" AutomationProperties.AccessibilityView="Raw" Visibility="{Binding SubHeaderContent, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource MaterialEmptyOrNullToCollapsed}}" />
            </StackPanel>
            <!--  Ripple effect  -->
            <um:Ripple Grid.RowSpan="3" Grid.ColumnSpan="3" Feedback="{StaticResource OnSurfaceFocusedBrush}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{StaticResource M3MaterialCardCornerRadius}" Padding="{TemplateBinding Padding}" AutomationProperties.AccessibilityView="Raw" />
            <!--  Icons section part  -->
            <ContentPresenter Grid.Column="2" x:Name="IconsContentPresenter" Content="{TemplateBinding IconsContent}" ContentTemplate="{TemplateBinding IconsContentTemplate}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" AutomationProperties.AccessibilityView="Raw" Visibility="{Binding IconsContentTemplate, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource MaterialEmptyOrNullToCollapsed}}" />
            <!--  Media content part  -->
            <ContentPresenter Grid.Row="1" Grid.ColumnSpan="3" x:Name="MediaContentPresenter" Content="{TemplateBinding MediaContent}" ContentTemplate="{TemplateBinding MediaContentTemplate}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" AutomationProperties.AccessibilityView="Raw" IsHitTestVisible="False" Visibility="{Binding MediaContent, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource MaterialEmptyOrNullToCollapsed}}" />
            <!--  Supporting Content part  -->
            <ContentPresenter Grid.Row="2" Grid.ColumnSpan="3" x:Name="SupportingContentPresenter" Content="{TemplateBinding SupportingContent}" ContentTemplate="{TemplateBinding SupportingContentTemplate}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" AutomationProperties.AccessibilityView="Raw" Visibility="{Binding SupportingContent, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource MaterialEmptyOrNullToCollapsed}}" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="M3MaterialAvatarOutlinedCardStyle" BasedOn="{StaticResource M3MaterialAvatarFilledCardStyle}" TargetType="utu:Card">
    <Setter Property="Background" Value="{StaticResource M3MaterialOutlinedCardBackground}" />
    <Setter Property="BorderBrush" Value="{ThemeResource M3MaterialOutlinedCardBorderBrush}" />
    <Setter Property="BorderThickness" Value="{StaticResource M3MaterialCardBorderThickness}" />
  </Style>
  <Style x:Key="M3MaterialAvatarElevatedCardStyle" BasedOn="{StaticResource M3MaterialAvatarBaseCardStyle}" TargetType="utu:Card">
    <Setter Property="Background" Value="{StaticResource M3MaterialElevatedCardBackground}" />
    <Setter Property="Elevation" Value="{StaticResource M3MaterialCardElevation}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="utu:Card">
          <!--  Elevated View  -->
          <toolkit:ElevatedView x:Name="ElevatedRoot" MinWidth="{TemplateBinding MinWidth}" MinHeight="{TemplateBinding MinHeight}" MaxWidth="{TemplateBinding MaxWidth}" MaxHeight="{TemplateBinding MaxHeight}" Margin="{TemplateBinding Margin}" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" HorizontalAlignment="{TemplateBinding HorizontalAlignment}" VerticalAlignment="{TemplateBinding VerticalAlignment}" CornerRadius="{TemplateBinding CornerRadius}" Elevation="{TemplateBinding Elevation}" ShadowColor="{TemplateBinding ShadowColor}">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal">
                  <VisualState.Setters>
                    <Setter Target="HoverOverlay.Opacity" Value="0" />
                    <Setter Target="FocusedOverlay.Opacity" Value="0" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="PointerOver">
                  <Storyboard>
                    <DoubleAnimation Storyboard.TargetName="HoverOverlay" Storyboard.TargetProperty="Opacity" Duration="{StaticResource MaterialAnimationDuration}" From="0" To="1">
                      <DoubleAnimation.EasingFunction>
                        <CubicEase EasingMode="EaseIn" />
                      </DoubleAnimation.EasingFunction>
                    </DoubleAnimation>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Pressed">
                  <Storyboard>
                    <DoubleAnimation Storyboard.TargetName="HoverOverlay" Storyboard.TargetProperty="Opacity" Duration="{StaticResource MaterialAnimationDuration}" To="0">
                      <DoubleAnimation.EasingFunction>
                        <CubicEase EasingMode="EaseIn" />
                      </DoubleAnimation.EasingFunction>
                    </DoubleAnimation>
                    <DoubleAnimation Storyboard.TargetName="FocusedOverlay" Storyboard.TargetProperty="Opacity" Duration="{StaticResource MaterialAnimationDuration}" To="0">
                      <DoubleAnimation.EasingFunction>
                        <CubicEase EasingMode="EaseIn" />
                      </DoubleAnimation.EasingFunction>
                    </DoubleAnimation>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Disabled">
                  <VisualState.Setters>
                    <Setter Target="HoverOverlay.Opacity" Value="0" />
                    <Setter Target="FocusedOverlay.Opacity" Value="0" />
                    <Setter Target="GridRoot.Opacity" Value="0.38" />
                  </VisualState.Setters>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="FocusStates">
                <VisualState x:Name="Focused">
                  <VisualState.Setters>
                    <Setter Target="FocusedOverlay.Opacity" Value="1" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="PointerFocused" />
                <VisualState x:Name="Unfocused">
                  <VisualState.Setters>
                    <Setter Target="FocusedOverlay.Opacity" Value="0" />
                  </VisualState.Setters>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid x:Name="GridRoot" CornerRadius="{TemplateBinding CornerRadius}">
              <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
              </Grid.RowDefinitions>
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
              </Grid.ColumnDefinitions>
              <!--  Border for PointedOver state  -->
              <Border Grid.RowSpan="3" Grid.ColumnSpan="3" x:Name="HoverOverlay" Background="{StaticResource OnSurfaceHoverBrush}" Opacity="0" />
              <!--  Border for Focus state  -->
              <Border Grid.RowSpan="3" Grid.ColumnSpan="3" x:Name="FocusedOverlay" Background="{StaticResource OnSurfaceFocusedBrush}" Opacity="0" />
              <!--  Avatart part  -->
              <ContentPresenter x:Name="AvatarContentPresenter" Content="{TemplateBinding AvatarContent}" ContentTemplate="{TemplateBinding AvatarContentTemplate}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" AutomationProperties.AccessibilityView="Raw" IsHitTestVisible="False" Margin="16,0,0,0" Visibility="{Binding AvatarContent, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource MaterialEmptyOrNullToCollapsed}}" />
              <StackPanel Grid.Column="1" IsHitTestVisible="False">
                <!--  Header part  -->
                <ContentPresenter x:Name="HeaderContentPresenter" Content="{TemplateBinding HeaderContent}" ContentTemplate="{TemplateBinding HeaderContentTemplate}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" AutomationProperties.AccessibilityView="Raw" Visibility="{Binding HeaderContent, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource MaterialEmptyOrNullToCollapsed}}" />
                <!--  SubHeader part  -->
                <ContentPresenter x:Name="SubHeaderContentPresenter" Content="{TemplateBinding SubHeaderContent}" ContentTemplate="{TemplateBinding SubHeaderContentTemplate}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" AutomationProperties.AccessibilityView="Raw" Visibility="{Binding SubHeaderContent, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource MaterialEmptyOrNullToCollapsed}}" />
              </StackPanel>
              <!--  Ripple effect  -->
              <um:Ripple Grid.RowSpan="3" Grid.ColumnSpan="3" Feedback="{StaticResource OnSurfaceFocusedBrush}" CornerRadius="{StaticResource M3MaterialCardCornerRadius}" Padding="{TemplateBinding Padding}" AutomationProperties.AccessibilityView="Raw" />
              <!--  Icons section part  -->
              <ContentPresenter Grid.Column="2" x:Name="IconsContentPresenter" Content="{TemplateBinding IconsContent}" ContentTemplate="{TemplateBinding IconsContentTemplate}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" AutomationProperties.AccessibilityView="Raw" Visibility="{Binding IconsContentTemplate, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource MaterialNullToCollapsedConverter}}" />
              <!--  Media content part  -->
              <ContentPresenter Grid.Row="1" Grid.ColumnSpan="3" x:Name="MediaContentPresenter" Content="{TemplateBinding MediaContent}" ContentTemplate="{TemplateBinding MediaContentTemplate}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" AutomationProperties.AccessibilityView="Raw" IsHitTestVisible="False" Visibility="{Binding MediaContent, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource MaterialEmptyOrNullToCollapsed}}" />
              <!--  Supporting Content part  -->
              <ContentPresenter Grid.Row="2" Grid.ColumnSpan="3" x:Name="SupportingContentPresenter" Content="{TemplateBinding SupportingContent}" ContentTemplate="{TemplateBinding SupportingContentTemplate}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" AutomationProperties.AccessibilityView="Raw" Visibility="{Binding SupportingContent, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource MaterialEmptyOrNullToCollapsed}}" />
            </Grid>
          </toolkit:ElevatedView>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="M3MaterialSmallMediaFilledCardStyle" BasedOn="{StaticResource M3MaterialSmallMediaBaseCardStyle}" TargetType="utu:Card">
    <Setter Property="Background" Value="{StaticResource M3MaterialFilledCardBackground}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="utu:Card">
          <Grid x:Name="GridRoot" MinWidth="{TemplateBinding MinWidth}" MinHeight="{TemplateBinding MinHeight}" MaxWidth="{TemplateBinding MaxWidth}" MaxHeight="{TemplateBinding MaxHeight}" Margin="{TemplateBinding Margin}" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" CornerRadius="{TemplateBinding CornerRadius}" BorderThickness="{TemplateBinding BorderThickness}" HorizontalAlignment="{TemplateBinding HorizontalAlignment}">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal">
                  <VisualState.Setters>
                    <Setter Target="HoverOverlay.Opacity" Value="0" />
                    <Setter Target="FocusedOverlay.Opacity" Value="0" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="PointerOver">
                  <Storyboard>
                    <DoubleAnimation Storyboard.TargetName="HoverOverlay" Storyboard.TargetProperty="Opacity" Duration="{StaticResource MaterialAnimationDuration}" From="0" To="1">
                      <DoubleAnimation.EasingFunction>
                        <CubicEase EasingMode="EaseIn" />
                      </DoubleAnimation.EasingFunction>
                    </DoubleAnimation>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Pressed">
                  <Storyboard>
                    <DoubleAnimation Storyboard.TargetName="HoverOverlay" Storyboard.TargetProperty="Opacity" Duration="{StaticResource MaterialAnimationDuration}" To="0">
                      <DoubleAnimation.EasingFunction>
                        <CubicEase EasingMode="EaseIn" />
                      </DoubleAnimation.EasingFunction>
                    </DoubleAnimation>
                    <DoubleAnimation Storyboard.TargetName="FocusedOverlay" Storyboard.TargetProperty="Opacity" Duration="{StaticResource MaterialAnimationDuration}" To="0">
                      <DoubleAnimation.EasingFunction>
                        <CubicEase EasingMode="EaseIn" />
                      </DoubleAnimation.EasingFunction>
                    </DoubleAnimation>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Disabled">
                  <VisualState.Setters>
                    <Setter Target="HoverOverlay.Opacity" Value="0" />
                    <Setter Target="FocusedOverlay.Opacity" Value="0" />
                    <Setter Target="GridRoot.Opacity" Value="0.38" />
                  </VisualState.Setters>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="FocusStates">
                <VisualState x:Name="Focused">
                  <VisualState.Setters>
                    <Setter Target="FocusedOverlay.Opacity" Value="1" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="PointerFocused" />
                <VisualState x:Name="Unfocused">
                  <VisualState.Setters>
                    <Setter Target="FocusedOverlay.Opacity" Value="0" />
                  </VisualState.Setters>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid.RowDefinitions>
              <RowDefinition Height="Auto" />
              <RowDefinition Height="Auto" />
              <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="Auto" />
              <ColumnDefinition Width="*" />
              <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <!--  Border for PointerOver State  -->
            <Border Grid.RowSpan="3" Grid.ColumnSpan="3" x:Name="HoverOverlay" Background="{StaticResource OnSurfaceHoverBrush}" Opacity="0" />
            <!--  Border for Focused State  -->
            <Border Grid.RowSpan="3" Grid.ColumnSpan="3" x:Name="FocusedOverlay" Background="{StaticResource OnSurfaceFocusedBrush}" Opacity="0" />
            <!--  Media content part  -->
            <ContentPresenter x:Name="MediaContentPresenter" Content="{TemplateBinding MediaContent}" ContentTemplate="{TemplateBinding MediaContentTemplate}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" AutomationProperties.AccessibilityView="Raw" IsHitTestVisible="False" Visibility="{Binding MediaContent, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource MaterialEmptyOrNullToCollapsed}}" />
            <StackPanel Grid.Column="1">
              <!--  Header part  -->
              <ContentPresenter x:Name="HeaderContentPresenter" Content="{TemplateBinding HeaderContent}" ContentTemplate="{TemplateBinding HeaderContentTemplate}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" AutomationProperties.AccessibilityView="Raw" Visibility="{Binding HeaderContent, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource MaterialEmptyOrNullToCollapsed}}" />
              <!--  SubHeader part  -->
              <ContentPresenter x:Name="SubHeaderContentPresenter" Content="{TemplateBinding SubHeaderContent}" ContentTemplate="{TemplateBinding SubHeaderContentTemplate}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" AutomationProperties.AccessibilityView="Raw" Visibility="{Binding SubHeaderContent, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource MaterialEmptyOrNullToCollapsed}}" />
            </StackPanel>
            <!--  Ripple effect  -->
            <um:Ripple Grid.RowSpan="3" Grid.ColumnSpan="3" Feedback="{StaticResource OnSurfaceFocusedBrush}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{StaticResource M3MaterialCardCornerRadius}" Padding="{TemplateBinding Padding}" AutomationProperties.AccessibilityView="Raw" />
            <!--  Supporting Content part  -->
            <ContentPresenter Grid.Row="1" Grid.ColumnSpan="3" x:Name="SupportingContentPresenter" Content="{TemplateBinding SupportingContent}" ContentTemplate="{TemplateBinding SupportingContentTemplate}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" AutomationProperties.AccessibilityView="Raw" Visibility="{Binding SupportingContent, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource MaterialEmptyOrNullToCollapsed}}" />
            <!--  Icons section part  -->
            <ContentPresenter Grid.Row="2" Grid.ColumnSpan="3" x:Name="IconsContentPresenter" Content="{TemplateBinding IconsContent}" ContentTemplate="{TemplateBinding IconsContentTemplate}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" AutomationProperties.AccessibilityView="Raw" Visibility="{Binding IconsContentTemplate, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource MaterialNullToCollapsedConverter}}" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="M3MaterialSmallMediaOutlinedCardStyle" BasedOn="{StaticResource M3MaterialSmallMediaFilledCardStyle}" TargetType="utu:Card">
    <Setter Property="Padding" Value="0" />
    <Setter Property="Background" Value="{StaticResource M3MaterialOutlinedCardBackground}" />
    <Setter Property="BorderBrush" Value="{ThemeResource M3MaterialOutlinedCardBorderBrush}" />
    <Setter Property="BorderThickness" Value="{StaticResource M3MaterialCardBorderThickness}" />
  </Style>
  <Style x:Key="M3MaterialSmallMediaElevatedCardStyle" BasedOn="{StaticResource M3MaterialSmallMediaBaseCardStyle}" TargetType="utu:Card">
    <Setter Property="Background" Value="{StaticResource M3MaterialElevatedCardBackground}" />
    <Setter Property="Elevation" Value="{StaticResource M3MaterialCardElevation}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="utu:Card">
          <!--  Elevated View  -->
          <toolkit:ElevatedView x:Name="ElevatedRoot" MinWidth="{TemplateBinding MinWidth}" MinHeight="{TemplateBinding MinHeight}" MaxWidth="{TemplateBinding MaxWidth}" MaxHeight="{TemplateBinding MaxHeight}" Margin="{TemplateBinding Margin}" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" HorizontalAlignment="{TemplateBinding HorizontalAlignment}" VerticalAlignment="{TemplateBinding VerticalAlignment}" CornerRadius="{TemplateBinding CornerRadius}" Elevation="{TemplateBinding Elevation}" ShadowColor="{TemplateBinding ShadowColor}">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal">
                  <VisualState.Setters>
                    <Setter Target="HoverOverlay.Opacity" Value="0" />
                    <Setter Target="FocusedOverlay.Opacity" Value="0" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="PointerOver">
                  <Storyboard>
                    <DoubleAnimation Storyboard.TargetName="HoverOverlay" Storyboard.TargetProperty="Opacity" Duration="{StaticResource MaterialAnimationDuration}" From="0" To="1">
                      <DoubleAnimation.EasingFunction>
                        <CubicEase EasingMode="EaseIn" />
                      </DoubleAnimation.EasingFunction>
                    </DoubleAnimation>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Pressed">
                  <Storyboard>
                    <DoubleAnimation Storyboard.TargetName="HoverOverlay" Storyboard.TargetProperty="Opacity" Duration="{StaticResource MaterialAnimationDuration}" To="0">
                      <DoubleAnimation.EasingFunction>
                        <CubicEase EasingMode="EaseIn" />
                      </DoubleAnimation.EasingFunction>
                    </DoubleAnimation>
                    <DoubleAnimation Storyboard.TargetName="FocusedOverlay" Storyboard.TargetProperty="Opacity" Duration="{StaticResource MaterialAnimationDuration}" To="0">
                      <DoubleAnimation.EasingFunction>
                        <CubicEase EasingMode="EaseIn" />
                      </DoubleAnimation.EasingFunction>
                    </DoubleAnimation>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Disabled">
                  <VisualState.Setters>
                    <Setter Target="HoverOverlay.Opacity" Value="0" />
                    <Setter Target="FocusedOverlay.Opacity" Value="0" />
                    <Setter Target="GridRoot.Opacity" Value="0.38" />
                  </VisualState.Setters>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="FocusStates">
                <VisualState x:Name="Focused">
                  <VisualState.Setters>
                    <Setter Target="FocusedOverlay.Opacity" Value="1" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="PointerFocused" />
                <VisualState x:Name="Unfocused">
                  <VisualState.Setters>
                    <Setter Target="FocusedOverlay.Opacity" Value="0" />
                  </VisualState.Setters>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid x:Name="GridRoot" CornerRadius="{TemplateBinding CornerRadius}">
              <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
              </Grid.RowDefinitions>
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
              </Grid.ColumnDefinitions>
              <!--  Border for PointerOver State  -->
              <Border Grid.RowSpan="3" Grid.ColumnSpan="3" x:Name="HoverOverlay" Background="{StaticResource OnSurfaceHoverBrush}" Opacity="0" />
              <!--  Border for Focused State  -->
              <Border Grid.RowSpan="3" Grid.ColumnSpan="3" x:Name="FocusedOverlay" Background="{StaticResource OnSurfaceFocusedBrush}" Opacity="0" />
              <!--  Media content part  -->
              <ContentPresenter x:Name="MediaContentPresenter" Content="{TemplateBinding MediaContent}" ContentTemplate="{TemplateBinding MediaContentTemplate}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" AutomationProperties.AccessibilityView="Raw" IsHitTestVisible="False" Visibility="{Binding MediaContent, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource MaterialEmptyOrNullToCollapsed}}" />
              <StackPanel Grid.Column="1">
                <!--  Header part  -->
                <ContentPresenter x:Name="HeaderContentPresenter" Content="{TemplateBinding HeaderContent}" ContentTemplate="{TemplateBinding HeaderContentTemplate}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" AutomationProperties.AccessibilityView="Raw" Visibility="{Binding HeaderContent, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource MaterialEmptyOrNullToCollapsed}}" />
                <!--  SubHeader part  -->
                <ContentPresenter x:Name="SubHeaderContentPresenter" Content="{TemplateBinding SubHeaderContent}" ContentTemplate="{TemplateBinding SubHeaderContentTemplate}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" AutomationProperties.AccessibilityView="Raw" Visibility="{Binding SubHeaderContent, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource MaterialEmptyOrNullToCollapsed}}" />
              </StackPanel>
              <!--  Ripple effect  -->
              <um:Ripple Grid.RowSpan="3" Grid.ColumnSpan="3" Feedback="{StaticResource OnSurfaceFocusedBrush}" CornerRadius="{StaticResource M3MaterialCardCornerRadius}" Padding="{TemplateBinding Padding}" AutomationProperties.AccessibilityView="Raw" />
              <!--  Supporting Content part  -->
              <ContentPresenter Grid.Row="1" Grid.ColumnSpan="3" x:Name="SupportingContentPresenter" Content="{TemplateBinding SupportingContent}" ContentTemplate="{TemplateBinding SupportingContentTemplate}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" AutomationProperties.AccessibilityView="Raw" Visibility="{Binding SupportingContent, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource MaterialEmptyOrNullToCollapsed}}" />
              <!--  Icons section part  -->
              <ContentPresenter Grid.Row="2" Grid.ColumnSpan="3" x:Name="IconsContentPresenter" Content="{TemplateBinding IconsContent}" ContentTemplate="{TemplateBinding IconsContentTemplate}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" AutomationProperties.AccessibilityView="Raw" Visibility="{Binding IconsContentTemplate, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource MaterialNullToCollapsedConverter}}" />
            </Grid>
          </toolkit:ElevatedView>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <!--origin: Styles\Controls\v2\CardContentControl.xaml-->
  <Style x:Key="M3MaterialBaseCardContentControlStyle" TargetType="utu:CardContentControl">
    <Setter Property="MinHeight" Value="{StaticResource M3MaterialCardMinHeight}" />
    <Setter Property="MaxWidth" Value="{StaticResource M3MaterialCardMaxWidth}" />
    <Setter Property="Margin" Value="{StaticResource M3MaterialCardElevationMargin}" />
    <Setter Property="CornerRadius" Value="{StaticResource M3MaterialCardCornerRadius}" />
    <Setter Property="HorizontalAlignment" Value="Stretch" />
    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
    <Setter Property="VerticalAlignment" Value="Stretch" />
    <Setter Property="VerticalContentAlignment" Value="Stretch" />
  </Style>
  <Style x:Key="M3MaterialFilledCardContentControlStyle" BasedOn="{StaticResource M3MaterialBaseCardContentControlStyle}" TargetType="utu:CardContentControl">
    <Setter Property="Background" Value="{StaticResource M3MaterialFilledCardBackground}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="utu:CardContentControl">
          <Grid x:Name="GridRoot" MinWidth="{TemplateBinding MinWidth}" MinHeight="{TemplateBinding MinHeight}" MaxWidth="{TemplateBinding MaxWidth}" MaxHeight="{TemplateBinding MaxHeight}" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" CornerRadius="{TemplateBinding CornerRadius}" BorderThickness="{TemplateBinding BorderThickness}" HorizontalAlignment="{TemplateBinding HorizontalAlignment}">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal">
                  <VisualState.Setters>
                    <Setter Target="HoverOverlay.Opacity" Value="0" />
                    <Setter Target="FocusedOverlay.Opacity" Value="0" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="PointerOver">
                  <Storyboard>
                    <DoubleAnimation Storyboard.TargetName="HoverOverlay" Storyboard.TargetProperty="Opacity" Duration="{StaticResource MaterialDelayedBeginTime}" From="0" To="1">
                      <DoubleAnimation.EasingFunction>
                        <CubicEase EasingMode="EaseIn" />
                      </DoubleAnimation.EasingFunction>
                    </DoubleAnimation>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Pressed">
                  <Storyboard>
                    <DoubleAnimation Storyboard.TargetName="HoverPressed" Storyboard.TargetProperty="Opacity" Duration="{StaticResource MaterialDelayedBeginTime}" From="0" To="1">
                      <DoubleAnimation.EasingFunction>
                        <CubicEase EasingMode="EaseIn" />
                      </DoubleAnimation.EasingFunction>
                    </DoubleAnimation>
                    <DoubleAnimation Storyboard.TargetName="HoverOverlay" Storyboard.TargetProperty="Opacity" Duration="{StaticResource MaterialDelayedBeginTime}" To="0">
                      <DoubleAnimation.EasingFunction>
                        <CubicEase EasingMode="EaseIn" />
                      </DoubleAnimation.EasingFunction>
                    </DoubleAnimation>
                    <DoubleAnimation Storyboard.TargetName="FocusedOverlay" Storyboard.TargetProperty="Opacity" Duration="{StaticResource MaterialDelayedBeginTime}" To="0">
                      <DoubleAnimation.EasingFunction>
                        <CubicEase EasingMode="EaseIn" />
                      </DoubleAnimation.EasingFunction>
                    </DoubleAnimation>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Disabled">
                  <VisualState.Setters>
                    <Setter Target="HoverOverlay.Opacity" Value="0" />
                    <Setter Target="FocusedOverlay.Opacity" Value="0" />
                    <Setter Target="GridRoot.Opacity" Value="0.38" />
                  </VisualState.Setters>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="FocusStates">
                <VisualState x:Name="Focused">
                  <VisualState.Setters>
                    <Setter Target="FocusedOverlay.Opacity" Value="1" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="PointerFocused" />
                <VisualState x:Name="Unfocused">
                  <VisualState.Setters>
                    <Setter Target="FocusedOverlay.Opacity" Value="0" />
                  </VisualState.Setters>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <!--  Ripple effect  -->
            <!-- Will add the ripple effect later on when this issue is taken care of: -->
            <!-- https://github.com/unoplatform/uno.ui.toolkit/issues/88 -->
            <!--<um:Ripple Feedback="{StaticResource OnSurfaceFocusedBrush}"
										 BorderBrush="{TemplateBinding BorderBrush}"
										 BorderThickness="{TemplateBinding BorderThickness}"
										 CornerRadius="{StaticResource M3MaterialCardCornerRadius}"
										 Padding="{TemplateBinding Padding}"
										 AutomationProperties.AccessibilityView="Raw" />-->
            <!--  Main ContentPresenter  -->
            <ContentPresenter x:Name="ContentPresenter" Padding="{TemplateBinding Padding}" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" AutomationProperties.AccessibilityView="Raw" />
            <!--  Border for Pressed State  -->
            <Border x:Name="HoverPressed" Background="{StaticResource OnSurfacePressedBrush}" IsHitTestVisible="False" Opacity="0" />
            <!--  Border for PointerOver State  -->
            <Border x:Name="HoverOverlay" Background="{StaticResource OnSurfaceHoverBrush}" IsHitTestVisible="False" Opacity="0" />
            <!--  Border for Focused State  -->
            <Border x:Name="FocusedOverlay" Background="{StaticResource OnSurfaceFocusedBrush}" IsHitTestVisible="False" Opacity="0" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="M3MaterialOutlinedCardContentControlStyle" BasedOn="{StaticResource M3MaterialFilledCardContentControlStyle}" TargetType="utu:CardContentControl">
    <Setter Property="Background" Value="{StaticResource M3MaterialOutlinedCardBackground}" />
    <Setter Property="BorderBrush" Value="{ThemeResource M3MaterialOutlinedCardBorderBrush}" />
    <Setter Property="BorderThickness" Value="{StaticResource M3MaterialCardBorderThickness}" />
  </Style>
  <Style x:Key="M3MaterialElevatedCardContentControlStyle" BasedOn="{StaticResource M3MaterialBaseCardContentControlStyle}" TargetType="utu:CardContentControl">
    <Setter Property="Background" Value="{StaticResource M3MaterialElevatedCardBackground}" />
    <Setter Property="Elevation" Value="{StaticResource M3MaterialCardElevation}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="utu:CardContentControl">
          <!--  Elevated View  -->
          <toolkit:ElevatedView x:Name="ElevatedRoot" MinWidth="{TemplateBinding MinWidth}" MinHeight="{TemplateBinding MinHeight}" MaxWidth="{TemplateBinding MaxWidth}" MaxHeight="{TemplateBinding MaxHeight}" Background="{TemplateBinding Background}" HorizontalAlignment="{TemplateBinding HorizontalAlignment}" VerticalAlignment="{TemplateBinding VerticalAlignment}" CornerRadius="{TemplateBinding CornerRadius}" Elevation="{TemplateBinding Elevation}" ShadowColor="{TemplateBinding ShadowColor}">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal">
                  <VisualState.Setters>
                    <Setter Target="HoverOverlay.Opacity" Value="0" />
                    <Setter Target="FocusedOverlay.Opacity" Value="0" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="PointerOver">
                  <Storyboard>
                    <DoubleAnimation Storyboard.TargetName="HoverOverlay" Storyboard.TargetProperty="Opacity" Duration="{StaticResource MaterialDelayedBeginTime}" From="0" To="1">
                      <DoubleAnimation.EasingFunction>
                        <CubicEase EasingMode="EaseIn" />
                      </DoubleAnimation.EasingFunction>
                    </DoubleAnimation>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Pressed">
                  <Storyboard>
                    <DoubleAnimation Storyboard.TargetName="HoverPressed" Storyboard.TargetProperty="Opacity" Duration="{StaticResource MaterialDelayedBeginTime}" From="0" To="1">
                      <DoubleAnimation.EasingFunction>
                        <CubicEase EasingMode="EaseIn" />
                      </DoubleAnimation.EasingFunction>
                    </DoubleAnimation>
                    <DoubleAnimation Storyboard.TargetName="HoverOverlay" Storyboard.TargetProperty="Opacity" Duration="{StaticResource MaterialDelayedBeginTime}" To="0">
                      <DoubleAnimation.EasingFunction>
                        <CubicEase EasingMode="EaseIn" />
                      </DoubleAnimation.EasingFunction>
                    </DoubleAnimation>
                    <DoubleAnimation Storyboard.TargetName="FocusedOverlay" Storyboard.TargetProperty="Opacity" Duration="{StaticResource MaterialDelayedBeginTime}" To="0">
                      <DoubleAnimation.EasingFunction>
                        <CubicEase EasingMode="EaseIn" />
                      </DoubleAnimation.EasingFunction>
                    </DoubleAnimation>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Disabled">
                  <VisualState.Setters>
                    <Setter Target="HoverOverlay.Opacity" Value="0" />
                    <Setter Target="FocusedOverlay.Opacity" Value="0" />
                    <Setter Target="GridRoot.Opacity" Value="0.38" />
                  </VisualState.Setters>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="FocusStates">
                <VisualState x:Name="Focused">
                  <VisualState.Setters>
                    <Setter Target="FocusedOverlay.Opacity" Value="1" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="PointerFocused" />
                <VisualState x:Name="Unfocused">
                  <VisualState.Setters>
                    <Setter Target="FocusedOverlay.Opacity" Value="0" />
                  </VisualState.Setters>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid x:Name="GridRoot" CornerRadius="{TemplateBinding CornerRadius}">
              <!--  Ripple effect  -->
              <!-- Will add the ripple effect later on when this issue is taken care of: -->
              <!-- https://github.com/unoplatform/uno.ui.toolkit/issues/88 -->
              <!--<um:Ripple Feedback="{StaticResource OnSurfaceFocusedBrush}"
											 CornerRadius="{StaticResource M3MaterialCardCornerRadius}"
											 Padding="{TemplateBinding Padding}"
											 AutomationProperties.AccessibilityView="Raw" />-->
              <!--  Main ContentPresenter  -->
              <ContentPresenter x:Name="ContentPresenter" Padding="{TemplateBinding Padding}" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" AutomationProperties.AccessibilityView="Raw" />
              <!--  Border for Pressed State  -->
              <Border x:Name="HoverPressed" Background="{StaticResource OnSurfacePressedBrush}" IsHitTestVisible="False" Opacity="0" />
              <!--  Border for PointerOver State  -->
              <Border x:Name="HoverOverlay" Background="{StaticResource OnSurfaceHoverBrush}" IsHitTestVisible="False" Opacity="0" />
              <!--  Border for Focused State  -->
              <Border x:Name="FocusedOverlay" Background="{StaticResource OnSurfaceFocusedBrush}" IsHitTestVisible="False" Opacity="0" />
            </Grid>
          </toolkit:ElevatedView>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <!--origin: Styles\Controls\v2\Chip.xaml-->
  <x:String x:Key="M3MaterialChipDeleteIcon">M11.25 1.8075L10.1925 0.75L6 4.9425L1.8075 0.75L0.75 1.8075L4.9425 6L0.75 10.1925L1.8075 11.25L6 7.0575L10.1925 11.25L11.25 10.1925L7.0575 6L11.25 1.8075Z</x:String>
  <x:String x:Key="M3MaterialCheckGlyphPathData">M28.718018,0L32,3.2819897 10.666016,24.616999 0,13.951997 3.2810059,10.670007 10.666016,18.055033z</x:String>
  <StaticResource x:Key="M3MaterialChipBackground" ResourceKey="SystemControlTransparentBrush" />
  <StaticResource x:Key="M3MaterialChipSelectedBackground" ResourceKey="SecondaryContainerBrush" />
  <StaticResource x:Key="M3MaterialChipPointerOverStateOverlay" ResourceKey="OnSurfaceVariantHoverBrush" />
  <StaticResource x:Key="M3MaterialChipFocusedStateOverlay" ResourceKey="OnSurfaceVariantFocusedBrush" />
  <StaticResource x:Key="M3MaterialChipPressedStateOverlay" ResourceKey="OnSurfaceVariantPressedBrush" />
  <StaticResource x:Key="M3MaterialChipSelectedPointerOverStateOverlay" ResourceKey="OnSecondaryContainerHoverBrush" />
  <StaticResource x:Key="M3MaterialChipSelectedFocusedStateOverlay" ResourceKey="OnSecondaryContainerFocusedBrush" />
  <StaticResource x:Key="M3MaterialChipSelectedPressedStateOverlay" ResourceKey="OnSecondaryContainerSelectedBrush" />
  <StaticResource x:Key="M3MaterialChipForeground" ResourceKey="OnSurfaceVariantBrush" />
  <StaticResource x:Key="M3MaterialChipPointerOverForeground" ResourceKey="OnSurfaceVariantBrush" />
  <StaticResource x:Key="M3MaterialChipFocusedForeground" ResourceKey="OnSurfaceVariantBrush" />
  <StaticResource x:Key="M3MaterialChipPressedForeground" ResourceKey="OnSurfaceVariantBrush" />
  <StaticResource x:Key="M3MaterialChipSelectedForeground" ResourceKey="OnSecondaryContainerBrush" />
  <StaticResource x:Key="M3MaterialChipSelectedPointerOverForeground" ResourceKey="OnSecondaryContainerBrush" />
  <StaticResource x:Key="M3MaterialChipSelectedFocusedForeground" ResourceKey="OnSecondaryContainerBrush" />
  <StaticResource x:Key="M3MaterialChipSelectedPressedForeground" ResourceKey="OnSecondaryContainerBrush" />
  <StaticResource x:Key="M3MaterialChipIconForeground" ResourceKey="PrimaryBrush" />
  <StaticResource x:Key="M3MaterialChipIconDisabledForeground" ResourceKey="OnSurfaceDisabledBrush" />
  <StaticResource x:Key="M3MaterialChipDisabledForeground" ResourceKey="OnSurfaceDisabledBrush" />
  <StaticResource x:Key="M3MaterialChipDisabledBackground" ResourceKey="OnSurfaceDisabledLowBrush" />
  <StaticResource x:Key="M3MaterialChipDisabledBorderBrush" ResourceKey="OnSurfaceVariantDisabledLowBrush" />
  <x:Double x:Key="M3MaterialChipHeight">32</x:Double>
  <x:Double x:Key="M3MaterialChipContentMinHeight">20</x:Double>
  <x:Double x:Key="M3MaterialChipSize">12</x:Double>
  <x:Double x:Key="M3MaterialChipDeleteIconContainerLength">18</x:Double>
  <x:Double x:Key="M3MaterialChipDeleteIconLength">11</x:Double>
  <x:Double x:Key="M3MaterialChipBorderThickness">1</x:Double>
  <x:Double x:Key="M3MateriaChipCheckGlyphSize">20</x:Double>
  <x:Double x:Key="M3MaterialChipElevation">4</x:Double>
  <x:Double x:Key="M3MaterialChipIconSize">24</x:Double>
  <CornerRadius x:Key="M3MaterialChipCornerRadius">8</CornerRadius>
  <Thickness x:Key="M3MaterialChipElevationMargin">4</Thickness>
  <Style x:Key="M3MaterialChipDeleteIconButtonStyle" TargetType="Button">
    <Setter Property="Foreground" Value="{StaticResource OnSurfaceVariantBrush}" />
    <Setter Property="Background" Value="Transparent" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="Button">
          <Border x:Name="BorderRoot" Width="{StaticResource M3MaterialChipDeleteIconContainerLength}" Height="{StaticResource M3MaterialChipDeleteIconContainerLength}" Background="{TemplateBinding Background}">
            <Path x:Name="GlyphElement" Width="{StaticResource M3MaterialChipDeleteIconLength}" Height="{StaticResource M3MaterialChipDeleteIconLength}" HorizontalAlignment="Center" VerticalAlignment="Center" AutomationProperties.AccessibilityView="Raw" Data="{StaticResource M3MaterialChipDeleteIcon}" Fill="{TemplateBinding Foreground}" Stretch="Uniform" />
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="M3MaterialChipStyle" TargetType="utu:Chip">
    <Setter Property="Foreground" Value="{StaticResource M3MaterialChipForeground}" />
    <Setter Property="Background" Value="{StaticResource M3MaterialChipBackground}" />
    <Setter Property="BorderBrush" Value="{StaticResource OutlineBrush}" />
    <Setter Property="BorderThickness" Value="{StaticResource M3MaterialChipBorderThickness}" />
    <Setter Property="CornerRadius" Value="{StaticResource M3MaterialChipCornerRadius}" />
    <Setter Property="VerticalAlignment" Value="Stretch" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="Padding" Value="8,0" />
    <Setter Property="Icon" Value="{x:Null}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="utu:Chip">
          <Grid>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="PointerOver">
                  <VisualState.Setters>
                    <Setter Target="ElevatedRoot.Background" Value="{StaticResource M3MaterialChipBackground}" />
                    <Setter Target="StateOverlay.Background" Value="{StaticResource M3MaterialChipPointerOverStateOverlay}" />
                    <Setter Target="ContentPresenter.Foreground" Value="{StaticResource M3MaterialChipPointerOverForeground}" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="Pressed">
                  <VisualState.Setters>
                    <Setter Target="ElevatedRoot.Background" Value="{StaticResource M3MaterialChipBackground}" />
                    <Setter Target="StateOverlay.Background" Value="{StaticResource M3MaterialChipPressedStateOverlay}" />
                    <Setter Target="ContentPresenter.Foreground" Value="{StaticResource M3MaterialChipPressedForeground}" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="Disabled">
                  <VisualState.Setters>
                    <Setter Target="ElevatedRoot.Elevation" Value="0" />
                    <Setter Target="ElevatedRoot.Background" Value="{StaticResource M3MaterialChipDisabledBackground}" />
                    <Setter Target="ContentPresenter.Foreground" Value="{StaticResource M3MaterialChipDisabledForeground}" />
                    <Setter Target="PART_RemoveButton.Foreground" Value="{StaticResource M3MaterialChipIconDisabledForeground}" />
                    <Setter Target="ElevatedRoot.BorderBrush" Value="{StaticResource M3MaterialChipDisabledBorderBrush}" />
                    <Setter Target="IconPresenter.Foreground" Value="{StaticResource M3MaterialChipIconDisabledForeground}" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="Checked">
                  <VisualState.Setters>
                    <Setter Target="ElevatedRoot.Background" Value="{StaticResource M3MaterialChipSelectedBackground}" />
                    <Setter Target="StateOverlay.Background" Value="{StaticResource M3MaterialChipSelectedBackground}" />
                    <Setter Target="ContentPresenter.Foreground" Value="{StaticResource M3MaterialChipSelectedForeground}" />
                    <Setter Target="IconPresenter.Foreground" Value="{StaticResource M3MaterialChipIconForeground}" />
                    <Setter Target="CheckGlyphElement.Visibility" Value="Visible" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="CheckedPointerOver">
                  <VisualState.Setters>
                    <Setter Target="ElevatedRoot.Background" Value="{StaticResource M3MaterialChipSelectedBackground}" />
                    <Setter Target="StateOverlay.Background" Value="{StaticResource M3MaterialChipSelectedPointerOverStateOverlay}" />
                    <Setter Target="ContentPresenter.Foreground" Value="{StaticResource M3MaterialChipSelectedPointerOverForeground}" />
                    <Setter Target="CheckGlyphElement.Visibility" Value="Visible" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="CheckedPressed">
                  <VisualState.Setters>
                    <Setter Target="ElevatedRoot.Background" Value="{StaticResource M3MaterialChipSelectedBackground}" />
                    <Setter Target="StateOverlay.Background" Value="{StaticResource M3MaterialChipSelectedPressedStateOverlay}" />
                    <Setter Target="ContentPresenter.Foreground" Value="{StaticResource M3MaterialChipSelectedPressedForeground}" />
                    <Setter Target="CheckGlyphElement.Visibility" Value="Visible" />
                  </VisualState.Setters>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <toolkit:ElevatedView x:Name="ElevatedRoot" Height="{StaticResource M3MaterialChipHeight}" Margin="{StaticResource M3MaterialChipElevationMargin}" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding CornerRadius}" Elevation="{TemplateBinding Elevation}">
              <Grid CornerRadius="{TemplateBinding CornerRadius}">
                <Border x:Name="StateOverlay" Background="Transparent" CornerRadius="{TemplateBinding CornerRadius}" />
                <um:Ripple Padding="{TemplateBinding Padding}" CornerRadius="{TemplateBinding CornerRadius}" Feedback="{StaticResource OnSurfaceFocusedBrush}">
                  <Grid>
                    <Grid.ColumnDefinitions>
                      <!--  0: Leading Icon, 1: Content: 2: Remove Button  -->
                      <ColumnDefinition Width="Auto" />
                      <ColumnDefinition Width="*" />
                      <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <!--  C0: Leading Icon / Check Glyph  -->
                    <!--  fixme: ContentControl/Presenter template-binding to icon would crash on uwp  -->
                    <ContentPresenter x:Name="IconPresenter" Grid.Column="0" Width="{StaticResource M3MaterialChipIconSize}" Height="{StaticResource M3MaterialChipIconSize}" AutomationProperties.AccessibilityView="Raw" Content="{TemplateBinding Icon}" ContentTemplate="{TemplateBinding IconTemplate}" Foreground="{StaticResource M3MaterialChipIconForeground}" Visibility="{Binding Icon, RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource MaterialNullToCollapsedConverter}, FallbackValue=Collapsed}" />
                    <Grid x:Name="CheckGlyphElement" Grid.Column="0" Width="{StaticResource M3MateriaChipCheckGlyphSize}" Height="{StaticResource M3MateriaChipCheckGlyphSize}" Padding="2" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Visibility="Collapsed">
                      <Path HorizontalAlignment="Center" VerticalAlignment="Center" AutomationProperties.AccessibilityView="Raw" Data="{StaticResource M3MaterialCheckGlyphPathData}" Fill="{TemplateBinding Foreground}" Stretch="Uniform" Visibility="{Binding Icon, RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource MaterialEmptyOrNullToVisible}, FallbackValue=Collapsed}" />
                    </Grid>
                    <!--  C1: Content  -->
                    <ContentPresenter x:Name="ContentPresenter" Grid.Column="1" Margin="8,0" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" AutomationProperties.AccessibilityView="Raw" CharacterSpacing="7" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" ContentTransitions="{TemplateBinding ContentTransitions}" FontFamily="{StaticResource MaterialMediumFontFamily}" Foreground="{TemplateBinding Foreground}" />
                    <!--  C2: Remove Button  -->
                    <Button x:Name="PART_RemoveButton" Grid.Column="2" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Foreground="{TemplateBinding Foreground}" Style="{StaticResource M3MaterialChipDeleteIconButtonStyle}" Visibility="{Binding CanRemove, RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource MaterialTrueToVisible}, FallbackValue=Collapsed}" />
                  </Grid>
                </um:Ripple>
              </Grid>
            </toolkit:ElevatedView>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="M3MaterialAssistChipStyle" BasedOn="{StaticResource M3MaterialChipStyle}" TargetType="utu:Chip">
    <Setter Property="BorderBrush" Value="{StaticResource OutlineBrush}" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="IsCheckable" Value="False" />
    <Setter Property="CanRemove" Value="False" />
  </Style>
  <Style x:Key="M3MaterialElevatedAssistChipStyle" BasedOn="{StaticResource M3MaterialChipStyle}" TargetType="utu:Chip">
    <Setter Property="BorderThickness" Value="0" />
    <Setter Property="Elevation" Value="{StaticResource M3MaterialChipElevation}" />
    <Setter Property="Background" Value="{StaticResource SurfaceBrush}" />
    <Setter Property="IsCheckable" Value="False" />
    <Setter Property="CanRemove" Value="False" />
  </Style>
  <Style x:Key="M3MaterialInputChipStyle" BasedOn="{StaticResource M3MaterialChipStyle}" TargetType="utu:Chip">
    <Setter Property="BorderBrush" Value="{StaticResource OutlineBrush}" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="CanRemove" Value="True" />
    <Setter Property="IsCheckable" Value="True" />
  </Style>
  <Style x:Key="M3MaterialFilterChipStyle" BasedOn="{StaticResource M3MaterialChipStyle}" TargetType="utu:Chip">
    <Setter Property="BorderBrush" Value="{StaticResource OutlineBrush}" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="CanRemove" Value="True" />
    <Setter Property="IsCheckable" Value="True" />
  </Style>
  <Style x:Key="M3MaterialElevatedFilterChipStyle" BasedOn="{StaticResource M3MaterialChipStyle}" TargetType="utu:Chip">
    <Setter Property="BorderThickness" Value="0" />
    <Setter Property="Elevation" Value="{StaticResource M3MaterialChipElevation}" />
    <Setter Property="Background" Value="{StaticResource SurfaceBrush}" />
    <Setter Property="CanRemove" Value="True" />
    <Setter Property="IsCheckable" Value="True" />
  </Style>
  <Style x:Key="M3MaterialSuggestionChipStyle" BasedOn="{StaticResource M3MaterialChipStyle}" TargetType="utu:Chip">
    <Setter Property="BorderBrush" Value="{StaticResource OutlineBrush}" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="CanRemove" Value="False" />
    <Setter Property="IsCheckable" Value="True" />
  </Style>
  <Style x:Key="M3MaterialElevatedSuggestionChipStyle" BasedOn="{StaticResource M3MaterialChipStyle}" TargetType="utu:Chip">
    <Setter Property="BorderThickness" Value="0" />
    <Setter Property="Elevation" Value="{StaticResource M3MaterialChipElevation}" />
    <Setter Property="Background" Value="{StaticResource SurfaceBrush}" />
    <Setter Property="CanRemove" Value="False" />
    <Setter Property="IsCheckable" Value="True" />
  </Style>
  <!--origin: Styles\Controls\v2\ChipGroup.xaml-->
  <ItemsPanelTemplate x:Key="MaterialHorizontalChipGroupItemsPanel">
    <StackPanel Orientation="Horizontal" Spacing="8" />
  </ItemsPanelTemplate>
  <Style x:Key="M3MaterialBaseChipGroupStyle" TargetType="utu:ChipGroup">
    <Setter Property="ItemsPanel" Value="{StaticResource MaterialHorizontalChipGroupItemsPanel}" />
  </Style>
  <Style x:Key="M3MaterialInputChipGroupStyle" BasedOn="{StaticResource M3MaterialBaseChipGroupStyle}" TargetType="utu:ChipGroup">
    <Setter Property="ItemContainerStyle" Value="{StaticResource M3MaterialInputChipStyle}" />
    <Setter Property="CanRemove" Value="True" />
    <Setter Property="SelectionMode" Value="Multiple" />
  </Style>
  <Style x:Key="M3MaterialElevatedSuggestionChipGroupStyle" BasedOn="{StaticResource M3MaterialBaseChipGroupStyle}" TargetType="utu:ChipGroup">
    <Setter Property="ItemContainerStyle" Value="{StaticResource M3MaterialElevatedSuggestionChipStyle}" />
    <Setter Property="CanRemove" Value="False" />
    <Setter Property="SelectionMode" Value="Single" />
  </Style>
  <Style x:Key="M3MaterialSuggestionChipGroupStyle" BasedOn="{StaticResource M3MaterialBaseChipGroupStyle}" TargetType="utu:ChipGroup">
    <Setter Property="ItemContainerStyle" Value="{StaticResource M3MaterialSuggestionChipStyle}" />
    <Setter Property="CanRemove" Value="False" />
    <Setter Property="SelectionMode" Value="Single" />
  </Style>
  <Style x:Key="M3MaterialElevatedFilterChipGroupStyle" BasedOn="{StaticResource M3MaterialBaseChipGroupStyle}" TargetType="utu:ChipGroup">
    <Setter Property="ItemContainerStyle" Value="{StaticResource M3MaterialElevatedFilterChipStyle}" />
    <Setter Property="CanRemove" Value="False" />
    <Setter Property="SelectionMode" Value="Multiple" />
  </Style>
  <Style x:Key="M3MaterialFilterChipGroupStyle" BasedOn="{StaticResource M3MaterialBaseChipGroupStyle}" TargetType="utu:ChipGroup">
    <Setter Property="ItemContainerStyle" Value="{StaticResource M3MaterialFilterChipStyle}" />
    <Setter Property="CanRemove" Value="False" />
    <Setter Property="SelectionMode" Value="Multiple" />
  </Style>
  <Style x:Key="M3MaterialElevatedAssistChipGroupStyle" BasedOn="{StaticResource M3MaterialBaseChipGroupStyle}" TargetType="utu:ChipGroup">
    <Setter Property="ItemContainerStyle" Value="{StaticResource M3MaterialElevatedAssistChipStyle}" />
    <Setter Property="CanRemove" Value="False" />
    <Setter Property="SelectionMode" Value="None" />
  </Style>
  <Style x:Key="M3MaterialAssistChipGroupStyle" BasedOn="{StaticResource M3MaterialBaseChipGroupStyle}" TargetType="utu:ChipGroup">
    <Setter Property="ItemContainerStyle" Value="{StaticResource M3MaterialAssistChipStyle}" />
    <Setter Property="CanRemove" Value="False" />
    <Setter Property="SelectionMode" Value="None" />
  </Style>
  <!--origin: Styles\Controls\v2\Divider.xaml-->
  <x:Double x:Key="M3MaterialDividerHeight">1</x:Double>
  <Style x:Key="M3MaterialDividerStyle" TargetType="utu:Divider">
    <Setter Property="Foreground" Value="{StaticResource OnSurfaceFocusedBrush}" />
    <Setter Property="SubHeaderForeground" Value="{StaticResource OnSurfaceLowBrush}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="utu:Divider">
          <Grid>
            <Grid.RowDefinitions>
              <RowDefinition Height="Auto" />
              <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <Rectangle Fill="{TemplateBinding Foreground}" Height="{StaticResource M3MaterialDividerHeight}" />
            <TextBlock Text="{TemplateBinding SubHeader}" Visibility="{Binding SubHeader, RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource MaterialEmptyToCollapsed}, FallbackValue=Collapsed}" Style="{StaticResource M3MaterialBodySmall}" Foreground="{TemplateBinding SubHeaderForeground}" Margin="0,4,0,0" Grid.Row="1" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <!--origin: Styles\Controls\v2\NavigationBar.xaml-->
  <mobile:Style x:Key="M3MaterialNavigationBarStyle" BasedOn="{StaticResource BaseM3MaterialNavigationBarStyle}" TargetType="utu:NavigationBar">
    <ios:Setter Property="Height" Value="NaN" />
    <Setter Property="MainCommandStyle" Value="{StaticResource M3MaterialMainCommandStyle}" />
    <Setter Property="toolkit:VisibleBoundsPadding.PaddingMask" Value="Top" />
    <Setter Property="Template" Value="{StaticResource M3MaterialNativeNavigationBarTemplate}" />
  </mobile:Style>
  <mobile:Style x:Key="M3MaterialModalNavigationBarStyle" BasedOn="{StaticResource BaseM3MaterialModalNavigationBarStyle}" TargetType="utu:NavigationBar">
    <ios:Setter Property="Height" Value="NaN" />
    <Setter Property="toolkit:VisibleBoundsPadding.PaddingMask" Value="Top" />
    <Setter Property="MainCommandStyle" Value="{StaticResource M3MaterialModalMainCommandStyle}" />
    <Setter Property="Template" Value="{StaticResource M3MaterialNativeNavigationBarTemplate}" />
  </mobile:Style>
  <not_mobile:Style x:Key="M3MaterialNavigationBarStyle" TargetType="utu:NavigationBar" BasedOn="{StaticResource BaseM3MaterialNavigationBarStyle}">
    <Setter Property="MainCommandStyle" Value="{StaticResource M3MaterialMainCommandStyle}" />
  </not_mobile:Style>
  <not_mobile:Style x:Key="M3MaterialModalNavigationBarStyle" TargetType="utu:NavigationBar" BasedOn="{StaticResource BaseM3MaterialModalNavigationBarStyle}">
    <Setter Property="MainCommandStyle" Value="{StaticResource M3MaterialModalMainCommandStyle}" />
  </not_mobile:Style>
  <x:Double x:Key="M3MaterialNavigationBarElevation">4</x:Double>
  <x:Double x:Key="M3MaterialNavigationBarHeight">48</x:Double>
  <Thickness x:Key="M3MaterialNavigationBarContentMargin">16,0,0,0</Thickness>
  <Thickness x:Key="M3MaterialAppBarEllipsisButtonInnerBorderMargin">2,6,6,6</Thickness>
  <ios:ControlTemplate x:Key="M3MaterialNativeNavigationBarTemplate" TargetType="utu:NavigationBar">
    <Border BorderThickness="{TemplateBinding Padding}">
      <utu:NativeNavigationBarPresenter Height="44" x:Name="NavigationBarPresenter" />
    </Border>
  </ios:ControlTemplate>
  <android:ControlTemplate x:Key="M3MaterialNativeNavigationBarTemplate" TargetType="utu:NavigationBar">
    <utu:NativeNavigationBarPresenter x:Name="NavigationBarPresenter" />
  </android:ControlTemplate>
  <ControlTemplate x:Key="XamlM3MaterialNavigationBarTemplate" TargetType="utu:NavigationBar">
    <utu:NavigationBarPresenter Style="{StaticResource M3MaterialNavigationBarPresenter}" x:Name="NavigationBarPresenter" />
  </ControlTemplate>
  <Style x:Key="M3MaterialNavigationBarPresenter" TargetType="utu:NavigationBarPresenter">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="utu:NavigationBarPresenter">
          <CommandBar x:Name="XamlNavigationBarCommandBar" Style="{StaticResource M3MaterialNavigationBarCommandBar}" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="M3MaterialNavigationBarCommandBar" TargetType="CommandBar">
    <Setter Property="Background" Value="{StaticResource SurfaceBrush}" />
    <Setter Property="Foreground" Value="{StaticResource OnSurfaceBrush}" />
    <Setter Property="Padding" Value="4,0,0,0" />
    <Setter Property="IsTabStop" Value="False" />
    <Setter Property="VerticalAlignment" Value="Top" />
    <Setter Property="HorizontalAlignment" Value="Stretch" />
    <Setter Property="HorizontalContentAlignment" Value="Center" />
    <Setter Property="VerticalContentAlignment" Value="Top" />
    <Setter Property="ClosedDisplayMode" Value="Compact" />
    <Setter Property="ExitDisplayModeOnAccessKeyInvoked" Value="False" />
    <not_win:Setter Property="CornerRadius" Value="{ThemeResource ControlCornerRadius}" />
    <Setter Property="utu:CommandBarExtensions.MainCommand" Value="{x:Null}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="CommandBar">
          <Grid x:Name="LayoutRoot">
            <Grid.Resources>
              <Visibility x:Key="AppBarButtonHasFlyoutChevronVisibility">Collapsed</Visibility>
              <Storyboard x:Key="OverlayOpeningAnimation">
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity">
                  <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="0" />
                  <SplineDoubleKeyFrame KeyTime="{StaticResource ControlNormalAnimationDuration}" KeySpline="{StaticResource ControlFastOutSlowInKeySpline}" Value="1" />
                </DoubleAnimationUsingKeyFrames>
              </Storyboard>
              <Storyboard x:Key="OverlayClosingAnimation">
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity">
                  <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="1" />
                  <SplineDoubleKeyFrame KeyTime="{StaticResource ControlFastAnimationDuration}" KeySpline="{StaticResource ControlFastOutSlowInKeySpline}" Value="0" />
                </DoubleAnimationUsingKeyFrames>
              </Storyboard>
              <x:Double x:Key="M3MaterialAppBarButtonContentHeight">24</x:Double>
              <x:Double x:Key="AppBarThemeCompactHeight">56</x:Double>
              <Style TargetType="SplitButton" BasedOn="{StaticResource SplitButtonCommandBarStyle}" />
              <Style TargetType="ToggleSplitButton" BasedOn="{StaticResource SplitButtonCommandBarStyle}" />
              <Style TargetType="AppBarButton" BasedOn="{StaticResource M3MaterialAppBarButtonStyle}">
                <Setter Property="Padding" Value="12,16,12,16" />
              </Style>
            </Grid.Resources>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="Disabled">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="EllipsisIcon" Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource CommandBarEllipsisIconForegroundDisabled}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="DisplayModeStates">
                <contract8Present:VisualStateGroup.Transitions>
                  <!-- UNO WORKAROUND: Use literal value of ControlNormalAnimationDuration. Resolving a StaticResource string to a string non-DP causes an exception -->
                  <VisualTransition From="CompactClosed" To="CompactOpenDown" GeneratedDuration="00:00:00.250">
                    <Storyboard>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="OpenBorder" Storyboard.TargetProperty="Visibility">
                        <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Visible" />
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="MoreButton" Storyboard.TargetProperty="VerticalAlignment">
                        <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Stretch" />
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HighContrastBorder" Storyboard.TargetProperty="Visibility">
                        <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Visible" />
                      </ObjectAnimationUsingKeyFrames>
                      <DoubleAnimationUsingKeyFrames Storyboard.TargetName="OverflowContentRoot" Storyboard.TargetProperty="Opacity">
                        <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="1" />
                      </DoubleAnimationUsingKeyFrames>
                      <DoubleAnimationUsingKeyFrames Storyboard.TargetName="OverflowContentRootTransform" Storyboard.TargetProperty="Y">
                        <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="{ThemeResource AppBarThemeCompactHeight}" />
                        <SplineDoubleKeyFrame KeyTime="{StaticResource ControlNormalAnimationDuration}" KeySpline="{StaticResource ControlFastOutSlowInKeySpline}" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=CommandBarTemplateSettings.ContentHeight}" />
                      </DoubleAnimationUsingKeyFrames>
                      <DoubleAnimationUsingKeyFrames Storyboard.TargetName="OverflowContentTransform" Storyboard.TargetProperty="Y">
                        <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=CommandBarTemplateSettings.NegativeOverflowContentHeight}" />
                        <SplineDoubleKeyFrame KeyTime="{StaticResource ControlNormalAnimationDuration}" KeySpline="{StaticResource ControlFastOutSlowInKeySpline}" Value="0" />
                      </DoubleAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualTransition>
                  <!-- UNO WORKAROUND: Use literal value of ControlFastAnimationDuration. Resolving a StaticResource string to a string non-DP causes an exception -->
                  <VisualTransition From="CompactOpenDown" To="CompactClosed" GeneratedDuration="00:00:00.167">
                    <Storyboard>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="MoreButton" Storyboard.TargetProperty="VerticalAlignment">
                        <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Stretch" />
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HighContrastBorder" Storyboard.TargetProperty="Visibility">
                        <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Visible" />
                      </ObjectAnimationUsingKeyFrames>
                      <DoubleAnimationUsingKeyFrames Storyboard.TargetName="OverflowContentRoot" Storyboard.TargetProperty="Opacity">
                        <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="1" />
                        <DiscreteDoubleKeyFrame KeyTime="{StaticResource ControlFastAnimationDuration}" Value="0" />
                      </DoubleAnimationUsingKeyFrames>
                      <DoubleAnimationUsingKeyFrames Storyboard.TargetName="OverflowContentRootTransform" Storyboard.TargetProperty="Y">
                        <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=CommandBarTemplateSettings.ContentHeight}" />
                        <SplineDoubleKeyFrame KeyTime="{StaticResource ControlFastAnimationDuration}" KeySpline="{StaticResource ControlFastOutSlowInKeySpline}" Value="{ThemeResource AppBarThemeCompactHeight}" />
                      </DoubleAnimationUsingKeyFrames>
                      <DoubleAnimationUsingKeyFrames Storyboard.TargetName="OverflowContentTransform" Storyboard.TargetProperty="Y">
                        <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="0" />
                        <SplineDoubleKeyFrame KeyTime="{StaticResource ControlFastAnimationDuration}" KeySpline="{StaticResource ControlFastOutSlowInKeySpline}" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=CommandBarTemplateSettings.NegativeOverflowContentHeight}" />
                      </DoubleAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualTransition>
                </contract8Present:VisualStateGroup.Transitions>
                <VisualState x:Name="CompactClosed" />
                <VisualState x:Name="CompactOpenUp">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="OpenBorder" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Visible" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="MoreButton" Storyboard.TargetProperty="VerticalAlignment">
                      <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Stretch" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HighContrastBorder" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Visible" />
                    </ObjectAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="OverflowContentRoot" Storyboard.TargetProperty="Opacity">
                      <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="1" />
                    </DoubleAnimationUsingKeyFrames>
                    <contract8Present:DoubleAnimationUsingKeyFrames Storyboard.TargetName="OverflowContentRootTransform" Storyboard.TargetProperty="Y">
                      <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=CommandBarTemplateSettings.OverflowContentCompactYTranslation}" />
                    </contract8Present:DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="OverflowContentRootMarginOffsetTransform" Storyboard.TargetProperty="Y">
                      <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=CommandBarTemplateSettings.ContentHeight}" />
                    </DoubleAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="CompactOpenDown">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="OpenBorder" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Visible" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="MoreButton" Storyboard.TargetProperty="VerticalAlignment">
                      <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Stretch" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HighContrastBorder" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Visible" />
                    </ObjectAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="OverflowContentRoot" Storyboard.TargetProperty="Opacity">
                      <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="1" />
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="OverflowContentRootTransform" Storyboard.TargetProperty="Y">
                      <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=CommandBarTemplateSettings.ContentHeight}" />
                    </DoubleAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="AvailableCommandsStates">
                <VisualState x:Name="BothCommands" />
                <VisualState x:Name="PrimaryCommandsOnly">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="OverflowContentRoot" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Collapsed" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="MoreButton" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Collapsed" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="SecondaryCommandsOnly">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PrimaryItemsControl" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Collapsed" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="DynamicOverflowStates">
                <VisualState x:Name="DynamicOverflowDisabled" />
                <VisualState x:Name="DynamicOverflowEnabled">
                  <VisualState.Setters>
                    <Setter Target="ContentControlColumnDefinition.Width" Value="Auto" />
                    <Setter Target="PrimaryItemsControlColumnDefinition.Width" Value="*" />
                  </VisualState.Setters>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid x:Name="ContentRoot" VerticalAlignment="Center" Height="{TemplateBinding Height}" MinHeight="{ThemeResource AppBarThemeCompactHeight}" Background="{TemplateBinding Background}" XYFocusKeyboardNavigation="Enabled">
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" MinWidth="6" />
              </Grid.ColumnDefinitions>
              <Grid.RenderTransform>
                <TranslateTransform x:Name="ContentTransform" />
              </Grid.RenderTransform>
              <Grid>
                <Grid.ColumnDefinitions>
                  <ColumnDefinition x:Name="MainCommandColumnDefinition" Width="Auto" />
                  <ColumnDefinition x:Name="ContentControlColumnDefinition" Width="*" />
                  <ColumnDefinition x:Name="PrimaryItemsControlColumnDefinition" Width="Auto" />
                </Grid.ColumnDefinitions>
                <ContentPresenter x:Name="MainCommandPresenter" Margin="{TemplateBinding Padding}" Content="{Binding Path=(utu:CommandBarExtensions.MainCommand), RelativeSource={RelativeSource TemplatedParent}}">
                  <ContentPresenter.Resources>
                    <x:Double x:Key="M3MaterialAppBarButtonContentHeight">16</x:Double>
                  </ContentPresenter.Resources>
                </ContentPresenter>
                <!--
									Use a ContentControl rather than a ContentPresenter so that IsEnabled can be set to false
									in the Minimal/HiddenClosed states to remove it from being a tab-stop candidate.
								-->
                <ContentControl x:Name="ContentControl" Grid.Column="1" Margin="{StaticResource M3MaterialNavigationBarContentMargin}" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" ContentTransitions="{TemplateBinding ContentTransitions}" Foreground="{TemplateBinding Foreground}" FontFamily="{StaticResource MaterialRegularFontFamily}" FontSize="20" FontWeight="Medium" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" IsTabStop="False" />
                <ItemsControl x:Name="PrimaryItemsControl" HorizontalAlignment="Center" MinHeight="{ThemeResource AppBarThemeCompactHeight}" IsTabStop="False" Grid.Column="2">
                  <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                      <StackPanel Orientation="Horizontal" />
                    </ItemsPanelTemplate>
                  </ItemsControl.ItemsPanel>
                </ItemsControl>
              </Grid>
              <Button x:Name="MoreButton" Foreground="{TemplateBinding Foreground}" Style="{StaticResource M3MaterialEllipsisButton}" Padding="{ThemeResource CommandBarMoreButtonMargin}" MinHeight="{ThemeResource AppBarThemeCompactHeight}" VerticalAlignment="Top" Grid.Column="2" Control.IsTemplateKeyTipTarget="True" IsAccessKeyScope="True">
                <FontIcon x:Name="EllipsisIcon" VerticalAlignment="Center" FontFamily="{ThemeResource SymbolThemeFontFamily}" FontSize="20" Glyph="&#xe712;" Height="20" RenderTransformOrigin="0.5, 0.5">
                  <FontIcon.RenderTransform>
                    <RotateTransform Angle="90" />
                  </FontIcon.RenderTransform>
                </FontIcon>
              </Button>
              <!-- UNO WORKAROUND: Added IsHitTestVisible="False". The Rectangle was blocking pointer events -->
              <Rectangle x:Name="HighContrastBorder" x:DeferLoadStrategy="Lazy" Grid.ColumnSpan="3" Visibility="Collapsed" IsHitTestVisible="False" VerticalAlignment="Stretch" StrokeThickness="1" />
              <Border x:Name="OpenBorder" Grid.ColumnSpan="3" Visibility="Collapsed" VerticalAlignment="Stretch" contract7Present:CornerRadius="{TemplateBinding CornerRadius}" contract7NotPresent:CornerRadius="{ThemeResource ControlCornerRadius}" />
            </Grid>
            <!-- UNO WORKAROUND: Added IsTabStop="False". Navigation focus with keyboard was erroneously focusing on the Popup instead of the SecondaryCommands -->
            <Popup x:Name="OverflowPopup">
              <Popup.RenderTransform>
                <TransformGroup>
                  <TranslateTransform x:Name="OverflowContentRootMarginOffsetTransform" />
                  <TranslateTransform x:Name="OverflowContentRootTransform" X="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=CommandBarTemplateSettings.OverflowContentHorizontalOffset}" />
                </TransformGroup>
              </Popup.RenderTransform>
              <Grid x:Name="OverflowContentRoot" Opacity="0" MinWidth="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=CommandBarTemplateSettings.OverflowContentMinWidth}" MaxWidth="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=CommandBarTemplateSettings.OverflowContentMaxWidth}" MaxHeight="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=CommandBarTemplateSettings.OverflowContentMaxHeight}">
                <Grid.RowDefinitions>
                  <RowDefinition />
                  <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <!-- For 21H1 and up, we'll need to wrap the clip and presenter in a Grid which will host the Drop Shadow. -->
                <Grid x:Name="SecondaryItemsControlShadowWrapper" contract7Present:CornerRadius="{ThemeResource OverlayCornerRadius}" contract7NotPresent:CornerRadius="{ThemeResource OverlayCornerRadius}">
                  <Grid.Clip>
                    <RectangleGeometry Rect="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=CommandBarTemplateSettings.OverflowContentClipRect}">
                      <RectangleGeometry.Transform>
                        <TransformGroup>
                          <TranslateTransform x:Name="OverflowContentRootClipTransform" />
                        </TransformGroup>
                      </RectangleGeometry.Transform>
                    </RectangleGeometry>
                  </Grid.Clip>
                  <CommandBarOverflowPresenter x:Name="SecondaryItemsControl" Style="{TemplateBinding CommandBarOverflowPresenterStyle}" IsTabStop="False">
                    <CommandBarOverflowPresenter.RenderTransform>
                      <TranslateTransform x:Name="OverflowContentTransform" />
                    </CommandBarOverflowPresenter.RenderTransform>
                    <CommandBarOverflowPresenter.ItemContainerStyle>
                      <Style TargetType="FrameworkElement">
                        <Setter Property="HorizontalAlignment" Value="Stretch" />
                        <Setter Property="Width" Value="NaN" />
                      </Style>
                    </CommandBarOverflowPresenter.ItemContainerStyle>
                  </CommandBarOverflowPresenter>
                </Grid>
                <!--
									In order to give us extra space in the windowed popup to translate things down,
									we add a rectangle to make the HWND taller than it otherwise would be.
								-->
                <Rectangle x:Name="WindowedPopupPadding" Grid.Row="1" Height="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=CommandBarTemplateSettings.ContentHeight}" />
              </Grid>
            </Popup>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="M3MaterialAppBarButtonOverflowStyle" TargetType="AppBarButton" BasedOn="{StaticResource AppBarButtonOverflowStyle}">
    <Setter Property="Background" Value="Transparent" />
    <Setter Property="Foreground" Value="{ThemeResource OnSurfaceBrush}" />
  </Style>
  <Style x:Key="M3MaterialEllipsisButton" TargetType="Button">
    <Setter Property="Background" Value="Transparent" />
    <Setter Property="Foreground" Value="{ThemeResource OnSurfaceBrush}" />
    <Setter Property="BorderBrush" Value="Transparent" />
    <Setter Property="BorderThickness" Value="0" />
    <Setter Property="Padding" Value="0" />
    <Setter Property="HorizontalAlignment" Value="Stretch" />
    <Setter Property="HorizontalContentAlignment" Value="Center" />
    <Setter Property="VerticalAlignment" Value="Stretch" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="FontFamily" Value="{StaticResource MaterialRegularFontFamily}" />
    <Setter Property="FontWeight" Value="SemiBold" />
    <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}" />
    <Setter Property="Width" Value="{ThemeResource AppBarExpandButtonThemeWidth}" />
    <Setter Property="UseSystemFocusVisuals" Value="{StaticResource UseSystemFocusVisuals}" />
    <Setter Property="FocusVisualMargin" Value="-3" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="Button">
          <Grid Background="Transparent">
            <um:Ripple Feedback="{TemplateBinding Foreground}" FeedbackOpacity="{StaticResource PressedOpacity}">
              <ContentPresenter x:Name="ContentPresenter" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" contract7Present:CornerRadius="{TemplateBinding CornerRadius}" ContentTransitions="{TemplateBinding ContentTransitions}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Margin="{StaticResource M3MaterialAppBarEllipsisButtonInnerBorderMargin}" Padding="0" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" AutomationProperties.AccessibilityView="Raw" Control.IsTemplateFocusTarget="True" />
            </um:Ripple>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="BaseM3MaterialNavigationBarStyle" TargetType="utu:NavigationBar">
    <!-- Setting content to empty to avoid getting the datacontext -->
    <Setter Property="Content" Value="" />
    <Setter Property="ContentTemplate">
      <Setter.Value>
        <DataTemplate>
          <TextBlock Text="{Binding}" Style="{StaticResource M3MaterialTitleLarge}" />
        </DataTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="Background" Value="{StaticResource SurfaceBrush}" />
    <Setter Property="Foreground" Value="{StaticResource OnSurfaceBrush}" />
    <android:Setter Property="(toolkit:UIElementExtensions.Elevation)" Value="{StaticResource M3MaterialNavigationBarElevation}" />
    <Setter Property="Height" Value="{StaticResource M3MaterialNavigationBarHeight}" />
    <Setter Property="Padding" Value="16,0,0,0" />
    <Setter Property="HorizontalAlignment" Value="Stretch" />
    <Setter Property="VerticalAlignment" Value="Top" />
    <Setter Property="HorizontalContentAlignment" Value="Left" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="OverflowButtonVisibility" Value="Collapsed" />
    <Setter Property="IsDynamicOverflowEnabled" Value="False" />
    <Setter Property="Template" Value="{StaticResource XamlM3MaterialNavigationBarTemplate}" />
  </Style>
  <Style x:Key="M3MaterialMainCommandStyle" TargetType="AppBarButton" BasedOn="{StaticResource M3MaterialAppBarButtonStyle}">
    <Setter Property="Foreground" Value="{ThemeResource OnSurfaceBrush}" />
  </Style>
  <Style x:Key="BaseM3MaterialModalNavigationBarStyle" TargetType="utu:NavigationBar" BasedOn="{StaticResource BaseM3MaterialNavigationBarStyle}">
    <Setter Property="MainCommandStyle" Value="{StaticResource M3MaterialModalMainCommandStyle}" />
    <Setter Property="Background" Value="{ThemeResource SurfaceBrush}" />
    <Setter Property="Foreground" Value="{ThemeResource OnSurfaceBrush}" />
  </Style>
  <Style x:Key="M3MaterialModalMainCommandStyle" TargetType="AppBarButton" BasedOn="{StaticResource M3MaterialMainCommandStyle}">
    <Setter Property="Foreground" Value="{ThemeResource OnSurfaceBrush}" />
  </Style>
  <!--origin: Styles\Controls\v2\TopTabBar.xaml-->
  <StaticResource x:Key="M3MaterialTopTabBarBackground" ResourceKey="SystemControlTransparentBrush" />
  <StaticResource x:Key="M3MaterialTopTabBarIndicator" ResourceKey="PrimaryBrush" />
  <StaticResource x:Key="M3MaterialTopTabBarItemBackgroundSelected" ResourceKey="SystemControlTransparentBrush" />
  <StaticResource x:Key="M3MaterialTopTabBarItemBackgroundSelectedPointerOver" ResourceKey="PrimaryHoverBrush" />
  <StaticResource x:Key="M3MaterialTopTabBarItemBackgroundSelectedPressed" ResourceKey="PrimaryPressedBrush" />
  <StaticResource x:Key="M3MaterialTopTabBarItemBackgroundSelectedFocused" ResourceKey="M3MaterialTopTabBarItemPrimaryFocusedBrush" />
  <StaticResource x:Key="M3MaterialTopTabBarItemForegroundSelected" ResourceKey="PrimaryBrush" />
  <StaticResource x:Key="M3MaterialTopTabBarItemForegroundSelectedPointerOver" ResourceKey="PrimaryBrush" />
  <StaticResource x:Key="M3MaterialTopTabBarItemForegroundSelectedPressed" ResourceKey="PrimaryBrush" />
  <StaticResource x:Key="M3MaterialTopTabBarItemForegroundSelectedFocused" ResourceKey="PrimaryBrush" />
  <StaticResource x:Key="M3MaterialTopTabBarItemBackground" ResourceKey="SystemControlTransparentBrush" />
  <StaticResource x:Key="M3MaterialTopTabBarItemBackgroundPointerOver" ResourceKey="PrimaryHoverBrush" />
  <StaticResource x:Key="M3MaterialTopTabBarItemBackgroundPressed" ResourceKey="PrimaryPressedBrush" />
  <StaticResource x:Key="M3MaterialTopTabBarItemBackgroundFocused" ResourceKey="M3MaterialTopTabBarItemPrimaryFocusedBrush" />
  <StaticResource x:Key="M3MaterialTopTabBarItemForeground" ResourceKey="OnSurfaceMediumBrush" />
  <StaticResource x:Key="M3MaterialTopTabBarItemForegroundPointerOver" ResourceKey="OnSurfaceMediumBrush" />
  <StaticResource x:Key="M3MaterialTopTabBarItemForegroundPressed" ResourceKey="OnSurfaceMediumBrush" />
  <StaticResource x:Key="M3MaterialTopTabBarItemForegroundDisabled" ResourceKey="SystemControlDisabledBaseMediumLowBrush" />
  <SolidColorBrush x:Key="M3MaterialTopTabBarItemPrimaryFocusedBrush" Opacity="0.3" Color="{ThemeResource PrimaryColor}" />
  <StaticResource x:Key="M3MaterialTopTabBarItemBorderBrush" ResourceKey="SystemControlTransparentBrush" />
  <x:Double x:Key="M3MaterialTopTabBarFontSize">14</x:Double>
  <x:Double x:Key="M3MaterialTopTabBarHeight">48</x:Double>
  <x:Double x:Key="M3MaterialTopTabBarItemIconHeight">20</x:Double>
  <x:Double x:Key="M3MaterialTopTabBarItemIconWidth">20</x:Double>
  <Thickness x:Key="M3MaterialTopTabBarItemContentMargin">0,0,0,0</Thickness>
  <Thickness x:Key="M3MaterialTopTabBarItemContentOnlyMargin">12,0</Thickness>
  <mobile:Style x:Key="M3MaterialTopTabBarStyle" TargetType="utu:TabBar">
    <Setter Property="Background" Value="{StaticResource M3MaterialTopTabBarBackground}" />
    <Setter Property="IsTabStop" Value="False" />
    <Setter Property="toolkit:VisibleBoundsPadding.PaddingMask" Value="Top" />
    <Setter Property="Height" Value="{StaticResource M3MaterialTopTabBarHeight}" />
    <Setter Property="ItemContainerStyle" Value="{StaticResource M3MaterialTopTabBarItemStyle}" />
    <Setter Property="ItemsPanel">
      <Setter.Value>
        <ItemsPanelTemplate>
          <utu:TabBarListPanel />
        </ItemsPanelTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="utu:TabBar">
          <Grid x:Name="TabBarGrid" Height="{TemplateBinding Height}" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
            <ItemsPresenter Padding="{TemplateBinding Padding}" />
            <utu:TabBarSelectionIndicatorPresenter x:Name="SelectionIndicatorPresenter" Height="2" VerticalAlignment="Bottom" AutomationProperties.AutomationId="SelectionIndicatorPresenter" IndicatorTransitionMode="Snap" Opacity="0" Owner="{Binding RelativeSource={RelativeSource TemplatedParent}}">
              <Border x:Name="SelectionIndicatorRect" Width="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.SelectionIndicatorWidth}" Height="2" Margin="0,0,0,2" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" AutomationProperties.AutomationId="SelectionIndicatorRect" Background="{ThemeResource M3MaterialTopTabBarIndicator}" />
            </utu:TabBarSelectionIndicatorPresenter>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </mobile:Style>
  <not_mobile:Style x:Key="M3MaterialTopTabBarStyle" TargetType="utu:TabBar">
    <Setter Property="Background" Value="{StaticResource M3MaterialTopTabBarBackground}" />
    <Setter Property="IsTabStop" Value="False" />
    <Setter Property="toolkit:VisibleBoundsPadding.PaddingMask" Value="Top" />
    <Setter Property="Height" Value="{StaticResource M3MaterialTopTabBarHeight}" />
    <Setter Property="ItemContainerStyle" Value="{StaticResource M3MaterialTopTabBarItemStyle}" />
    <Setter Property="ItemsPanel">
      <Setter.Value>
        <ItemsPanelTemplate>
          <utu:TabBarListPanel />
        </ItemsPanelTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="utu:TabBar">
          <Grid x:Name="TabBarGrid" Height="{TemplateBinding Height}" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
            <ItemsPresenter Padding="{TemplateBinding Padding}" />
            <utu:TabBarSelectionIndicatorPresenter x:Name="SelectionIndicatorPresenter" Height="2" VerticalAlignment="Bottom" AutomationProperties.AutomationId="SelectionIndicatorPresenter" IndicatorTransitionMode="Snap" Opacity="0" Owner="{Binding RelativeSource={RelativeSource TemplatedParent}}">
              <Border x:Name="SelectionIndicatorRect" Width="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.SelectionIndicatorWidth}" Height="2" Margin="0,0,0,2" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" AutomationProperties.AutomationId="SelectionIndicatorRect" Background="{ThemeResource M3MaterialTopTabBarIndicator}" />
            </utu:TabBarSelectionIndicatorPresenter>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </not_mobile:Style>
  <mobile:Style x:Key="M3MaterialTopTabBarItemStyle" TargetType="utu:TabBarItem">
    <Setter Property="Background" Value="{ThemeResource M3MaterialTopTabBarItemBackground}" />
    <Setter Property="Foreground" Value="{ThemeResource M3MaterialTopTabBarItemForeground}" />
    <Setter Property="BorderBrush" Value="{StaticResource M3MaterialTopTabBarItemBorderBrush}" />
    <Setter Property="FontFamily" Value="{StaticResource MaterialRegularFontFamily}" />
    <Setter Property="FontSize" Value="{StaticResource M3MaterialTopTabBarFontSize}" />
    <Setter Property="FontWeight" Value="Normal" />
    <Setter Property="UseSystemFocusVisuals" Value="True" />
    <Setter Property="HorizontalContentAlignment" Value="Center" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="utu:TabBarItem">
          <Grid x:Name="LayoutRoot" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Control.IsTemplateFocusTarget="True">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="PointerStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="Selected">
                  <VisualState.Setters>
                    <Setter Target="LayoutRoot.Background" Value="{ThemeResource M3MaterialTopTabBarItemBackgroundSelected}" />
                    <Setter Target="PointerRectangle.Fill" Value="{ThemeResource M3MaterialTopTabBarItemBackgroundSelected}" />
                    <Setter Target="Icon.Foreground" Value="{ThemeResource M3MaterialTopTabBarItemForegroundSelected}" />
                    <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource M3MaterialTopTabBarItemForegroundSelected}" />
                  </VisualState.Setters>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="DisabledStates">
                <VisualState x:Name="Enabled" />
                <VisualState x:Name="Disabled">
                  <VisualState.Setters>
                    <Setter Target="Icon.Foreground" Value="{ThemeResource M3MaterialTopTabBarItemForegroundDisabled}" />
                    <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource M3MaterialTopTabBarItemForegroundDisabled}" />
                  </VisualState.Setters>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="TabBarIconPositionStates">
                <VisualState x:Name="IconOnTop" />
                <VisualState x:Name="IconOnly">
                  <VisualState.Setters>
                    <Setter Target="PointerRectangle.Visibility" Value="Visible" />
                    <Setter Target="ContentPresenter.Visibility" Value="Collapsed" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="ContentOnly">
                  <VisualState.Setters>
                    <Setter Target="IconBox.Visibility" Value="Collapsed" />
                    <Setter Target="ContentPresenter.Margin" Value="{StaticResource M3MaterialTopTabBarItemContentOnlyMargin}" />
                    <Setter Target="IconRow.Width" Value="0" />
                    <Setter Target="ContentRow.Width" Value="*" />
                  </VisualState.Setters>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="FocusStates">
                <VisualState x:Name="Focused">
                  <VisualState.Setters>
                    <Setter Target="LayoutRoot.Background" Value="{ThemeResource M3MaterialTopTabBarItemBackgroundFocused}" />
                    <Setter Target="PointerRectangle.Fill" Value="{ThemeResource M3MaterialTopTabBarItemBackgroundFocused}" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="PointerFocused" />
                <VisualState x:Name="Unfocused" />
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <um:Ripple x:Name="RippleControl" Padding="{TemplateBinding Padding}" AutomationProperties.AccessibilityView="Raw" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding CornerRadius}" Feedback="{ThemeResource PrimaryBrush}" FeedbackOpacity="{StaticResource PressedOpacity}">
              <um:Ripple.Content>
                <Grid>
                  <Rectangle x:Name="PointerRectangle" Fill="Transparent" Visibility="Collapsed" />
                  <Grid x:Name="ContentGrid" ColumnSpacing="8">
                    <Grid.ColumnDefinitions>
                      <ColumnDefinition x:Name="IconRow" Width="*" />
                      <ColumnDefinition x:Name="ContentRow" Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <Viewbox x:Name="IconBox" Width="{StaticResource M3MaterialTopTabBarItemIconWidth}" Height="{StaticResource M3MaterialTopTabBarItemIconHeight}">
                      <ContentPresenter x:Name="Icon" Content="{TemplateBinding Icon}" Foreground="{TemplateBinding Foreground}" />
                    </Viewbox>
                    <ContentPresenter x:Name="ContentPresenter" Grid.Column="1" Margin="{StaticResource M3MaterialTopTabBarItemContentMargin}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" AutomationProperties.AccessibilityView="Raw" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}" ContentTransitions="{TemplateBinding ContentTransitions}" FontSize="{TemplateBinding FontSize}" Foreground="{TemplateBinding Foreground}" TextWrapping="NoWrap" />
                  </Grid>
                </Grid>
              </um:Ripple.Content>
            </um:Ripple>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </mobile:Style>
  <not_mobile:Style x:Key="M3MaterialTopTabBarItemStyle" TargetType="utu:TabBarItem">
    <Setter Property="Background" Value="{ThemeResource M3MaterialTopTabBarItemBackground}" />
    <Setter Property="Foreground" Value="{ThemeResource M3MaterialTopTabBarItemForeground}" />
    <Setter Property="BorderBrush" Value="{ThemeResource M3MaterialTopTabBarItemBorderBrush}" />
    <Setter Property="FontFamily" Value="{StaticResource MaterialRegularFontFamily}" />
    <Setter Property="FontSize" Value="{StaticResource M3MaterialTopTabBarFontSize}" />
    <Setter Property="FontWeight" Value="Normal" />
    <Setter Property="UseSystemFocusVisuals" Value="True" />
    <Setter Property="HorizontalContentAlignment" Value="Center" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="utu:TabBarItem">
          <Grid x:Name="LayoutRoot" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Control.IsTemplateFocusTarget="True">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="PointerOver">
                  <VisualState.Setters>
                    <Setter Target="LayoutRoot.Background" Value="{ThemeResource M3MaterialTopTabBarItemBackgroundPointerOver}" />
                    <Setter Target="PointerRectangle.Fill" Value="{ThemeResource M3MaterialTopTabBarItemBackgroundPointerOver}" />
                    <Setter Target="Icon.Foreground" Value="{ThemeResource M3MaterialTopTabBarItemForegroundPointerOver}" />
                    <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource M3MaterialTopTabBarItemForegroundPointerOver}" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="Pressed">
                  <VisualState.Setters>
                    <Setter Target="LayoutRoot.Background" Value="{ThemeResource M3MaterialTopTabBarItemBackgroundPressed}" />
                    <Setter Target="PointerRectangle.Fill" Value="{ThemeResource M3MaterialTopTabBarItemBackgroundPressed}" />
                    <Setter Target="Icon.Foreground" Value="{ThemeResource M3MaterialTopTabBarItemForegroundPressed}" />
                    <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource M3MaterialTopTabBarItemForegroundPressed}" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="Selected">
                  <VisualState.Setters>
                    <Setter Target="LayoutRoot.Background" Value="{ThemeResource M3MaterialTopTabBarItemBackgroundSelected}" />
                    <Setter Target="PointerRectangle.Fill" Value="{ThemeResource M3MaterialTopTabBarItemBackgroundSelected}" />
                    <Setter Target="Icon.Foreground" Value="{ThemeResource M3MaterialTopTabBarItemForegroundSelected}" />
                    <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource M3MaterialTopTabBarItemForegroundSelected}" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="PointerOverSelected">
                  <VisualState.Setters>
                    <Setter Target="LayoutRoot.Background" Value="{ThemeResource M3MaterialTopTabBarItemBackgroundSelectedPointerOver}" />
                    <Setter Target="PointerRectangle.Fill" Value="{ThemeResource M3MaterialTopTabBarItemBackgroundSelectedPointerOver}" />
                    <Setter Target="Icon.Foreground" Value="{ThemeResource M3MaterialTopTabBarItemForegroundSelectedPointerOver}" />
                    <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource M3MaterialTopTabBarItemForegroundSelectedPointerOver}" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="PressedSelected">
                  <VisualState.Setters>
                    <Setter Target="LayoutRoot.Background" Value="{ThemeResource M3MaterialTopTabBarItemBackgroundSelectedPressed}" />
                    <Setter Target="PointerRectangle.Fill" Value="{ThemeResource M3MaterialTopTabBarItemBackgroundSelectedPressed}" />
                    <Setter Target="Icon.Foreground" Value="{ThemeResource M3MaterialTopTabBarItemForegroundSelectedPressed}" />
                    <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource M3MaterialTopTabBarItemForegroundSelectedPressed}" />
                  </VisualState.Setters>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="FocusStates">
                <VisualState x:Name="Focused">
                  <VisualState.Setters>
                    <Setter Target="LayoutRoot.Background" Value="{ThemeResource M3MaterialTopTabBarItemBackgroundFocused}" />
                    <Setter Target="PointerRectangle.Fill" Value="{ThemeResource M3MaterialTopTabBarItemBackgroundFocused}" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="PointerFocused" />
                <VisualState x:Name="Unfocused" />
              </VisualStateGroup>
              <VisualStateGroup x:Name="DisabledStates">
                <VisualState x:Name="Enabled" />
                <VisualState x:Name="Disabled">
                  <VisualState.Setters>
                    <Setter Target="Icon.Foreground" Value="{ThemeResource M3MaterialTopTabBarItemForegroundDisabled}" />
                    <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource M3MaterialTopTabBarItemForegroundDisabled}" />
                  </VisualState.Setters>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="TabBarIconPositionStates">
                <VisualState x:Name="IconOnTop" />
                <VisualState x:Name="IconOnly">
                  <VisualState.Setters>
                    <Setter Target="PointerRectangle.Visibility" Value="Visible" />
                    <Setter Target="ContentPresenter.Visibility" Value="Collapsed" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="ContentOnly">
                  <VisualState.Setters>
                    <Setter Target="IconBox.Visibility" Value="Collapsed" />
                    <Setter Target="ContentPresenter.Margin" Value="{StaticResource M3MaterialTopTabBarItemContentOnlyMargin}" />
                    <Setter Target="IconRow.Width" Value="0" />
                    <Setter Target="ContentRow.Width" Value="*" />
                  </VisualState.Setters>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <um:Ripple x:Name="RippleControl" Padding="{TemplateBinding Padding}" AutomationProperties.AccessibilityView="Raw" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding CornerRadius}" Feedback="{ThemeResource PrimaryBrush}" FeedbackOpacity="{StaticResource PressedOpacity}">
              <um:Ripple.Content>
                <Grid>
                  <Rectangle x:Name="PointerRectangle" Fill="Transparent" Visibility="Collapsed" />
                  <Grid x:Name="ContentGrid" ColumnSpacing="8">
                    <Grid.ColumnDefinitions>
                      <ColumnDefinition x:Name="IconRow" Width="*" />
                      <ColumnDefinition x:Name="ContentRow" Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <Viewbox x:Name="IconBox" Width="{StaticResource M3MaterialTopTabBarItemIconWidth}" Height="{StaticResource M3MaterialTopTabBarItemIconHeight}">
                      <ContentPresenter x:Name="Icon" Content="{TemplateBinding Icon}" Foreground="{TemplateBinding Foreground}" />
                    </Viewbox>
                    <ContentPresenter x:Name="ContentPresenter" Grid.Column="1" Margin="{StaticResource M3MaterialTopTabBarItemContentMargin}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" AutomationProperties.AccessibilityView="Raw" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}" ContentTransitions="{TemplateBinding ContentTransitions}" FontSize="{TemplateBinding FontSize}" Foreground="{TemplateBinding Foreground}" TextWrapping="NoWrap" />
                  </Grid>
                </Grid>
              </um:Ripple.Content>
            </um:Ripple>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </not_mobile:Style>
  <StaticResource x:Key="M3MaterialColoredTopTabBarBackground" ResourceKey="PrimaryBrush" />
  <StaticResource x:Key="M3MaterialColoredTopTabBarIndicator" ResourceKey="OnPrimaryBrush" />
  <StaticResource x:Key="M3MaterialColoredTopTabBarItemBackgroundSelected" ResourceKey="SystemControlTransparentBrush" />
  <StaticResource x:Key="M3MaterialColoredTopTabBarItemBackgroundSelectedPointerOver" ResourceKey="OnPrimaryHoverBrush" />
  <StaticResource x:Key="M3MaterialColoredTopTabBarItemBackgroundSelectedPressed" ResourceKey="OnPrimaryPressedBrush" />
  <StaticResource x:Key="M3MaterialColoredTopTabBarItemBackgroundSelectedFocused" ResourceKey="M3MaterialColoredTopTabBarItemOnPrimaryFocusedBrush" />
  <StaticResource x:Key="M3MaterialColoredTopTabBarItemForegroundSelected" ResourceKey="OnPrimaryBrush" />
  <StaticResource x:Key="M3MaterialColoredTopTabBarItemForegroundSelectedPointerOver" ResourceKey="OnPrimaryBrush" />
  <StaticResource x:Key="M3MaterialColoredTopTabBarItemForegroundSelectedPressed" ResourceKey="OnPrimaryBrush" />
  <StaticResource x:Key="M3MaterialColoredTopTabBarItemForegroundSelectedFocused" ResourceKey="OnPrimaryBrush" />
  <StaticResource x:Key="M3MaterialColoredTopTabBarItemBackground" ResourceKey="SystemControlTransparentBrush" />
  <StaticResource x:Key="M3MaterialColoredTopTabBarItemBackgroundPointerOver" ResourceKey="OnPrimaryHoverBrush" />
  <StaticResource x:Key="M3MaterialColoredTopTabBarItemBackgroundPressed" ResourceKey="OnPrimaryPressedBrush" />
  <StaticResource x:Key="M3MaterialColoredTopTabBarItemBackgroundFocused" ResourceKey="M3MaterialColoredTopTabBarItemOnPrimaryFocusedBrush" />
  <StaticResource x:Key="M3MaterialColoredTopTabBarItemForeground" ResourceKey="M3MaterialColoredTopTabBarItemOnPrimaryBrush" />
  <StaticResource x:Key="M3MaterialColoredTopTabBarItemForegroundPointerOver" ResourceKey="M3MaterialColoredTopTabBarItemOnPrimaryBrush" />
  <StaticResource x:Key="M3MaterialColoredTopTabBarItemForegroundPressed" ResourceKey="M3MaterialColoredTopTabBarItemOnPrimaryBrush" />
  <StaticResource x:Key="M3MaterialColoredTopTabBarItemForegroundDisabled" ResourceKey="SystemControlDisabledBaseMediumLowBrush" />
  <SolidColorBrush x:Key="M3MaterialColoredTopTabBarItemOnPrimaryFocusedBrush" Opacity="0.30" Color="{ThemeResource OnPrimaryColor}" />
  <SolidColorBrush x:Key="M3MaterialColoredTopTabBarItemOnPrimaryBrush" Opacity="0.60" Color="{ThemeResource OnPrimaryColor}" />
  <StaticResource x:Key="M3MaterialColoredTopTabBarItemBorderBrush" ResourceKey="SystemControlTransparentBrush" />
  <x:Double x:Key="M3MaterialColoredTopTabBarFontSize">14</x:Double>
  <x:Double x:Key="M3MaterialColoredTopTabBarHeight">48</x:Double>
  <x:Double x:Key="M3MaterialColoredTopTabBarItemIconHeight">20</x:Double>
  <x:Double x:Key="M3MaterialColoredTopTabBarItemIconWidth">20</x:Double>
  <Thickness x:Key="M3MaterialColoredTopTabBarItemContentMargin">0,0,0,0</Thickness>
  <Thickness x:Key="M3MaterialColoredTopTabBarItemContentOnlyMargin">12,0</Thickness>
  <mobile:Style x:Key="M3MaterialColoredTopTabBarStyle" TargetType="utu:TabBar">
    <Setter Property="Background" Value="{StaticResource M3MaterialColoredTopTabBarBackground}" />
    <Setter Property="IsTabStop" Value="False" />
    <Setter Property="toolkit:VisibleBoundsPadding.PaddingMask" Value="Top" />
    <Setter Property="Height" Value="{StaticResource M3MaterialColoredTopTabBarHeight}" />
    <Setter Property="ItemContainerStyle" Value="{StaticResource M3MaterialColoredTopTabBarItemStyle}" />
    <Setter Property="ItemsPanel">
      <Setter.Value>
        <ItemsPanelTemplate>
          <utu:TabBarListPanel />
        </ItemsPanelTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="utu:TabBar">
          <Grid x:Name="TabBarGrid" Height="{TemplateBinding Height}" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
            <ItemsPresenter Padding="{TemplateBinding Padding}" />
            <utu:TabBarSelectionIndicatorPresenter x:Name="SelectionIndicatorPresenter" Height="2" VerticalAlignment="Bottom" AutomationProperties.AutomationId="SelectionIndicatorPresenter" IndicatorTransitionMode="Snap" Opacity="0" Owner="{Binding RelativeSource={RelativeSource TemplatedParent}}">
              <Border x:Name="SelectionIndicatorRect" Width="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.SelectionIndicatorWidth}" Height="2" Margin="0,0,0,2" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" AutomationProperties.AutomationId="SelectionIndicatorRect" Background="{ThemeResource M3MaterialColoredTopTabBarIndicator}" />
            </utu:TabBarSelectionIndicatorPresenter>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </mobile:Style>
  <not_mobile:Style x:Key="M3MaterialColoredTopTabBarStyle" TargetType="utu:TabBar">
    <Setter Property="Background" Value="{StaticResource M3MaterialColoredTopTabBarBackground}" />
    <Setter Property="IsTabStop" Value="False" />
    <Setter Property="toolkit:VisibleBoundsPadding.PaddingMask" Value="Top" />
    <Setter Property="Height" Value="{StaticResource M3MaterialColoredTopTabBarHeight}" />
    <Setter Property="ItemContainerStyle" Value="{StaticResource M3MaterialColoredTopTabBarItemStyle}" />
    <Setter Property="ItemsPanel">
      <Setter.Value>
        <ItemsPanelTemplate>
          <utu:TabBarListPanel />
        </ItemsPanelTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="utu:TabBar">
          <Grid x:Name="TabBarGrid" Height="{TemplateBinding Height}" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
            <ItemsPresenter Padding="{TemplateBinding Padding}" />
            <utu:TabBarSelectionIndicatorPresenter x:Name="SelectionIndicatorPresenter" Height="2" VerticalAlignment="Bottom" AutomationProperties.AutomationId="SelectionIndicatorPresenter" IndicatorTransitionMode="Snap" Opacity="0" Owner="{Binding RelativeSource={RelativeSource TemplatedParent}}">
              <Border x:Name="SelectionIndicatorRect" Width="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.SelectionIndicatorWidth}" Height="2" Margin="0,0,0,2" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" AutomationProperties.AutomationId="SelectionIndicatorRect" Background="{ThemeResource M3MaterialColoredTopTabBarIndicator}" />
            </utu:TabBarSelectionIndicatorPresenter>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </not_mobile:Style>
  <mobile:Style x:Key="M3MaterialColoredTopTabBarItemStyle" TargetType="utu:TabBarItem">
    <Setter Property="Background" Value="{ThemeResource M3MaterialColoredTopTabBarItemBackground}" />
    <Setter Property="Foreground" Value="{ThemeResource M3MaterialColoredTopTabBarItemForeground}" />
    <Setter Property="BorderBrush" Value="{StaticResource M3MaterialColoredTopTabBarItemBorderBrush}" />
    <Setter Property="FontFamily" Value="{StaticResource MaterialRegularFontFamily}" />
    <Setter Property="FontSize" Value="{StaticResource M3MaterialColoredTopTabBarFontSize}" />
    <Setter Property="FontWeight" Value="Normal" />
    <Setter Property="UseSystemFocusVisuals" Value="True" />
    <Setter Property="HorizontalContentAlignment" Value="Center" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="utu:TabBarItem">
          <Grid x:Name="LayoutRoot" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Control.IsTemplateFocusTarget="True">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="PointerStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="Selected">
                  <VisualState.Setters>
                    <Setter Target="LayoutRoot.Background" Value="{ThemeResource M3MaterialColoredTopTabBarItemBackgroundSelected}" />
                    <Setter Target="PointerRectangle.Fill" Value="{ThemeResource M3MaterialColoredTopTabBarItemBackgroundSelected}" />
                    <Setter Target="Icon.Foreground" Value="{ThemeResource M3MaterialColoredTopTabBarItemForegroundSelected}" />
                    <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource M3MaterialColoredTopTabBarItemForegroundSelected}" />
                  </VisualState.Setters>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="DisabledStates">
                <VisualState x:Name="Enabled" />
                <VisualState x:Name="Disabled">
                  <VisualState.Setters>
                    <Setter Target="Icon.Foreground" Value="{ThemeResource M3MaterialColoredTopTabBarItemForegroundDisabled}" />
                    <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource M3MaterialColoredTopTabBarItemForegroundDisabled}" />
                  </VisualState.Setters>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="TabBarIconPositionStates">
                <VisualState x:Name="IconOnTop" />
                <VisualState x:Name="IconOnly">
                  <VisualState.Setters>
                    <Setter Target="PointerRectangle.Visibility" Value="Visible" />
                    <Setter Target="ContentPresenter.Visibility" Value="Collapsed" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="ContentOnly">
                  <VisualState.Setters>
                    <Setter Target="IconBox.Visibility" Value="Collapsed" />
                    <Setter Target="ContentPresenter.Margin" Value="{StaticResource M3MaterialColoredTopTabBarItemContentOnlyMargin}" />
                    <Setter Target="IconRow.Width" Value="0" />
                    <Setter Target="ContentRow.Width" Value="*" />
                  </VisualState.Setters>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="FocusStates">
                <VisualState x:Name="Focused">
                  <VisualState.Setters>
                    <Setter Target="LayoutRoot.Background" Value="{ThemeResource M3MaterialColoredTopTabBarItemBackgroundFocused}" />
                    <Setter Target="PointerRectangle.Fill" Value="{ThemeResource M3MaterialColoredTopTabBarItemBackgroundFocused}" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="PointerFocused" />
                <VisualState x:Name="Unfocused" />
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <um:Ripple x:Name="RippleControl" Padding="{TemplateBinding Padding}" AutomationProperties.AccessibilityView="Raw" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding CornerRadius}" Feedback="{ThemeResource OnPrimaryBrush}" FeedbackOpacity="{StaticResource PressedOpacity}">
              <um:Ripple.Content>
                <Grid>
                  <Rectangle x:Name="PointerRectangle" Fill="Transparent" Visibility="Collapsed" />
                  <Grid x:Name="ContentGrid" ColumnSpacing="8">
                    <Grid.ColumnDefinitions>
                      <ColumnDefinition x:Name="IconRow" Width="*" />
                      <ColumnDefinition x:Name="ContentRow" Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <Viewbox x:Name="IconBox" Width="{StaticResource M3MaterialColoredTopTabBarItemIconWidth}" Height="{StaticResource M3MaterialColoredTopTabBarItemIconHeight}">
                      <ContentPresenter x:Name="Icon" Content="{TemplateBinding Icon}" Foreground="{TemplateBinding Foreground}" />
                    </Viewbox>
                    <ContentPresenter x:Name="ContentPresenter" Grid.Column="1" Margin="{StaticResource M3MaterialColoredTopTabBarItemContentMargin}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" AutomationProperties.AccessibilityView="Raw" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}" ContentTransitions="{TemplateBinding ContentTransitions}" FontSize="{TemplateBinding FontSize}" Foreground="{TemplateBinding Foreground}" TextWrapping="NoWrap" />
                  </Grid>
                </Grid>
              </um:Ripple.Content>
            </um:Ripple>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </mobile:Style>
  <not_mobile:Style x:Key="M3MaterialColoredTopTabBarItemStyle" TargetType="utu:TabBarItem">
    <Setter Property="Background" Value="{ThemeResource M3MaterialColoredTopTabBarItemBackground}" />
    <Setter Property="Foreground" Value="{ThemeResource M3MaterialColoredTopTabBarItemForeground}" />
    <Setter Property="BorderBrush" Value="{ThemeResource M3MaterialColoredTopTabBarItemBorderBrush}" />
    <Setter Property="FontFamily" Value="{StaticResource MaterialRegularFontFamily}" />
    <Setter Property="FontSize" Value="{StaticResource M3MaterialColoredTopTabBarFontSize}" />
    <Setter Property="FontWeight" Value="Normal" />
    <Setter Property="UseSystemFocusVisuals" Value="True" />
    <Setter Property="HorizontalContentAlignment" Value="Center" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="utu:TabBarItem">
          <Grid x:Name="LayoutRoot" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Control.IsTemplateFocusTarget="True">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="PointerOver">
                  <VisualState.Setters>
                    <Setter Target="LayoutRoot.Background" Value="{ThemeResource M3MaterialColoredTopTabBarItemBackgroundPointerOver}" />
                    <Setter Target="PointerRectangle.Fill" Value="{ThemeResource M3MaterialColoredTopTabBarItemBackgroundPointerOver}" />
                    <Setter Target="Icon.Foreground" Value="{ThemeResource M3MaterialColoredTopTabBarItemForegroundPointerOver}" />
                    <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource M3MaterialColoredTopTabBarItemForegroundPointerOver}" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="Pressed">
                  <VisualState.Setters>
                    <Setter Target="LayoutRoot.Background" Value="{ThemeResource M3MaterialColoredTopTabBarItemBackgroundPressed}" />
                    <Setter Target="PointerRectangle.Fill" Value="{ThemeResource M3MaterialColoredTopTabBarItemBackgroundPressed}" />
                    <Setter Target="Icon.Foreground" Value="{ThemeResource M3MaterialColoredTopTabBarItemForegroundPressed}" />
                    <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource M3MaterialColoredTopTabBarItemForegroundPressed}" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="Selected">
                  <VisualState.Setters>
                    <Setter Target="LayoutRoot.Background" Value="{ThemeResource M3MaterialColoredTopTabBarItemBackgroundSelected}" />
                    <Setter Target="PointerRectangle.Fill" Value="{ThemeResource M3MaterialColoredTopTabBarItemBackgroundSelected}" />
                    <Setter Target="Icon.Foreground" Value="{ThemeResource M3MaterialColoredTopTabBarItemForegroundSelected}" />
                    <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource M3MaterialColoredTopTabBarItemForegroundSelected}" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="PointerOverSelected">
                  <VisualState.Setters>
                    <Setter Target="LayoutRoot.Background" Value="{ThemeResource M3MaterialColoredTopTabBarItemBackgroundSelectedPointerOver}" />
                    <Setter Target="PointerRectangle.Fill" Value="{ThemeResource M3MaterialColoredTopTabBarItemBackgroundSelectedPointerOver}" />
                    <Setter Target="Icon.Foreground" Value="{ThemeResource M3MaterialColoredTopTabBarItemForegroundSelectedPointerOver}" />
                    <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource M3MaterialColoredTopTabBarItemForegroundSelectedPointerOver}" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="PressedSelected">
                  <VisualState.Setters>
                    <Setter Target="LayoutRoot.Background" Value="{ThemeResource M3MaterialColoredTopTabBarItemBackgroundSelectedPressed}" />
                    <Setter Target="PointerRectangle.Fill" Value="{ThemeResource M3MaterialColoredTopTabBarItemBackgroundSelectedPressed}" />
                    <Setter Target="Icon.Foreground" Value="{ThemeResource M3MaterialColoredTopTabBarItemForegroundSelectedPressed}" />
                    <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource M3MaterialColoredTopTabBarItemForegroundSelectedPressed}" />
                  </VisualState.Setters>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="FocusStates">
                <VisualState x:Name="Focused">
                  <VisualState.Setters>
                    <Setter Target="LayoutRoot.Background" Value="{ThemeResource M3MaterialColoredTopTabBarItemBackgroundFocused}" />
                    <Setter Target="PointerRectangle.Fill" Value="{ThemeResource M3MaterialColoredTopTabBarItemBackgroundFocused}" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="PointerFocused" />
                <VisualState x:Name="Unfocused" />
              </VisualStateGroup>
              <VisualStateGroup x:Name="DisabledStates">
                <VisualState x:Name="Enabled" />
                <VisualState x:Name="Disabled">
                  <VisualState.Setters>
                    <Setter Target="Icon.Foreground" Value="{ThemeResource M3MaterialColoredTopTabBarItemForegroundDisabled}" />
                    <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource M3MaterialColoredTopTabBarItemForegroundDisabled}" />
                  </VisualState.Setters>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="TabBarIconPositionStates">
                <VisualState x:Name="IconOnTop" />
                <VisualState x:Name="IconOnly">
                  <VisualState.Setters>
                    <Setter Target="PointerRectangle.Visibility" Value="Visible" />
                    <Setter Target="ContentPresenter.Visibility" Value="Collapsed" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="ContentOnly">
                  <VisualState.Setters>
                    <Setter Target="IconBox.Visibility" Value="Collapsed" />
                    <Setter Target="ContentPresenter.Margin" Value="{StaticResource M3MaterialColoredTopTabBarItemContentOnlyMargin}" />
                    <Setter Target="IconRow.Width" Value="0" />
                    <Setter Target="ContentRow.Width" Value="*" />
                  </VisualState.Setters>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <um:Ripple x:Name="RippleControl" Padding="{TemplateBinding Padding}" AutomationProperties.AccessibilityView="Raw" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding CornerRadius}" Feedback="{ThemeResource OnPrimaryBrush}" FeedbackOpacity="{StaticResource PressedOpacity}">
              <um:Ripple.Content>
                <Grid>
                  <Rectangle x:Name="PointerRectangle" Fill="Transparent" Visibility="Collapsed" />
                  <Grid x:Name="ContentGrid" ColumnSpacing="8">
                    <Grid.ColumnDefinitions>
                      <ColumnDefinition x:Name="IconRow" Width="*" />
                      <ColumnDefinition x:Name="ContentRow" Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <Viewbox x:Name="IconBox" Width="{StaticResource M3MaterialColoredTopTabBarItemIconWidth}" Height="{StaticResource M3MaterialColoredTopTabBarItemIconHeight}">
                      <ContentPresenter x:Name="Icon" Content="{TemplateBinding Icon}" Foreground="{TemplateBinding Foreground}" />
                    </Viewbox>
                    <ContentPresenter x:Name="ContentPresenter" Grid.Column="1" Margin="{StaticResource M3MaterialColoredTopTabBarItemContentMargin}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" AutomationProperties.AccessibilityView="Raw" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}" ContentTransitions="{TemplateBinding ContentTransitions}" FontSize="{TemplateBinding FontSize}" Foreground="{TemplateBinding Foreground}" TextWrapping="NoWrap" />
                  </Grid>
                </Grid>
              </um:Ripple.Content>
            </um:Ripple>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </not_mobile:Style>
  <!--origin: Styles\Controls\v2\_Common.xaml-->
</ResourceDictionary>