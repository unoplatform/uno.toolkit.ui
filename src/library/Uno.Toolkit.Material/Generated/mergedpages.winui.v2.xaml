<ResourceDictionary xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:utu="using:Uno.Toolkit.UI" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" mc:Ignorable="android ios not_win mobile d" xmlns:android="http://uno.ui/android" xmlns:ios="http://uno.ui/ios" xmlns:mobile="http://uno.ui/mobile" xmlns:not_mobile="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:toolkit="using:Uno.UI.Toolkit" xmlns:not_win="http://uno.ui/not_win" xmlns:um="using:Uno.Material" xmlns:contract4Present="http://schemas.microsoft.com/winfx/2006/xaml/presentation?IsApiContractPresent(Windows.Foundation.UniversalApiContract,4)" xmlns:contract6Present="http://schemas.microsoft.com/winfx/2006/xaml/presentation?IsApiContractPresent(Windows.Foundation.UniversalApiContract,6)" xmlns:contract7Present="http://schemas.microsoft.com/winfx/2006/xaml/presentation?IsApiContractPresent(Windows.Foundation.UniversalApiContract,7)" xmlns:contract7NotPresent="http://schemas.microsoft.com/winfx/2006/xaml/presentation?IsApiContractNotPresent(Windows.Foundation.UniversalApiContract,7)" xmlns:contract8Present="http://schemas.microsoft.com/winfx/2006/xaml/presentation?IsApiContractPresent(Windows.Foundation.UniversalApiContract,8)" xmlns:contract12Present="http://schemas.microsoft.com/winfx/2006/xaml/presentation?IsApiContractPresent(Windows.Foundation.UniversalApiContract,12)" xmlns:contract12NotPresent="http://schemas.microsoft.com/winfx/2006/xaml/presentation?IsApiContractNotPresent(Windows.Foundation.UniversalApiContract,12)" xmlns:contract6NotPresent="http://schemas.microsoft.com/winfx/2006/xaml/presentation?IsApiContractNotPresent(Windows.Foundation.UniversalApiContract,6)" xmlns:contract5NotPresent="http://schemas.microsoft.com/winfx/2006/xaml/presentation?IsApiContractNotPresent(Windows.Foundation.UniversalApiContract,5)" xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
  <ResourceDictionary.MergedDictionaries>
    <um:MaterialFonts />
    <um:MaterialColorsV2 />
    <um:MaterialResourcesV2 />
  </ResourceDictionary.MergedDictionaries>
  <!--origin: Styles\Controls\v2\Divider.xaml-->
  <x:Double x:Key="M3MaterialDividerHeight">1</x:Double>
  <Style x:Key="M3MaterialDividerStyle" TargetType="utu:Divider">
    <Setter Property="Foreground" Value="{StaticResource OnSurfaceFocusedBrush}" />
    <Setter Property="SubHeaderForeground" Value="{StaticResource OnSurfaceLowBrush}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="utu:Divider">
          <Grid>
            <Grid.RowDefinitions>
              <RowDefinition Height="Auto" />
              <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <Rectangle Fill="{TemplateBinding Foreground}" Height="{StaticResource M3MaterialDividerHeight}" />
            <TextBlock Text="{TemplateBinding SubHeader}" Visibility="{Binding SubHeader, RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource MaterialEmptyToCollapsed}, FallbackValue=Collapsed}" Style="{StaticResource M3MaterialBodySmall}" Foreground="{TemplateBinding SubHeaderForeground}" Margin="0,4,0,0" Grid.Row="1" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <!--origin: Styles\Controls\v2\NavigationBar.xaml-->
  <mobile:Style x:Key="M3MaterialMainCommandStyle" BasedOn="{StaticResource BaseM3MaterialMainCommandStyle}" TargetType="AppBarButton" />
  <mobile:Style x:Key="M3MaterialModalMainCommandStyle" BasedOn="{StaticResource BaseM3MaterialModalMainCommandStyle}" TargetType="AppBarButton" />
  <mobile:Style x:Key="M3MaterialNavigationBarStyle" BasedOn="{StaticResource BaseM3MaterialNavigationBarStyle}" TargetType="utu:NavigationBar">
    <ios:Setter Property="Height" Value="NaN" />
    <Setter Property="MainCommandStyle" Value="{StaticResource M3MaterialMainCommandStyle}" />
    <Setter Property="toolkit:VisibleBoundsPadding.PaddingMask" Value="Top" />
    <Setter Property="Template" Value="{StaticResource M3MaterialNativeNavigationBarTemplate}" />
  </mobile:Style>
  <mobile:Style x:Key="M3MaterialModalNavigationBarStyle" BasedOn="{StaticResource BaseM3MaterialModalNavigationBarStyle}" TargetType="utu:NavigationBar">
    <ios:Setter Property="Height" Value="NaN" />
    <Setter Property="toolkit:VisibleBoundsPadding.PaddingMask" Value="Top" />
    <Setter Property="MainCommandStyle" Value="{StaticResource M3MaterialModalMainCommandStyle}" />
    <Setter Property="Template" Value="{StaticResource M3MaterialNativeNavigationBarTemplate}" />
  </mobile:Style>
  <not_mobile:Style x:Key="M3MaterialMainCommandStyle" TargetType="AppBarButton" BasedOn="{StaticResource BaseM3MaterialMainCommandStyle}">
    <Setter Property="Icon">
      <Setter.Value>
        <SymbolIcon Symbol="Back" />
      </Setter.Value>
    </Setter>
  </not_mobile:Style>
  <not_mobile:Style x:Key="M3MaterialNavigationBarStyle" TargetType="utu:NavigationBar" BasedOn="{StaticResource BaseM3MaterialNavigationBarStyle}">
    <Setter Property="MainCommandStyle" Value="{StaticResource M3MaterialMainCommandStyle}" />
  </not_mobile:Style>
  <not_mobile:Style x:Key="M3MaterialModalMainCommandStyle" TargetType="AppBarButton" BasedOn="{StaticResource BaseM3MaterialModalMainCommandStyle}">
    <Setter Property="Icon">
      <Setter.Value>
        <SymbolIcon Symbol="Back" />
      </Setter.Value>
    </Setter>
  </not_mobile:Style>
  <not_mobile:Style x:Key="M3MaterialModalNavigationBarStyle" TargetType="utu:NavigationBar" BasedOn="{StaticResource BaseM3MaterialModalNavigationBarStyle}">
    <Setter Property="MainCommandStyle" Value="{StaticResource M3MaterialModalMainCommandStyle}" />
  </not_mobile:Style>
  <x:Double x:Key="M3MaterialNavigationBarElevation">4</x:Double>
  <x:Double x:Key="M3MaterialNavigationBarHeight">48</x:Double>
  <Thickness x:Key="M3MaterialNavigationBarContentMargin">16,0,0,0</Thickness>
  <Thickness x:Key="M3MaterialAppBarEllipsisButtonInnerBorderMargin">2,6,6,6</Thickness>
  <ios:ControlTemplate x:Key="M3MaterialNativeNavigationBarTemplate" TargetType="utu:NavigationBar">
    <Border BorderThickness="{TemplateBinding Padding}">
      <utu:NativeNavigationBarPresenter Height="44" x:Name="NavigationBarPresenter" />
    </Border>
  </ios:ControlTemplate>
  <android:ControlTemplate x:Key="M3MaterialNativeNavigationBarTemplate" TargetType="utu:NavigationBar">
    <utu:NativeNavigationBarPresenter x:Name="NavigationBarPresenter" />
  </android:ControlTemplate>
  <ControlTemplate x:Key="XamlM3MaterialNavigationBarTemplate" TargetType="utu:NavigationBar">
    <utu:NavigationBarPresenter Style="{StaticResource M3MaterialNavigationBarPresenter}" x:Name="NavigationBarPresenter" />
  </ControlTemplate>
  <Style x:Key="M3MaterialNavigationBarPresenter" TargetType="utu:NavigationBarPresenter">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="utu:NavigationBarPresenter">
          <CommandBar x:Name="XamlNavigationBarCommandBar" Style="{StaticResource M3MaterialNavigationBarCommandBar}" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="M3MaterialNavigationBarCommandBar" TargetType="CommandBar">
    <Setter Property="Background" Value="{StaticResource SurfaceBrush}" />
    <Setter Property="Foreground" Value="{StaticResource OnSurfaceBrush}" />
    <Setter Property="Padding" Value="4,0,0,0" />
    <Setter Property="IsTabStop" Value="False" />
    <Setter Property="VerticalAlignment" Value="Top" />
    <Setter Property="HorizontalAlignment" Value="Stretch" />
    <Setter Property="HorizontalContentAlignment" Value="Center" />
    <Setter Property="VerticalContentAlignment" Value="Top" />
    <Setter Property="ClosedDisplayMode" Value="Compact" />
    <Setter Property="ExitDisplayModeOnAccessKeyInvoked" Value="False" />
    <Setter Property="CommandBarOverflowPresenterStyle" Value="{ThemeResource DefaultCommandBarOverflowPresenterStyle}" />
    <Setter Property="CornerRadius" Value="{ThemeResource ControlCornerRadius}" />
    <Setter Property="utu:CommandBarExtensions.MainCommand" Value="{x:Null}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="CommandBar">
          <Grid x:Name="LayoutRoot">
            <Grid.Resources>
              <Visibility x:Key="AppBarButtonHasFlyoutChevronVisibility">Collapsed</Visibility>
              <Storyboard x:Key="OverlayOpeningAnimation">
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity">
                  <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="0" />
                  <SplineDoubleKeyFrame KeyTime="{StaticResource ControlNormalAnimationDuration}" KeySpline="{StaticResource ControlFastOutSlowInKeySpline}" Value="1" />
                </DoubleAnimationUsingKeyFrames>
              </Storyboard>
              <Storyboard x:Key="OverlayClosingAnimation">
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity">
                  <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="1" />
                  <SplineDoubleKeyFrame KeyTime="{StaticResource ControlFastAnimationDuration}" KeySpline="{StaticResource ControlFastOutSlowInKeySpline}" Value="0" />
                </DoubleAnimationUsingKeyFrames>
              </Storyboard>
              <x:Double x:Key="M3MaterialAppBarButtonContentHeight">24</x:Double>
              <x:Double x:Key="AppBarThemeCompactHeight">56</x:Double>
              <Style TargetType="SplitButton" BasedOn="{StaticResource SplitButtonCommandBarStyle}" />
              <Style TargetType="ToggleSplitButton" BasedOn="{StaticResource SplitButtonCommandBarStyle}" />
              <Style TargetType="AppBarButton" BasedOn="{StaticResource M3MaterialAppBarButton}">
                <Setter Property="Padding" Value="12,16,12,16" />
              </Style>
            </Grid.Resources>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="Disabled">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="EllipsisIcon" Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource CommandBarEllipsisIconForegroundDisabled}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="DisplayModeStates">
                <contract8Present:VisualStateGroup.Transitions>
                  <!-- UNO WORKAROUND: Use literal value of ControlNormalAnimationDuration. Resolving a StaticResource string to a string non-DP causes an exception -->
                  <VisualTransition From="CompactClosed" To="CompactOpenDown" GeneratedDuration="00:00:00.250">
                    <Storyboard>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="OpenBorder" Storyboard.TargetProperty="Visibility">
                        <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Visible" />
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="MoreButton" Storyboard.TargetProperty="VerticalAlignment">
                        <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Stretch" />
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HighContrastBorder" Storyboard.TargetProperty="Visibility">
                        <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Visible" />
                      </ObjectAnimationUsingKeyFrames>
                      <DoubleAnimationUsingKeyFrames Storyboard.TargetName="OverflowContentRoot" Storyboard.TargetProperty="Opacity">
                        <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="1" />
                      </DoubleAnimationUsingKeyFrames>
                      <DoubleAnimationUsingKeyFrames Storyboard.TargetName="OverflowContentRootTransform" Storyboard.TargetProperty="Y">
                        <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="{ThemeResource AppBarThemeCompactHeight}" />
                        <SplineDoubleKeyFrame KeyTime="{StaticResource ControlNormalAnimationDuration}" KeySpline="{StaticResource ControlFastOutSlowInKeySpline}" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=CommandBarTemplateSettings.ContentHeight}" />
                      </DoubleAnimationUsingKeyFrames>
                      <DoubleAnimationUsingKeyFrames Storyboard.TargetName="OverflowContentTransform" Storyboard.TargetProperty="Y">
                        <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=CommandBarTemplateSettings.NegativeOverflowContentHeight}" />
                        <SplineDoubleKeyFrame KeyTime="{StaticResource ControlNormalAnimationDuration}" KeySpline="{StaticResource ControlFastOutSlowInKeySpline}" Value="0" />
                      </DoubleAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualTransition>
                  <!-- UNO WORKAROUND: Use literal value of ControlFastAnimationDuration. Resolving a StaticResource string to a string non-DP causes an exception -->
                  <VisualTransition From="CompactOpenDown" To="CompactClosed" GeneratedDuration="00:00:00.167">
                    <Storyboard>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="MoreButton" Storyboard.TargetProperty="VerticalAlignment">
                        <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Stretch" />
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HighContrastBorder" Storyboard.TargetProperty="Visibility">
                        <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Visible" />
                      </ObjectAnimationUsingKeyFrames>
                      <DoubleAnimationUsingKeyFrames Storyboard.TargetName="OverflowContentRoot" Storyboard.TargetProperty="Opacity">
                        <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="1" />
                        <DiscreteDoubleKeyFrame KeyTime="{StaticResource ControlFastAnimationDuration}" Value="0" />
                      </DoubleAnimationUsingKeyFrames>
                      <DoubleAnimationUsingKeyFrames Storyboard.TargetName="OverflowContentRootTransform" Storyboard.TargetProperty="Y">
                        <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=CommandBarTemplateSettings.ContentHeight}" />
                        <SplineDoubleKeyFrame KeyTime="{StaticResource ControlFastAnimationDuration}" KeySpline="{StaticResource ControlFastOutSlowInKeySpline}" Value="{ThemeResource AppBarThemeCompactHeight}" />
                      </DoubleAnimationUsingKeyFrames>
                      <DoubleAnimationUsingKeyFrames Storyboard.TargetName="OverflowContentTransform" Storyboard.TargetProperty="Y">
                        <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="0" />
                        <SplineDoubleKeyFrame KeyTime="{StaticResource ControlFastAnimationDuration}" KeySpline="{StaticResource ControlFastOutSlowInKeySpline}" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=CommandBarTemplateSettings.NegativeOverflowContentHeight}" />
                      </DoubleAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualTransition>
                </contract8Present:VisualStateGroup.Transitions>
                <VisualState x:Name="CompactClosed" />
                <VisualState x:Name="CompactOpenUp">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="OpenBorder" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Visible" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="MoreButton" Storyboard.TargetProperty="VerticalAlignment">
                      <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Stretch" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HighContrastBorder" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Visible" />
                    </ObjectAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="OverflowContentRoot" Storyboard.TargetProperty="Opacity">
                      <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="1" />
                    </DoubleAnimationUsingKeyFrames>
                    <contract8Present:DoubleAnimationUsingKeyFrames Storyboard.TargetName="OverflowContentRootTransform" Storyboard.TargetProperty="Y">
                      <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=CommandBarTemplateSettings.OverflowContentCompactYTranslation}" />
                    </contract8Present:DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="OverflowContentRootMarginOffsetTransform" Storyboard.TargetProperty="Y">
                      <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=CommandBarTemplateSettings.ContentHeight}" />
                    </DoubleAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="CompactOpenDown">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="OpenBorder" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Visible" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="MoreButton" Storyboard.TargetProperty="VerticalAlignment">
                      <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Stretch" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HighContrastBorder" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Visible" />
                    </ObjectAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="OverflowContentRoot" Storyboard.TargetProperty="Opacity">
                      <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="1" />
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="OverflowContentRootTransform" Storyboard.TargetProperty="Y">
                      <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=CommandBarTemplateSettings.ContentHeight}" />
                    </DoubleAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="AvailableCommandsStates">
                <VisualState x:Name="BothCommands" />
                <VisualState x:Name="PrimaryCommandsOnly">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="OverflowContentRoot" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Collapsed" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="MoreButton" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Collapsed" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="SecondaryCommandsOnly">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PrimaryItemsControl" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Collapsed" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="DynamicOverflowStates">
                <VisualState x:Name="DynamicOverflowDisabled" />
                <VisualState x:Name="DynamicOverflowEnabled">
                  <VisualState.Setters>
                    <Setter Target="ContentControlColumnDefinition.Width" Value="Auto" />
                    <Setter Target="PrimaryItemsControlColumnDefinition.Width" Value="*" />
                  </VisualState.Setters>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid x:Name="ContentRoot" VerticalAlignment="Center" Height="{TemplateBinding Height}" MinHeight="{ThemeResource AppBarThemeCompactHeight}" Background="{TemplateBinding Background}" XYFocusKeyboardNavigation="Enabled">
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" MinWidth="6" />
              </Grid.ColumnDefinitions>
              <Grid.RenderTransform>
                <TranslateTransform x:Name="ContentTransform" />
              </Grid.RenderTransform>
              <Grid>
                <Grid.ColumnDefinitions>
                  <ColumnDefinition x:Name="MainCommandColumnDefinition" Width="Auto" />
                  <ColumnDefinition x:Name="ContentControlColumnDefinition" Width="*" />
                  <ColumnDefinition x:Name="PrimaryItemsControlColumnDefinition" Width="Auto" />
                </Grid.ColumnDefinitions>
                <ContentPresenter x:Name="MainCommandPresenter" Margin="{TemplateBinding Padding}" Content="{Binding Path=(utu:CommandBarExtensions.MainCommand), RelativeSource={RelativeSource TemplatedParent}}">
                  <ContentPresenter.Resources>
                    <x:Double x:Key="M3MaterialAppBarButtonContentHeight">16</x:Double>
                  </ContentPresenter.Resources>
                </ContentPresenter>
                <!--
									Use a ContentControl rather than a ContentPresenter so that IsEnabled can be set to false
									in the Minimal/HiddenClosed states to remove it from being a tab-stop candidate.
								-->
                <ContentControl x:Name="ContentControl" Grid.Column="1" Margin="{StaticResource M3MaterialNavigationBarContentMargin}" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" ContentTransitions="{TemplateBinding ContentTransitions}" Foreground="{TemplateBinding Foreground}" FontFamily="{StaticResource MaterialRegularFontFamily}" FontSize="20" FontWeight="Medium" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" IsTabStop="False" />
                <ItemsControl x:Name="PrimaryItemsControl" HorizontalAlignment="Center" MinHeight="{ThemeResource AppBarThemeCompactHeight}" IsTabStop="False" Grid.Column="2">
                  <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                      <StackPanel Orientation="Horizontal" />
                    </ItemsPanelTemplate>
                  </ItemsControl.ItemsPanel>
                </ItemsControl>
              </Grid>
              <Button x:Name="MoreButton" Foreground="{TemplateBinding Foreground}" Style="{StaticResource M3MaterialEllipsisButton}" Padding="{ThemeResource CommandBarMoreButtonMargin}" MinHeight="{ThemeResource AppBarThemeCompactHeight}" VerticalAlignment="Top" Grid.Column="2" Control.IsTemplateKeyTipTarget="True" IsAccessKeyScope="True">
                <FontIcon x:Name="EllipsisIcon" VerticalAlignment="Center" FontFamily="{ThemeResource SymbolThemeFontFamily}" FontSize="20" Glyph="&#xe712;" Height="20" RenderTransformOrigin="0.5, 0.5">
                  <FontIcon.RenderTransform>
                    <RotateTransform Angle="90" />
                  </FontIcon.RenderTransform>
                </FontIcon>
              </Button>
              <!-- UNO WORKAROUND: Added IsHitTestVisible="False". The Rectangle was blocking pointer events -->
              <Rectangle x:Name="HighContrastBorder" x:DeferLoadStrategy="Lazy" Grid.ColumnSpan="3" Visibility="Collapsed" IsHitTestVisible="False" VerticalAlignment="Stretch" StrokeThickness="1" />
              <Border x:Name="OpenBorder" Grid.ColumnSpan="3" Visibility="Collapsed" VerticalAlignment="Stretch" contract7Present:CornerRadius="{TemplateBinding CornerRadius}" contract7NotPresent:CornerRadius="{ThemeResource ControlCornerRadius}" />
            </Grid>
            <!-- UNO WORKAROUND: Added IsTabStop="False". Navigation focus with keyboard was erroneously focusing on the Popup instead of the SecondaryCommands -->
            <Popup x:Name="OverflowPopup">
              <Popup.RenderTransform>
                <TransformGroup>
                  <TranslateTransform x:Name="OverflowContentRootMarginOffsetTransform" />
                  <TranslateTransform x:Name="OverflowContentRootTransform" X="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=CommandBarTemplateSettings.OverflowContentHorizontalOffset}" />
                </TransformGroup>
              </Popup.RenderTransform>
              <Grid x:Name="OverflowContentRoot" Opacity="0" MinWidth="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=CommandBarTemplateSettings.OverflowContentMinWidth}" MaxWidth="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=CommandBarTemplateSettings.OverflowContentMaxWidth}" MaxHeight="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=CommandBarTemplateSettings.OverflowContentMaxHeight}">
                <Grid.RowDefinitions>
                  <RowDefinition />
                  <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <!-- For 21H1 and up, we'll need to wrap the clip and presenter in a Grid which will host the Drop Shadow. -->
                <Grid x:Name="SecondaryItemsControlShadowWrapper" contract7Present:CornerRadius="{ThemeResource OverlayCornerRadius}" contract7NotPresent:CornerRadius="{ThemeResource OverlayCornerRadius}">
                  <Grid.Clip>
                    <RectangleGeometry Rect="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=CommandBarTemplateSettings.OverflowContentClipRect}">
                      <RectangleGeometry.Transform>
                        <TransformGroup>
                          <TranslateTransform x:Name="OverflowContentRootClipTransform" />
                        </TransformGroup>
                      </RectangleGeometry.Transform>
                    </RectangleGeometry>
                  </Grid.Clip>
                  <CommandBarOverflowPresenter x:Name="SecondaryItemsControl" Style="{TemplateBinding CommandBarOverflowPresenterStyle}" IsTabStop="False">
                    <CommandBarOverflowPresenter.RenderTransform>
                      <TranslateTransform x:Name="OverflowContentTransform" />
                    </CommandBarOverflowPresenter.RenderTransform>
                    <CommandBarOverflowPresenter.Resources>
                      <Style TargetType="AppBarButton" BasedOn="{StaticResource M3MaterialAppBarButtonOverflowStyle}" />
                      <Style TargetType="AppBarToggleButton" BasedOn="{StaticResource AppBarToggleButtonOverflowStyle}" />
                    </CommandBarOverflowPresenter.Resources>
                  </CommandBarOverflowPresenter>
                </Grid>
                <!--
									In order to give us extra space in the windowed popup to translate things down,
									we add a rectangle to make the HWND taller than it otherwise would be.
								-->
                <Rectangle x:Name="WindowedPopupPadding" Grid.Row="1" Height="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=CommandBarTemplateSettings.ContentHeight}" />
              </Grid>
            </Popup>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="M3MaterialAppBarButtonOverflowStyle" TargetType="AppBarButton" BasedOn="{StaticResource AppBarButtonOverflowStyle}">
    <Setter Property="Background" Value="Transparent" />
    <Setter Property="Foreground" Value="{ThemeResource OnSurfaceBrush}" />
  </Style>
  <Style x:Key="M3MaterialEllipsisButton" TargetType="Button">
    <Setter Property="Background" Value="Transparent" />
    <Setter Property="Foreground" Value="{ThemeResource OnSurfaceBrush}" />
    <Setter Property="BorderBrush" Value="Transparent" />
    <Setter Property="BorderThickness" Value="0" />
    <Setter Property="Padding" Value="0" />
    <Setter Property="HorizontalAlignment" Value="Stretch" />
    <Setter Property="HorizontalContentAlignment" Value="Center" />
    <Setter Property="VerticalAlignment" Value="Stretch" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="FontFamily" Value="{StaticResource MaterialRegularFontFamily}" />
    <Setter Property="FontWeight" Value="SemiBold" />
    <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}" />
    <Setter Property="Width" Value="{ThemeResource AppBarExpandButtonThemeWidth}" />
    <Setter Property="UseSystemFocusVisuals" Value="{StaticResource UseSystemFocusVisuals}" />
    <Setter Property="FocusVisualMargin" Value="-3" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="Button">
          <Grid Background="Transparent">
            <um:Ripple Feedback="{TemplateBinding Foreground}" FeedbackOpacity="{StaticResource PressedOpacity}">
              <ContentPresenter x:Name="ContentPresenter" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" contract7Present:CornerRadius="{TemplateBinding CornerRadius}" ContentTransitions="{TemplateBinding ContentTransitions}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Margin="{StaticResource M3MaterialAppBarEllipsisButtonInnerBorderMargin}" Padding="0" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" AutomationProperties.AccessibilityView="Raw" Control.IsTemplateFocusTarget="True" />
            </um:Ripple>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="BaseM3MaterialNavigationBarStyle" TargetType="utu:NavigationBar">
    <!-- Setting content to empty to avoid getting the datacontext -->
    <Setter Property="Content" Value="" />
    <Setter Property="ContentTemplate">
      <Setter.Value>
        <DataTemplate>
          <TextBlock Text="{Binding}" Style="{StaticResource M3MaterialTitleLarge}" />
        </DataTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="Background" Value="{StaticResource SurfaceBrush}" />
    <Setter Property="Foreground" Value="{StaticResource OnSurfaceBrush}" />
    <android:Setter Property="(toolkit:UIElementExtensions.Elevation)" Value="{StaticResource M3MaterialNavigationBarElevation}" />
    <Setter Property="Height" Value="{StaticResource M3MaterialNavigationBarHeight}" />
    <Setter Property="Padding" Value="16,0,0,0" />
    <Setter Property="HorizontalAlignment" Value="Stretch" />
    <Setter Property="VerticalAlignment" Value="Top" />
    <Setter Property="HorizontalContentAlignment" Value="Left" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="OverflowButtonVisibility" Value="Collapsed" />
    <Setter Property="IsDynamicOverflowEnabled" Value="False" />
    <Setter Property="Template" Value="{StaticResource XamlM3MaterialNavigationBarTemplate}" />
  </Style>
  <Style x:Key="BaseM3MaterialMainCommandStyle" TargetType="AppBarButton" BasedOn="{StaticResource M3MaterialAppBarButton}">
    <Setter Property="Foreground" Value="{ThemeResource OnSurfaceBrush}" />
  </Style>
  <Style x:Key="BaseM3MaterialModalNavigationBarStyle" TargetType="utu:NavigationBar" BasedOn="{StaticResource BaseM3MaterialNavigationBarStyle}">
    <Setter Property="MainCommandStyle" Value="{StaticResource BaseM3MaterialModalMainCommandStyle}" />
    <Setter Property="Background" Value="{ThemeResource SurfaceBrush}" />
    <Setter Property="Foreground" Value="{ThemeResource OnSurfaceBrush}" />
  </Style>
  <Style x:Key="BaseM3MaterialModalMainCommandStyle" TargetType="AppBarButton" BasedOn="{StaticResource BaseM3MaterialMainCommandStyle}">
    <Setter Property="Foreground" Value="{ThemeResource OnSurfaceBrush}" />
  </Style>
  <!--origin: Styles\Controls\v2\TopTabBar.xaml-->
  <StaticResource x:Key="M3MaterialTopTabBarBackground" ResourceKey="MaterialPrimaryBrush" />
  <StaticResource x:Key="M3MaterialTopTabBarItemBackground" ResourceKey="SystemControlTransparentBrush" />
  <StaticResource x:Key="M3MaterialTopTabBarItemBackgroundPointerOver" ResourceKey="SystemControlTransparentBrush" />
  <StaticResource x:Key="M3MaterialTopTabBarItemBackgroundPressed" ResourceKey="SystemControlTransparentBrush" />
  <StaticResource x:Key="M3MaterialTopTabBarItemBackgroundSelected" ResourceKey="SystemControlTransparentBrush" />
  <StaticResource x:Key="M3MaterialTopTabBarItemBackgroundSelectedPointerOver" ResourceKey="SystemControlTransparentBrush" />
  <StaticResource x:Key="M3MaterialTopTabBarItemBackgroundSelectedPressed" ResourceKey="SystemControlTransparentBrush" />
  <StaticResource x:Key="M3MaterialTopTabBarItemForegroundPointerOver" ResourceKey="OnPrimaryBrush" />
  <StaticResource x:Key="M3MaterialTopTabBarItemForegroundPressed" ResourceKey="OnPrimaryBrush" />
  <StaticResource x:Key="M3MaterialTopTabBarItemForegroundDisabled" ResourceKey="SystemControlDisabledBaseMediumLowBrush" />
  <StaticResource x:Key="M3MaterialTopTabBarItemForegroundSelected" ResourceKey="OnPrimaryBrush" />
  <StaticResource x:Key="M3MaterialTopTabBarItemForegroundSelectedPointerOver" ResourceKey="OnPrimaryBrush" />
  <StaticResource x:Key="M3MaterialTopTabBarItemForegroundSelectedPressed" ResourceKey="OnPrimaryBrush" />
  <StaticResource x:Key="M3MaterialTopTabBarItemBorderBrush" ResourceKey="SystemControlTransparentBrush" />
  <SolidColorBrush x:Key="M3MaterialTopTabBarItemForeground" Opacity="0.70" Color="{ThemeResource OnPrimaryColor}" />
  <x:Double x:Key="M3MaterialTopTabBarFontSize">14</x:Double>
  <FontFamily x:Key="M3MaterialTopTabBarFontFamily">Roboto</FontFamily>
  <x:Double x:Key="M3MaterialTopTabBarHeight">48</x:Double>
  <x:Double x:Key="M3MaterialTopTabBarItemIconHeight">20</x:Double>
  <x:Double x:Key="M3MaterialTopTabBarItemIconWidth">20</x:Double>
  <Thickness x:Key="M3MaterialTopTabBarItemContentMargin">0,0,0,0</Thickness>
  <Thickness x:Key="M3MaterialTopTabBarItemContentOnlyMargin">12,0</Thickness>
  <mobile:Style x:Key="M3MaterialTopTabBarStyle" TargetType="utu:TabBar">
    <Setter Property="Background" Value="{StaticResource M3MaterialTopTabBarBackground}" />
    <Setter Property="IsTabStop" Value="False" />
    <Setter Property="toolkit:VisibleBoundsPadding.PaddingMask" Value="Top" />
    <Setter Property="Height" Value="{StaticResource M3MaterialTopTabBarHeight}" />
    <Setter Property="ItemContainerStyle" Value="{StaticResource M3MaterialTopTabBarItemStyle}" />
    <Setter Property="ItemsPanel">
      <Setter.Value>
        <ItemsPanelTemplate>
          <utu:TabBarListPanel />
        </ItemsPanelTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="utu:TabBar">
          <Grid x:Name="TabBarGrid" Height="{TemplateBinding Height}" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
            <ItemsPresenter Padding="{TemplateBinding Padding}" />
            <utu:TabBarSelectionIndicatorPresenter x:Name="SelectionIndicatorPresenter" Height="2" VerticalAlignment="Bottom" AutomationProperties.AutomationId="SelectionIndicatorPresenter" IndicatorTransitionMode="Snap" Opacity="0" Owner="{Binding RelativeSource={RelativeSource TemplatedParent}}">
              <Border x:Name="SelectionIndicatorRect" Width="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.SelectionIndicatorWidth}" Height="2" Margin="0,0,0,2" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" AutomationProperties.AutomationId="SelectionIndicatorRect" Background="{ThemeResource OnPrimaryBrush}" />
            </utu:TabBarSelectionIndicatorPresenter>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </mobile:Style>
  <mobile:Style x:Key="M3MaterialTopTabBarItemStyle" TargetType="utu:TabBarItem">
    <Setter Property="Background" Value="{ThemeResource M3MaterialTopTabBarBackground}" />
    <Setter Property="Foreground" Value="{ThemeResource M3MaterialTopTabBarItemForeground}" />
    <Setter Property="BorderBrush" Value="{StaticResource M3MaterialTopTabBarItemBorderBrush}" />
    <Setter Property="FontFamily" Value="{StaticResource M3MaterialTopTabBarFontFamily}" />
    <Setter Property="FontSize" Value="{StaticResource M3MaterialTopTabBarFontSize}" />
    <Setter Property="FontWeight" Value="Normal" />
    <Setter Property="UseSystemFocusVisuals" Value="True" />
    <Setter Property="HorizontalContentAlignment" Value="Center" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="utu:TabBarItem">
          <Grid x:Name="LayoutRoot" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Control.IsTemplateFocusTarget="True">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="PointerStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="Selected">
                  <VisualState.Setters>
                    <Setter Target="LayoutRoot.Background" Value="{ThemeResource M3MaterialTopTabBarItemBackgroundSelected}" />
                    <Setter Target="PointerRectangle.Fill" Value="{ThemeResource M3MaterialTopTabBarItemBackgroundSelected}" />
                    <Setter Target="Icon.Foreground" Value="{ThemeResource M3MaterialTopTabBarItemForegroundSelected}" />
                    <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource M3MaterialTopTabBarItemForegroundSelected}" />
                  </VisualState.Setters>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="DisabledStates">
                <VisualState x:Name="Enabled" />
                <VisualState x:Name="Disabled">
                  <VisualState.Setters>
                    <Setter Target="Icon.Foreground" Value="{ThemeResource M3MaterialTopTabBarItemForegroundDisabled}" />
                    <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource M3MaterialTopTabBarItemForegroundDisabled}" />
                  </VisualState.Setters>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="TabBarIconPositionStates">
                <VisualState x:Name="IconOnTop" />
                <VisualState x:Name="IconOnly">
                  <VisualState.Setters>
                    <Setter Target="PointerRectangle.Visibility" Value="Visible" />
                    <Setter Target="ContentPresenter.Visibility" Value="Collapsed" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="ContentOnly">
                  <VisualState.Setters>
                    <Setter Target="IconBox.Visibility" Value="Collapsed" />
                    <Setter Target="ContentPresenter.Margin" Value="{StaticResource M3MaterialTopTabBarItemContentOnlyMargin}" />
                    <Setter Target="IconRow.Width" Value="0" />
                    <Setter Target="ContentRow.Width" Value="*" />
                  </VisualState.Setters>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <um:Ripple x:Name="RippleControl" Padding="{TemplateBinding Padding}" AutomationProperties.AccessibilityView="Raw" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding CornerRadius}" Feedback="{ThemeResource OnPrimaryBrush}" FeedbackOpacity="{StaticResource PressedOpacity}">
              <um:Ripple.Content>
                <Grid>
                  <Rectangle x:Name="PointerRectangle" Fill="Transparent" Visibility="Collapsed" />
                  <Grid x:Name="ContentGrid" ColumnSpacing="8">
                    <Grid.ColumnDefinitions>
                      <ColumnDefinition x:Name="IconRow" Width="*" />
                      <ColumnDefinition x:Name="ContentRow" Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <Viewbox x:Name="IconBox" Width="{StaticResource M3MaterialTopTabBarItemIconWidth}" Height="{StaticResource M3MaterialTopTabBarItemIconHeight}">
                      <ContentPresenter x:Name="Icon" Content="{TemplateBinding Icon}" Foreground="{TemplateBinding Foreground}" />
                    </Viewbox>
                    <ContentPresenter x:Name="ContentPresenter" Grid.Column="1" Margin="{StaticResource M3MaterialTopTabBarItemContentMargin}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" AutomationProperties.AccessibilityView="Raw" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}" ContentTransitions="{TemplateBinding ContentTransitions}" FontSize="{TemplateBinding FontSize}" Foreground="{TemplateBinding Foreground}" TextWrapping="NoWrap" />
                  </Grid>
                </Grid>
              </um:Ripple.Content>
            </um:Ripple>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </mobile:Style>
  <not_mobile:Style x:Key="M3MaterialTopTabBarStyle" TargetType="utu:TabBar">
    <Setter Property="Background" Value="{StaticResource M3MaterialTopTabBarBackground}" />
    <Setter Property="IsTabStop" Value="False" />
    <Setter Property="toolkit:VisibleBoundsPadding.PaddingMask" Value="Top" />
    <Setter Property="Height" Value="{StaticResource M3MaterialTopTabBarHeight}" />
    <Setter Property="ItemContainerStyle" Value="{StaticResource M3MaterialTopTabBarItemStyle}" />
    <Setter Property="ItemsPanel">
      <Setter.Value>
        <ItemsPanelTemplate>
          <utu:TabBarListPanel />
        </ItemsPanelTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="utu:TabBar">
          <Grid x:Name="TabBarGrid" Height="{TemplateBinding Height}" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
            <ItemsPresenter Padding="{TemplateBinding Padding}" />
            <utu:TabBarSelectionIndicatorPresenter x:Name="SelectionIndicatorPresenter" Height="2" VerticalAlignment="Bottom" AutomationProperties.AutomationId="SelectionIndicatorPresenter" IndicatorTransitionMode="Snap" Opacity="0" Owner="{Binding RelativeSource={RelativeSource TemplatedParent}}">
              <Border x:Name="SelectionIndicatorRect" Width="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.SelectionIndicatorWidth}" Height="2" Margin="0,0,0,2" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" AutomationProperties.AutomationId="SelectionIndicatorRect" Background="{ThemeResource OnPrimaryBrush}" />
            </utu:TabBarSelectionIndicatorPresenter>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </not_mobile:Style>
  <not_mobile:Style x:Key="M3MaterialTopTabBarItemStyle" TargetType="utu:TabBarItem">
    <Setter Property="Background" Value="{ThemeResource M3MaterialTopTabBarBackground}" />
    <Setter Property="Foreground" Value="{ThemeResource M3MaterialTopTabBarItemForeground}" />
    <Setter Property="BorderBrush" Value="{ThemeResource M3MaterialTopTabBarItemBorderBrush}" />
    <Setter Property="FontFamily" Value="{StaticResource M3MaterialTopTabBarFontFamily}" />
    <Setter Property="FontSize" Value="{StaticResource M3MaterialTopTabBarFontSize}" />
    <Setter Property="FontWeight" Value="Normal" />
    <Setter Property="UseSystemFocusVisuals" Value="True" />
    <Setter Property="HorizontalContentAlignment" Value="Center" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="utu:TabBarItem">
          <Grid x:Name="LayoutRoot" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Control.IsTemplateFocusTarget="True">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="PointerStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="PointerOver">
                  <VisualState.Setters>
                    <Setter Target="LayoutRoot.Background" Value="{ThemeResource M3MaterialTopTabBarItemBackgroundPointerOver}" />
                    <Setter Target="PointerRectangle.Fill" Value="{ThemeResource M3MaterialTopTabBarItemBackgroundPointerOver}" />
                    <Setter Target="Icon.Foreground" Value="{ThemeResource M3MaterialTopTabBarItemForegroundPointerOver}" />
                    <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource M3MaterialTopTabBarItemForegroundPointerOver}" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="Pressed">
                  <VisualState.Setters>
                    <Setter Target="LayoutRoot.Background" Value="{ThemeResource M3MaterialTopTabBarItemBackgroundPressed}" />
                    <Setter Target="PointerRectangle.Fill" Value="{ThemeResource M3MaterialTopTabBarItemBackgroundPressed}" />
                    <Setter Target="Icon.Foreground" Value="{ThemeResource M3MaterialTopTabBarItemForegroundPressed}" />
                    <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource M3MaterialTopTabBarItemForegroundPressed}" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="Selected">
                  <VisualState.Setters>
                    <Setter Target="LayoutRoot.Background" Value="{ThemeResource M3MaterialTopTabBarItemBackgroundSelected}" />
                    <Setter Target="PointerRectangle.Fill" Value="{ThemeResource M3MaterialTopTabBarItemBackgroundSelected}" />
                    <Setter Target="Icon.Foreground" Value="{ThemeResource M3MaterialTopTabBarItemForegroundSelected}" />
                    <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource M3MaterialTopTabBarItemForegroundSelected}" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="PointerOverSelected">
                  <VisualState.Setters>
                    <Setter Target="LayoutRoot.Background" Value="{ThemeResource M3MaterialTopTabBarItemBackgroundSelectedPointerOver}" />
                    <Setter Target="PointerRectangle.Fill" Value="{ThemeResource M3MaterialTopTabBarItemBackgroundSelectedPointerOver}" />
                    <Setter Target="Icon.Foreground" Value="{ThemeResource M3MaterialTopTabBarItemForegroundSelectedPointerOver}" />
                    <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource M3MaterialTopTabBarItemForegroundSelectedPointerOver}" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="PressedSelected">
                  <VisualState.Setters>
                    <Setter Target="LayoutRoot.Background" Value="{ThemeResource M3MaterialTopTabBarItemBackgroundSelectedPressed}" />
                    <Setter Target="PointerRectangle.Fill" Value="{ThemeResource M3MaterialTopTabBarItemBackgroundSelectedPressed}" />
                    <Setter Target="Icon.Foreground" Value="{ThemeResource M3MaterialTopTabBarItemForegroundSelectedPressed}" />
                    <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource M3MaterialTopTabBarItemForegroundSelectedPressed}" />
                  </VisualState.Setters>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="DisabledStates">
                <VisualState x:Name="Enabled" />
                <VisualState x:Name="Disabled">
                  <VisualState.Setters>
                    <Setter Target="Icon.Foreground" Value="{ThemeResource M3MaterialTopTabBarItemForegroundDisabled}" />
                    <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource M3MaterialTopTabBarItemForegroundDisabled}" />
                  </VisualState.Setters>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="TabBarIconPositionStates">
                <VisualState x:Name="IconOnTop" />
                <VisualState x:Name="IconOnly">
                  <VisualState.Setters>
                    <Setter Target="PointerRectangle.Visibility" Value="Visible" />
                    <Setter Target="ContentPresenter.Visibility" Value="Collapsed" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="ContentOnly">
                  <VisualState.Setters>
                    <Setter Target="IconBox.Visibility" Value="Collapsed" />
                    <Setter Target="ContentPresenter.Margin" Value="{StaticResource M3MaterialTopTabBarItemContentOnlyMargin}" />
                    <Setter Target="IconRow.Width" Value="0" />
                    <Setter Target="ContentRow.Width" Value="*" />
                  </VisualState.Setters>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <um:Ripple x:Name="RippleControl" Padding="{TemplateBinding Padding}" AutomationProperties.AccessibilityView="Raw" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding CornerRadius}" Feedback="{ThemeResource OnPrimaryBrush}" FeedbackOpacity="{StaticResource PressedOpacity}">
              <um:Ripple.Content>
                <Grid>
                  <Rectangle x:Name="PointerRectangle" Fill="Transparent" Visibility="Collapsed" />
                  <Grid x:Name="ContentGrid" ColumnSpacing="8">
                    <Grid.ColumnDefinitions>
                      <ColumnDefinition x:Name="IconRow" Width="*" />
                      <ColumnDefinition x:Name="ContentRow" Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <Viewbox x:Name="IconBox" Width="{StaticResource M3MaterialTopTabBarItemIconWidth}" Height="{StaticResource M3MaterialTopTabBarItemIconHeight}">
                      <ContentPresenter x:Name="Icon" Content="{TemplateBinding Icon}" Foreground="{TemplateBinding Foreground}" />
                    </Viewbox>
                    <ContentPresenter x:Name="ContentPresenter" Grid.Column="1" Margin="{StaticResource M3MaterialTopTabBarItemContentMargin}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" AutomationProperties.AccessibilityView="Raw" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}" ContentTransitions="{TemplateBinding ContentTransitions}" FontSize="{TemplateBinding FontSize}" Foreground="{TemplateBinding Foreground}" TextWrapping="NoWrap" />
                  </Grid>
                </Grid>
              </um:Ripple.Content>
            </um:Ripple>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </not_mobile:Style>
  <!--origin: Styles\Controls\v2\_Common.xaml-->
</ResourceDictionary>