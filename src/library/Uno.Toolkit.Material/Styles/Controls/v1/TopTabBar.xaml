<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
					xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
					xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
					xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
					xmlns:um="using:Uno.Material"
					xmlns:ut="using:Uno.Themes"
					xmlns:utu="using:Uno.Toolkit.UI"
                    xmlns:not_mobile="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:mobile="http://uno.ui/mobile" 
					mc:Ignorable="d mobile">
	
	<ut:ToUpperConverter x:Key="MaterialTopTabBarToUpperConverter" />

	<!--#region Material Default TopTabBar-->
    <StaticResource x:Key="MaterialTopTabBarBackground"
					ResourceKey="SystemControlTransparentBrush" />
	<StaticResource x:Key="MaterialTopTabBarIndicator"
					ResourceKey="MaterialPrimaryBrush" />

	<!--TabBarItem Selected State Brushes-->
		<!--Background-->
    <StaticResource x:Key="MaterialTopTabBarItemBackgroundSelected"
					ResourceKey="SystemControlTransparentBrush" />
    <StaticResource x:Key="MaterialTopTabBarItemBackgroundSelectedPointerOver"
					ResourceKey="MaterialPrimaryHoverBrush" />
    <StaticResource x:Key="MaterialTopTabBarItemBackgroundSelectedPressed"
					ResourceKey="MaterialPrimaryPressedBrush" />
    <StaticResource x:Key="MaterialTopTabBarItemBackgroundSelectedFocused"
					ResourceKey="MaterialTopTabBarItemPrimaryFocusedBrush" />
		<!--Foreground-->
    <StaticResource x:Key="MaterialTopTabBarItemForegroundSelected"
					ResourceKey="MaterialPrimaryBrush" />
    <StaticResource x:Key="MaterialTopTabBarItemForegroundSelectedPointerOver"
					ResourceKey="MaterialPrimaryBrush" />
    <StaticResource x:Key="MaterialTopTabBarItemForegroundSelectedPressed"
					ResourceKey="MaterialPrimaryBrush" />
    <StaticResource x:Key="MaterialTopTabBarItemForegroundSelectedFocused"
					ResourceKey="MaterialPrimaryBrush" />


    <!--TabBarItem Unselected State Brushes-->
		<!--Background-->
    <StaticResource x:Key="MaterialTopTabBarItemBackground"
					ResourceKey="SystemControlTransparentBrush" />
    <StaticResource x:Key="MaterialTopTabBarItemBackgroundPointerOver"
					ResourceKey="MaterialPrimaryHoverBrush" />
    <StaticResource x:Key="MaterialTopTabBarItemBackgroundPressed"
					ResourceKey="MaterialPrimaryPressedBrush" />
    <StaticResource x:Key="MaterialTopTabBarItemBackgroundFocused"
					ResourceKey="MaterialTopTabBarItemPrimaryFocusedBrush" />
		<!--Foreground-->
    <StaticResource x:Key="MaterialTopTabBarItemForeground"
					ResourceKey="MaterialOnSurfaceMediumBrush"/>
    <StaticResource x:Key="MaterialTopTabBarItemForegroundPointerOver"
					ResourceKey="MaterialOnSurfaceMediumBrush" />
    <StaticResource x:Key="MaterialTopTabBarItemForegroundPressed"
					ResourceKey="MaterialOnSurfaceMediumBrush" />
    <StaticResource x:Key="MaterialTopTabBarItemForegroundDisabled"
					ResourceKey="SystemControlDisabledBaseMediumLowBrush" />

    <SolidColorBrush x:Key="MaterialTopTabBarItemPrimaryFocusedBrush"
					 Color="{ThemeResource MaterialPrimaryColor}"
					 Opacity="0.3" />

    <StaticResource x:Key="MaterialTopTabBarItemBorderBrush"
					ResourceKey="SystemControlTransparentBrush" />

	<x:Double x:Key="MaterialTopTabBarFontSize">14</x:Double>
	<x:Double x:Key="MaterialTopTabBarHeight">48</x:Double>
    <x:Double x:Key="MaterialTopTabBarItemIconHeight">20</x:Double>
    <x:Double x:Key="MaterialTopTabBarItemIconWidth">20</x:Double>
    <Thickness x:Key="MaterialTopTabBarItemContentMargin">0,0,0,0</Thickness>
    <Thickness x:Key="MaterialTopTabBarItemContentOnlyMargin">12,0</Thickness>
	

	<!--Material TabBar-->
	<mobile:Style x:Key="MaterialTopTabBarStyle"
		   TargetType="utu:TabBar">
		<Setter Property="Background"
				Value="{StaticResource MaterialTopTabBarBackground}" />
		<Setter Property="IsTabStop"
				Value="False" />
		<Setter Property="utu:SafeArea.Insets"
				Value="Top" />
		<Setter Property="Height"
				Value="{StaticResource MaterialTopTabBarHeight}" />
		<Setter Property="ItemContainerStyle"
				Value="{StaticResource MaterialTopTabBarItemStyle}" />
		<Setter Property="ItemsPanel">
			<Setter.Value>
				<ItemsPanelTemplate>
					<utu:TabBarListPanel />
				</ItemsPanelTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="utu:TabBar">
					<Grid x:Name="TabBarGrid"
						  Background="{TemplateBinding Background}"
						  BorderBrush="{TemplateBinding BorderBrush}"
						  BorderThickness="{TemplateBinding BorderThickness}"
						  Height="{TemplateBinding Height}">
						<ItemsPresenter Padding="{TemplateBinding Padding}" />
						<utu:TabBarSelectionIndicatorPresenter VerticalAlignment="Bottom"
															   Owner="{Binding RelativeSource={RelativeSource TemplatedParent}}"
															   x:Name="SelectionIndicatorPresenter"
															   AutomationProperties.AutomationId="SelectionIndicatorPresenter"
															   IndicatorTransitionMode="Snap"
															   Height="2"
															   Opacity="0">
							<Border Background="{ThemeResource MaterialTopTabBarIndicator}"
									x:Name="SelectionIndicatorRect"
									AutomationProperties.AutomationId="SelectionIndicatorRect"
									HorizontalAlignment="Stretch"
									VerticalAlignment="Stretch"
									Margin="0,0,0,2"
									Height="2"
									Width="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.SelectionIndicatorWidth}" />
						</utu:TabBarSelectionIndicatorPresenter>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</mobile:Style>

	<not_mobile:Style x:Key="MaterialTopTabBarStyle"
		   TargetType="utu:TabBar">
		<Setter Property="Background"
				Value="{StaticResource MaterialTopTabBarBackground}" />
		<Setter Property="IsTabStop"
				Value="False" />
		<Setter Property="utu:SafeArea.Insets"
				Value="Top" />
		<Setter Property="Height"
				Value="{StaticResource MaterialTopTabBarHeight}" />
		<Setter Property="ItemContainerStyle"
				Value="{StaticResource MaterialTopTabBarItemStyle}" />
		<Setter Property="ItemsPanel">
			<Setter.Value>
				<ItemsPanelTemplate>
					<utu:TabBarListPanel />
				</ItemsPanelTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="utu:TabBar">
					<Grid x:Name="TabBarGrid"
						  Background="{TemplateBinding Background}"
						  BorderBrush="{TemplateBinding BorderBrush}"
						  BorderThickness="{TemplateBinding BorderThickness}"
						  Height="{TemplateBinding Height}">
						<ItemsPresenter Padding="{TemplateBinding Padding}" />
						<utu:TabBarSelectionIndicatorPresenter VerticalAlignment="Bottom"
															   Owner="{Binding RelativeSource={RelativeSource TemplatedParent}}"
															   x:Name="SelectionIndicatorPresenter"
															   AutomationProperties.AutomationId="SelectionIndicatorPresenter"
															   IndicatorTransitionMode="Snap"
															   Height="2"
															   Opacity="0">
							<Border Background="{ThemeResource MaterialTopTabBarIndicator}"
									x:Name="SelectionIndicatorRect"
									AutomationProperties.AutomationId="SelectionIndicatorRect"
									HorizontalAlignment="Stretch"
									VerticalAlignment="Stretch"
									Margin="0,0,0,2"
									Height="2"
									Width="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.SelectionIndicatorWidth}" />
						</utu:TabBarSelectionIndicatorPresenter>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</not_mobile:Style>

	<!--Material TabBar Item -->
	<mobile:Style x:Key="MaterialTopTabBarItemStyle"
		   TargetType="utu:TabBarItem">
		<Setter Property="Background"
				Value="{ThemeResource MaterialTopTabBarItemBackground}" />
		<Setter Property="Foreground"
				Value="{ThemeResource MaterialTopTabBarItemForeground}" />
		<Setter Property="BorderBrush"
				Value="{StaticResource MaterialTopTabBarItemBorderBrush}" />
		<Setter Property="FontFamily"
				Value="{StaticResource MaterialRegularFontFamily}" />
		<Setter Property="FontSize"
				Value="{StaticResource MaterialTopTabBarFontSize}" />
		<Setter Property="FontWeight"
				Value="Normal" />
		<Setter Property="UseSystemFocusVisuals"
				Value="True" />
		<Setter Property="HorizontalContentAlignment"
				Value="Center" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="utu:TabBarItem">
					<Grid x:Name="LayoutRoot"
						  Background="{TemplateBinding Background}"
						  BorderBrush="{TemplateBinding BorderBrush}"
						  BorderThickness="{TemplateBinding BorderThickness}"
						  Control.IsTemplateFocusTarget="True">

						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="PointerStates">
								<VisualState x:Name="Normal" />
								<VisualState x:Name="Selected">
									<VisualState.Setters>
										<Setter Target="LayoutRoot.Background"
												Value="{ThemeResource MaterialTopTabBarItemBackgroundSelected}" />
										<Setter Target="PointerRectangle.Fill"
												Value="{ThemeResource MaterialTopTabBarItemBackgroundSelected}" />
										<Setter Target="Icon.Foreground"
												Value="{ThemeResource MaterialTopTabBarItemForegroundSelected}" />
										<Setter Target="ContentPresenter.Foreground"
												Value="{ThemeResource MaterialTopTabBarItemForegroundSelected}" />
									</VisualState.Setters>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="DisabledStates">
								<VisualState x:Name="Enabled" />
								<VisualState x:Name="Disabled">
									<VisualState.Setters>
										<Setter Target="Icon.Foreground"
												Value="{ThemeResource MaterialTopTabBarItemForegroundDisabled}" />
										<Setter Target="ContentPresenter.Foreground"
												Value="{ThemeResource MaterialTopTabBarItemForegroundDisabled}" />
									</VisualState.Setters>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="TabBarIconPositionStates">
								<VisualState x:Name="IconOnTop" />
								<VisualState x:Name="IconOnly">
									<VisualState.Setters>
										<Setter Target="PointerRectangle.Visibility"
												Value="Visible" />
										<Setter Target="ContentPresenter.Visibility"
												Value="Collapsed" />
									</VisualState.Setters>
								</VisualState>
								<VisualState x:Name="ContentOnly">
									<VisualState.Setters>
										<Setter Target="IconBox.Visibility"
												Value="Collapsed" />
										<Setter Target="ContentPresenter.Margin"
												Value="{StaticResource MaterialTopTabBarItemContentOnlyMargin}" />
										<Setter Target="IconRow.Width"
												Value="0" />
										<Setter Target="ContentRow.Width"
												Value="*" />
									</VisualState.Setters>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="FocusStates">
								<VisualState x:Name="Focused">
									<VisualState.Setters>
										<Setter Target="LayoutRoot.Background"
												Value="{ThemeResource MaterialTopTabBarItemBackgroundFocused}" />
										<Setter Target="PointerRectangle.Fill"
												Value="{ThemeResource MaterialTopTabBarItemBackgroundFocused}" />
									</VisualState.Setters>
								</VisualState>
								<VisualState x:Name="PointerFocused" />
								<VisualState x:Name="Unfocused" />
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<um:Ripple x:Name="RippleControl"
										 Feedback="{ThemeResource MaterialPrimaryBrush}"
										 FeedbackOpacity="{StaticResource MaterialPressedOpacity}"
										 BorderBrush="{TemplateBinding BorderBrush}"
										 BorderThickness="{TemplateBinding BorderThickness}"
										 CornerRadius="{TemplateBinding CornerRadius}"
										 Padding="{TemplateBinding Padding}"
										 AutomationProperties.AccessibilityView="Raw">
							<um:Ripple.Content>
								<Grid>
									<Rectangle x:Name="PointerRectangle"
											   Fill="Transparent"
											   Visibility="Collapsed" />

									<Grid ColumnSpacing="8"
										  x:Name="ContentGrid">
										<Grid.ColumnDefinitions>
											<ColumnDefinition x:Name="IconRow"
															  Width="*" />
											<ColumnDefinition x:Name="ContentRow"
															  Width="Auto" />
										</Grid.ColumnDefinitions>
										<Viewbox x:Name="IconBox"
												 Height="{StaticResource MaterialTopTabBarItemIconHeight}"
												 Width="{StaticResource MaterialTopTabBarItemIconWidth}">
											<ContentPresenter x:Name="Icon"
															  Foreground="{TemplateBinding Foreground}"
															  Content="{TemplateBinding Icon}" />
										</Viewbox>
										<ContentPresenter x:Name="ContentPresenter"
														  Grid.Column="1"
														  TextWrapping="NoWrap"
														  FontSize="{TemplateBinding FontSize}"
														  Foreground="{TemplateBinding Foreground}"
														  Margin="{StaticResource MaterialTopTabBarItemContentMargin}"
														  ContentTransitions="{TemplateBinding ContentTransitions}"
														  ContentTemplate="{TemplateBinding ContentTemplate}"
														  Content="{Binding Content, RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource MaterialTopTabBarToUpperConverter}}"
														  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
														  ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
														  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
														  AutomationProperties.AccessibilityView="Raw" />
									</Grid>
								</Grid>
							</um:Ripple.Content>
						</um:Ripple>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</mobile:Style>

	<not_mobile:Style x:Key="MaterialTopTabBarItemStyle"
		   TargetType="utu:TabBarItem">
		<Setter Property="Background"
				Value="{ThemeResource MaterialTopTabBarItemBackground}" />
		<Setter Property="Foreground"
				Value="{ThemeResource MaterialTopTabBarItemForeground}" />
		<Setter Property="BorderBrush"
				Value="{ThemeResource MaterialTopTabBarItemBorderBrush}" />
		<Setter Property="FontFamily"
				Value="{StaticResource MaterialRegularFontFamily}" />
		<Setter Property="FontSize"
				Value="{StaticResource MaterialTopTabBarFontSize}" />
		<Setter Property="FontWeight"
				Value="Normal" />
		<Setter Property="UseSystemFocusVisuals"
				Value="True" />
		<Setter Property="HorizontalContentAlignment"
				Value="Center" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="utu:TabBarItem">
					<Grid x:Name="LayoutRoot"
						  Background="{TemplateBinding Background}"
						  BorderBrush="{TemplateBinding BorderBrush}"
						  BorderThickness="{TemplateBinding BorderThickness}"
						  Control.IsTemplateFocusTarget="True">

						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal" />
								<VisualState x:Name="PointerOver">
									<VisualState.Setters>
										<Setter Target="LayoutRoot.Background"
												Value="{ThemeResource MaterialTopTabBarItemBackgroundPointerOver}" />
										<Setter Target="PointerRectangle.Fill"
												Value="{ThemeResource MaterialTopTabBarItemBackgroundPointerOver}" />
										<Setter Target="Icon.Foreground"
												Value="{ThemeResource MaterialTopTabBarItemForegroundPointerOver}" />
										<Setter Target="ContentPresenter.Foreground"
												Value="{ThemeResource MaterialTopTabBarItemForegroundPointerOver}" />
									</VisualState.Setters>
								</VisualState>
								<VisualState x:Name="Pressed">
									<VisualState.Setters>
										<Setter Target="LayoutRoot.Background"
												Value="{ThemeResource MaterialTopTabBarItemBackgroundPressed}" />
										<Setter Target="PointerRectangle.Fill"
												Value="{ThemeResource MaterialTopTabBarItemBackgroundPressed}" />
										<Setter Target="Icon.Foreground"
												Value="{ThemeResource MaterialTopTabBarItemForegroundPressed}" />
										<Setter Target="ContentPresenter.Foreground"
												Value="{ThemeResource MaterialTopTabBarItemForegroundPressed}" />
									</VisualState.Setters>
								</VisualState>
								<VisualState x:Name="Selected">
									<VisualState.Setters>
										<Setter Target="LayoutRoot.Background"
												Value="{ThemeResource MaterialTopTabBarItemBackgroundSelected}" />
										<Setter Target="PointerRectangle.Fill"
												Value="{ThemeResource MaterialTopTabBarItemBackgroundSelected}" />
										<Setter Target="Icon.Foreground"
												Value="{ThemeResource MaterialTopTabBarItemForegroundSelected}" />
										<Setter Target="ContentPresenter.Foreground"
												Value="{ThemeResource MaterialTopTabBarItemForegroundSelected}" />
									</VisualState.Setters>
								</VisualState>
								<VisualState x:Name="PointerOverSelected">
									<VisualState.Setters>
										<Setter Target="LayoutRoot.Background"
												Value="{ThemeResource MaterialTopTabBarItemBackgroundSelectedPointerOver}" />
										<Setter Target="PointerRectangle.Fill"
												Value="{ThemeResource MaterialTopTabBarItemBackgroundSelectedPointerOver}" />
										<Setter Target="Icon.Foreground"
												Value="{ThemeResource MaterialTopTabBarItemForegroundSelectedPointerOver}" />
										<Setter Target="ContentPresenter.Foreground"
												Value="{ThemeResource MaterialTopTabBarItemForegroundSelectedPointerOver}" />
									</VisualState.Setters>
								</VisualState>
								<VisualState x:Name="PressedSelected">
									<VisualState.Setters>
										<Setter Target="LayoutRoot.Background"
												Value="{ThemeResource MaterialTopTabBarItemBackgroundSelectedPressed}" />
										<Setter Target="PointerRectangle.Fill"
												Value="{ThemeResource MaterialTopTabBarItemBackgroundSelectedPressed}" />
										<Setter Target="Icon.Foreground"
												Value="{ThemeResource MaterialTopTabBarItemForegroundSelectedPressed}" />
										<Setter Target="ContentPresenter.Foreground"
												Value="{ThemeResource MaterialTopTabBarItemForegroundSelectedPressed}" />
									</VisualState.Setters>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="FocusStates">
								<VisualState x:Name="Focused">
									<VisualState.Setters>
										<Setter Target="LayoutRoot.Background"
												Value="{ThemeResource MaterialTopTabBarItemBackgroundFocused}" />
										<Setter Target="PointerRectangle.Fill"
												Value="{ThemeResource MaterialTopTabBarItemBackgroundFocused}" />
									</VisualState.Setters>
								</VisualState>
								<VisualState x:Name="PointerFocused" />
								<VisualState x:Name="Unfocused" />
							</VisualStateGroup>
							<VisualStateGroup x:Name="DisabledStates">
								<VisualState x:Name="Enabled" />
								<VisualState x:Name="Disabled">
									<VisualState.Setters>
										<Setter Target="Icon.Foreground"
												Value="{ThemeResource MaterialTopTabBarItemForegroundDisabled}" />
										<Setter Target="ContentPresenter.Foreground"
												Value="{ThemeResource MaterialTopTabBarItemForegroundDisabled}" />
									</VisualState.Setters>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="TabBarIconPositionStates">
								<VisualState x:Name="IconOnTop" />
								<VisualState x:Name="IconOnly">
									<VisualState.Setters>
										<Setter Target="PointerRectangle.Visibility"
												Value="Visible" />
										<Setter Target="ContentPresenter.Visibility"
												Value="Collapsed" />
									</VisualState.Setters>
								</VisualState>
								<VisualState x:Name="ContentOnly">
									<VisualState.Setters>
										<Setter Target="IconBox.Visibility"
												Value="Collapsed" />
										<Setter Target="ContentPresenter.Margin"
												Value="{StaticResource MaterialTopTabBarItemContentOnlyMargin}" />
										<Setter Target="IconRow.Width"
												Value="0" />
										<Setter Target="ContentRow.Width"
												Value="*" />
									</VisualState.Setters>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<um:Ripple x:Name="RippleControl"
										 Feedback="{ThemeResource MaterialPrimaryBrush}"
										 FeedbackOpacity="{StaticResource MaterialPressedOpacity}"
										 BorderBrush="{TemplateBinding BorderBrush}"
										 BorderThickness="{TemplateBinding BorderThickness}"
										 CornerRadius="{TemplateBinding CornerRadius}"
										 Padding="{TemplateBinding Padding}"
										 AutomationProperties.AccessibilityView="Raw">
							<um:Ripple.Content>
								<Grid>
									<Rectangle x:Name="PointerRectangle"
											   Fill="Transparent"
											   Visibility="Collapsed" />

									<Grid ColumnSpacing="8"
										  x:Name="ContentGrid">
										<Grid.ColumnDefinitions>
											<ColumnDefinition x:Name="IconRow"
															  Width="*" />
											<ColumnDefinition x:Name="ContentRow"
															  Width="Auto" />
										</Grid.ColumnDefinitions>
										<Viewbox x:Name="IconBox"
												 Height="{StaticResource MaterialTopTabBarItemIconHeight}"
												 Width="{StaticResource MaterialTopTabBarItemIconWidth}">
											<ContentPresenter x:Name="Icon"
															  Foreground="{TemplateBinding Foreground}"
															  Content="{TemplateBinding Icon}" />
										</Viewbox>
										<ContentPresenter x:Name="ContentPresenter"
														  Grid.Column="1"
														  TextWrapping="NoWrap"
														  FontSize="{TemplateBinding FontSize}"
														  Foreground="{TemplateBinding Foreground}"
														  Margin="{StaticResource MaterialTopTabBarItemContentMargin}"
														  ContentTransitions="{TemplateBinding ContentTransitions}"
														  ContentTemplate="{TemplateBinding ContentTemplate}"
														  Content="{Binding Content, RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource MaterialTopTabBarToUpperConverter}}"
														  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
														  ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
														  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
														  AutomationProperties.AccessibilityView="Raw" />
									</Grid>
								</Grid>
							</um:Ripple.Content>
						</um:Ripple>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</not_mobile:Style>
	<!--#endregion-->

	<!--#region Material Colored TopTabBar-->
	
	<StaticResource x:Key="MaterialColoredTopTabBarBackground"
					ResourceKey="MaterialPrimaryBrush" />
	<StaticResource x:Key="MaterialColoredTopTabBarIndicator"
					ResourceKey="MaterialOnPrimaryBrush" />
	
	<!--Colored TabBarItem Selected State Brushes-->
	<!--Background-->
	<StaticResource x:Key="MaterialColoredTopTabBarItemBackgroundSelected"
					ResourceKey="SystemControlTransparentBrush" />
	<StaticResource x:Key="MaterialColoredTopTabBarItemBackgroundSelectedPointerOver"
					ResourceKey="MaterialOnPrimaryHoverBrush" />
	<StaticResource x:Key="MaterialColoredTopTabBarItemBackgroundSelectedPressed"
					ResourceKey="MaterialOnPrimaryPressedBrush" />
	<StaticResource x:Key="MaterialColoredTopTabBarItemBackgroundSelectedFocused"
					ResourceKey="MaterialColoredTopTabBarItemOnPrimaryFocusedBrush" />
	<!--Foreground-->
	<StaticResource x:Key="MaterialColoredTopTabBarItemForegroundSelected"
					ResourceKey="MaterialOnPrimaryBrush" />
	<StaticResource x:Key="MaterialColoredTopTabBarItemForegroundSelectedPointerOver"
					ResourceKey="MaterialOnPrimaryBrush" />
	<StaticResource x:Key="MaterialColoredTopTabBarItemForegroundSelectedPressed"
					ResourceKey="MaterialOnPrimaryBrush" />
	<StaticResource x:Key="MaterialColoredTopTabBarItemForegroundSelectedFocused"
					ResourceKey="MaterialOnPrimaryBrush" />
	
	<!--Colored TabBarItem Unselected State Brushes-->
	<!--Background-->
	<StaticResource x:Key="MaterialColoredTopTabBarItemBackground"
					ResourceKey="SystemControlTransparentBrush" />
	<StaticResource x:Key="MaterialColoredTopTabBarItemBackgroundPointerOver"
					ResourceKey="MaterialOnPrimaryHoverBrush" />
	<StaticResource x:Key="MaterialColoredTopTabBarItemBackgroundPressed"
					ResourceKey="MaterialOnPrimaryPressedBrush" />
	<StaticResource x:Key="MaterialColoredTopTabBarItemBackgroundFocused"
					ResourceKey="MaterialColoredTopTabBarItemOnPrimaryFocusedBrush" />
	<!--Foreground-->
	<StaticResource x:Key="MaterialColoredTopTabBarItemForeground"
					ResourceKey="MaterialColoredTopTabBarItemOnPrimaryBrush"/>
	<StaticResource x:Key="MaterialColoredTopTabBarItemForegroundPointerOver"
					ResourceKey="MaterialColoredTopTabBarItemOnPrimaryBrush" />
	<StaticResource x:Key="MaterialColoredTopTabBarItemForegroundPressed"
					ResourceKey="MaterialColoredTopTabBarItemOnPrimaryBrush" />
	<StaticResource x:Key="MaterialColoredTopTabBarItemForegroundDisabled"
					ResourceKey="SystemControlDisabledBaseMediumLowBrush" />

	<SolidColorBrush x:Key="MaterialColoredTopTabBarItemOnPrimaryFocusedBrush"
					 Color="{ThemeResource MaterialOnPrimaryColor}"
					 Opacity="0.30" />

	<SolidColorBrush x:Key="MaterialColoredTopTabBarItemOnPrimaryBrush"
					 Color="{ThemeResource MaterialOnPrimaryColor}"
					 Opacity="0.60" />


	<StaticResource x:Key="MaterialColoredTopTabBarItemBorderBrush"
					ResourceKey="SystemControlTransparentBrush" />

	<x:Double x:Key="MaterialColoredTopTabBarFontSize">14</x:Double>
	<x:Double x:Key="MaterialColoredTopTabBarHeight">48</x:Double>
	<x:Double x:Key="MaterialColoredTopTabBarItemIconHeight">20</x:Double>
	<x:Double x:Key="MaterialColoredTopTabBarItemIconWidth">20</x:Double>
	<Thickness x:Key="MaterialColoredTopTabBarItemContentMargin">0,0,0,0</Thickness>
	<Thickness x:Key="MaterialColoredTopTabBarItemContentOnlyMargin">12,0</Thickness>

	
	<!--Material TabBar-->
    <mobile:Style x:Key="MaterialColoredTopTabBarStyle"
		   TargetType="utu:TabBar">
        <Setter Property="Background"
				Value="{StaticResource MaterialColoredTopTabBarBackground}" />
        <Setter Property="IsTabStop"
				Value="False" />
        <Setter Property="utu:SafeArea.Insets"
				Value="Top" />
        <Setter Property="Height"
				Value="{StaticResource MaterialColoredTopTabBarHeight}" />
        <Setter Property="ItemContainerStyle"
				Value="{StaticResource MaterialColoredTopTabBarItemStyle}" />
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <utu:TabBarListPanel />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="utu:TabBar">
                    <Grid x:Name="TabBarGrid"
						  Background="{TemplateBinding Background}"
						  BorderBrush="{TemplateBinding BorderBrush}"
						  BorderThickness="{TemplateBinding BorderThickness}"
						  Height="{TemplateBinding Height}">
                        <ItemsPresenter Padding="{TemplateBinding Padding}" />
                        <utu:TabBarSelectionIndicatorPresenter VerticalAlignment="Bottom"
															   Owner="{Binding RelativeSource={RelativeSource TemplatedParent}}"
															   x:Name="SelectionIndicatorPresenter"
															   AutomationProperties.AutomationId="SelectionIndicatorPresenter"
															   IndicatorTransitionMode="Snap"
															   Height="2"
															   Opacity="0">
							<Border Background="{ThemeResource MaterialColoredTopTabBarIndicator}"
									x:Name="SelectionIndicatorRect"
									AutomationProperties.AutomationId="SelectionIndicatorRect"
									HorizontalAlignment="Stretch"
									VerticalAlignment="Stretch"
									Margin="0,0,0,2"
									Height="2"
									Width="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.SelectionIndicatorWidth}" />
                        </utu:TabBarSelectionIndicatorPresenter>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </mobile:Style>

    <not_mobile:Style x:Key="MaterialColoredTopTabBarStyle"
		   TargetType="utu:TabBar">
        <Setter Property="Background"
				Value="{StaticResource MaterialColoredTopTabBarBackground}" />
        <Setter Property="IsTabStop"
				Value="False" />
        <Setter Property="utu:SafeArea.Insets"
				Value="Top" />
        <Setter Property="Height"
				Value="{StaticResource MaterialColoredTopTabBarHeight}" />
        <Setter Property="ItemContainerStyle"
				Value="{StaticResource MaterialColoredTopTabBarItemStyle}" />
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <utu:TabBarListPanel />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="utu:TabBar">
                    <Grid x:Name="TabBarGrid"
						  Background="{TemplateBinding Background}"
						  BorderBrush="{TemplateBinding BorderBrush}"
						  BorderThickness="{TemplateBinding BorderThickness}"
						  Height="{TemplateBinding Height}">
                        <ItemsPresenter Padding="{TemplateBinding Padding}" />
                        <utu:TabBarSelectionIndicatorPresenter VerticalAlignment="Bottom"
															   Owner="{Binding RelativeSource={RelativeSource TemplatedParent}}"
															   x:Name="SelectionIndicatorPresenter"
															   AutomationProperties.AutomationId="SelectionIndicatorPresenter"
															   IndicatorTransitionMode="Snap"
															   Height="2"
															   Opacity="0">
							<Border Background="{ThemeResource MaterialColoredTopTabBarIndicator}"
									x:Name="SelectionIndicatorRect"
									AutomationProperties.AutomationId="SelectionIndicatorRect"
									HorizontalAlignment="Stretch"
									VerticalAlignment="Stretch"
									Margin="0,0,0,2"
									Height="2"
									Width="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.SelectionIndicatorWidth}" />
                        </utu:TabBarSelectionIndicatorPresenter>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </not_mobile:Style>

    <!--Material TabBar Item -->
    <mobile:Style x:Key="MaterialColoredTopTabBarItemStyle"
		   TargetType="utu:TabBarItem">
        <Setter Property="Background"
				Value="{ThemeResource MaterialColoredTopTabBarItemBackground}" />
        <Setter Property="Foreground"
				Value="{ThemeResource MaterialColoredTopTabBarItemForeground}" />
        <Setter Property="BorderBrush"
				Value="{StaticResource MaterialColoredTopTabBarItemBorderBrush}" />
        <Setter Property="FontFamily"
				Value="{StaticResource MaterialRegularFontFamily}" />
        <Setter Property="FontSize"
				Value="{StaticResource MaterialColoredTopTabBarFontSize}" />
        <Setter Property="FontWeight"
				Value="Normal" />
        <Setter Property="UseSystemFocusVisuals"
				Value="True" />
        <Setter Property="HorizontalContentAlignment"
				Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="utu:TabBarItem">
                    <Grid x:Name="LayoutRoot"
						  Background="{TemplateBinding Background}"
						  BorderBrush="{TemplateBinding BorderBrush}"
						  BorderThickness="{TemplateBinding BorderThickness}"
						  Control.IsTemplateFocusTarget="True">

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="PointerStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="Selected">
                                    <VisualState.Setters>
                                        <Setter Target="LayoutRoot.Background"
												Value="{ThemeResource MaterialColoredTopTabBarItemBackgroundSelected}" />
                                        <Setter Target="PointerRectangle.Fill"
												Value="{ThemeResource MaterialColoredTopTabBarItemBackgroundSelected}" />
                                        <Setter Target="Icon.Foreground"
												Value="{ThemeResource MaterialColoredTopTabBarItemForegroundSelected}" />
                                        <Setter Target="ContentPresenter.Foreground"
												Value="{ThemeResource MaterialColoredTopTabBarItemForegroundSelected}" />
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="DisabledStates">
                                <VisualState x:Name="Enabled" />
                                <VisualState x:Name="Disabled">
                                    <VisualState.Setters>
                                        <Setter Target="Icon.Foreground"
												Value="{ThemeResource MaterialColoredTopTabBarItemForegroundDisabled}" />
                                        <Setter Target="ContentPresenter.Foreground"
												Value="{ThemeResource MaterialColoredTopTabBarItemForegroundDisabled}" />
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="TabBarIconPositionStates">
                                <VisualState x:Name="IconOnTop" />
                                <VisualState x:Name="IconOnly">
                                    <VisualState.Setters>
                                        <Setter Target="PointerRectangle.Visibility"
												Value="Visible" />
                                        <Setter Target="ContentPresenter.Visibility"
												Value="Collapsed" />
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="ContentOnly">
                                    <VisualState.Setters>
                                        <Setter Target="IconBox.Visibility"
												Value="Collapsed" />
                                        <Setter Target="ContentPresenter.Margin"
												Value="{StaticResource MaterialColoredTopTabBarItemContentOnlyMargin}" />
                                        <Setter Target="IconRow.Width"
												Value="0" />
                                        <Setter Target="ContentRow.Width"
												Value="*" />
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <VisualState.Setters>
                                        <Setter Target="LayoutRoot.Background"
												Value="{ThemeResource MaterialColoredTopTabBarItemBackgroundFocused}" />
                                        <Setter Target="PointerRectangle.Fill"
												Value="{ThemeResource MaterialColoredTopTabBarItemBackgroundFocused}" />
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="PointerFocused" />
                                <VisualState x:Name="Unfocused" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <um:Ripple x:Name="RippleControl"
										 Feedback="{ThemeResource MaterialOnPrimaryBrush}"
										 FeedbackOpacity="{StaticResource MaterialPressedOpacity}"
										 BorderBrush="{TemplateBinding BorderBrush}"
										 BorderThickness="{TemplateBinding BorderThickness}"
										 CornerRadius="{TemplateBinding CornerRadius}"
										 Padding="{TemplateBinding Padding}"
										 AutomationProperties.AccessibilityView="Raw">
                            <um:Ripple.Content>
                                <Grid>
                                    <Rectangle x:Name="PointerRectangle"
											   Fill="Transparent"
											   Visibility="Collapsed" />

                                    <Grid ColumnSpacing="8"
										  x:Name="ContentGrid">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition x:Name="IconRow"
															  Width="*" />
                                            <ColumnDefinition x:Name="ContentRow"
															  Width="Auto" />
                                        </Grid.ColumnDefinitions>
                                        <Viewbox x:Name="IconBox"
												 Height="{StaticResource MaterialColoredTopTabBarItemIconHeight}"
												 Width="{StaticResource MaterialColoredTopTabBarItemIconWidth}">
                                            <ContentPresenter x:Name="Icon"
															  Foreground="{TemplateBinding Foreground}"
															  Content="{TemplateBinding Icon}" />
                                        </Viewbox>
                                        <ContentPresenter x:Name="ContentPresenter"
														  Grid.Column="1"
														  TextWrapping="NoWrap"
														  FontSize="{TemplateBinding FontSize}"
														  Foreground="{TemplateBinding Foreground}"
														  Margin="{StaticResource MaterialColoredTopTabBarItemContentMargin}"
														  ContentTransitions="{TemplateBinding ContentTransitions}"
														  ContentTemplate="{TemplateBinding ContentTemplate}"
														  Content="{Binding Content, RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource MaterialTopTabBarToUpperConverter}}"
														  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
														  ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
														  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
														  AutomationProperties.AccessibilityView="Raw" />
                                    </Grid>
                                </Grid>
                            </um:Ripple.Content>
                        </um:Ripple>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </mobile:Style>


	<not_mobile:Style x:Key="MaterialColoredTopTabBarItemStyle"
		   TargetType="utu:TabBarItem">
		<Setter Property="Background"
				Value="{ThemeResource MaterialColoredTopTabBarItemBackground}" />
		<Setter Property="Foreground"
				Value="{ThemeResource MaterialColoredTopTabBarItemForeground}" />
		<Setter Property="BorderBrush"
				Value="{ThemeResource MaterialColoredTopTabBarItemBorderBrush}" />
		<Setter Property="FontFamily"
				Value="{StaticResource MaterialRegularFontFamily}" />
		<Setter Property="FontSize"
				Value="{StaticResource MaterialColoredTopTabBarFontSize}" />
		<Setter Property="FontWeight"
				Value="Normal" />
		<Setter Property="UseSystemFocusVisuals"
				Value="True" />
		<Setter Property="HorizontalContentAlignment"
				Value="Center" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="utu:TabBarItem">
					<Grid x:Name="LayoutRoot"
						  Background="{TemplateBinding Background}"
						  BorderBrush="{TemplateBinding BorderBrush}"
						  BorderThickness="{TemplateBinding BorderThickness}"
						  Control.IsTemplateFocusTarget="True">

						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal" />
								<VisualState x:Name="PointerOver">
									<VisualState.Setters>
										<Setter Target="LayoutRoot.Background"
												Value="{ThemeResource MaterialColoredTopTabBarItemBackgroundPointerOver}" />
										<Setter Target="PointerRectangle.Fill"
												Value="{ThemeResource MaterialColoredTopTabBarItemBackgroundPointerOver}" />
										<Setter Target="Icon.Foreground"
												Value="{ThemeResource MaterialColoredTopTabBarItemForegroundPointerOver}" />
										<Setter Target="ContentPresenter.Foreground"
												Value="{ThemeResource MaterialColoredTopTabBarItemForegroundPointerOver}" />
									</VisualState.Setters>
								</VisualState>
								<VisualState x:Name="Pressed">
									<VisualState.Setters>
										<Setter Target="LayoutRoot.Background"
												Value="{ThemeResource MaterialColoredTopTabBarItemBackgroundPressed}" />
										<Setter Target="PointerRectangle.Fill"
												Value="{ThemeResource MaterialColoredTopTabBarItemBackgroundPressed}" />
										<Setter Target="Icon.Foreground"
												Value="{ThemeResource MaterialColoredTopTabBarItemForegroundPressed}" />
										<Setter Target="ContentPresenter.Foreground"
												Value="{ThemeResource MaterialColoredTopTabBarItemForegroundPressed}" />
									</VisualState.Setters>
								</VisualState>
								<VisualState x:Name="Selected">
									<VisualState.Setters>
										<Setter Target="LayoutRoot.Background"
												Value="{ThemeResource MaterialColoredTopTabBarItemBackgroundSelected}" />
										<Setter Target="PointerRectangle.Fill"
												Value="{ThemeResource MaterialColoredTopTabBarItemBackgroundSelected}" />
										<Setter Target="Icon.Foreground"
												Value="{ThemeResource MaterialColoredTopTabBarItemForegroundSelected}" />
										<Setter Target="ContentPresenter.Foreground"
												Value="{ThemeResource MaterialColoredTopTabBarItemForegroundSelected}" />
									</VisualState.Setters>
								</VisualState>
								<VisualState x:Name="PointerOverSelected">
									<VisualState.Setters>
										<Setter Target="LayoutRoot.Background"
												Value="{ThemeResource MaterialColoredTopTabBarItemBackgroundSelectedPointerOver}" />
										<Setter Target="PointerRectangle.Fill"
												Value="{ThemeResource MaterialColoredTopTabBarItemBackgroundSelectedPointerOver}" />
										<Setter Target="Icon.Foreground"
												Value="{ThemeResource MaterialColoredTopTabBarItemForegroundSelectedPointerOver}" />
										<Setter Target="ContentPresenter.Foreground"
												Value="{ThemeResource MaterialColoredTopTabBarItemForegroundSelectedPointerOver}" />
									</VisualState.Setters>
								</VisualState>
								<VisualState x:Name="PressedSelected">
									<VisualState.Setters>
										<Setter Target="LayoutRoot.Background"
												Value="{ThemeResource MaterialColoredTopTabBarItemBackgroundSelectedPressed}" />
										<Setter Target="PointerRectangle.Fill"
												Value="{ThemeResource MaterialColoredTopTabBarItemBackgroundSelectedPressed}" />
										<Setter Target="Icon.Foreground"
												Value="{ThemeResource MaterialColoredTopTabBarItemForegroundSelectedPressed}" />
										<Setter Target="ContentPresenter.Foreground"
												Value="{ThemeResource MaterialColoredTopTabBarItemForegroundSelectedPressed}" />
									</VisualState.Setters>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="FocusStates">
								<VisualState x:Name="Focused">
									<VisualState.Setters>
										<Setter Target="LayoutRoot.Background"
												Value="{ThemeResource MaterialColoredTopTabBarItemBackgroundFocused}" />
										<Setter Target="PointerRectangle.Fill"
												Value="{ThemeResource MaterialColoredTopTabBarItemBackgroundFocused}" />
									</VisualState.Setters>
								</VisualState>
								<VisualState x:Name="PointerFocused" />
								<VisualState x:Name="Unfocused" />
							</VisualStateGroup>
							<VisualStateGroup x:Name="DisabledStates">
								<VisualState x:Name="Enabled" />
								<VisualState x:Name="Disabled">
									<VisualState.Setters>
										<Setter Target="Icon.Foreground"
												Value="{ThemeResource MaterialColoredTopTabBarItemForegroundDisabled}" />
										<Setter Target="ContentPresenter.Foreground"
												Value="{ThemeResource MaterialColoredTopTabBarItemForegroundDisabled}" />
									</VisualState.Setters>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="TabBarIconPositionStates">
								<VisualState x:Name="IconOnTop" />
								<VisualState x:Name="IconOnly">
									<VisualState.Setters>
										<Setter Target="PointerRectangle.Visibility"
												Value="Visible" />
										<Setter Target="ContentPresenter.Visibility"
												Value="Collapsed" />
									</VisualState.Setters>
								</VisualState>
								<VisualState x:Name="ContentOnly">
									<VisualState.Setters>
										<Setter Target="IconBox.Visibility"
												Value="Collapsed" />
										<Setter Target="ContentPresenter.Margin"
												Value="{StaticResource MaterialColoredTopTabBarItemContentOnlyMargin}" />
										<Setter Target="IconRow.Width"
												Value="0" />
										<Setter Target="ContentRow.Width"
												Value="*" />
									</VisualState.Setters>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<um:Ripple x:Name="RippleControl"
										 Feedback="{ThemeResource MaterialOnPrimaryBrush}"
										 FeedbackOpacity="{StaticResource MaterialPressedOpacity}"
										 BorderBrush="{TemplateBinding BorderBrush}"
										 BorderThickness="{TemplateBinding BorderThickness}"
										 CornerRadius="{TemplateBinding CornerRadius}"
										 Padding="{TemplateBinding Padding}"
										 AutomationProperties.AccessibilityView="Raw">
							<um:Ripple.Content>
								<Grid>
									<Rectangle x:Name="PointerRectangle"
											   Fill="Transparent"
											   Visibility="Collapsed" />

									<Grid ColumnSpacing="8"
										  x:Name="ContentGrid">
										<Grid.ColumnDefinitions>
											<ColumnDefinition x:Name="IconRow"
															  Width="*" />
											<ColumnDefinition x:Name="ContentRow"
															  Width="Auto" />
										</Grid.ColumnDefinitions>
										<Viewbox x:Name="IconBox"
												 Height="{StaticResource MaterialColoredTopTabBarItemIconHeight}"
												 Width="{StaticResource MaterialColoredTopTabBarItemIconWidth}">
											<ContentPresenter x:Name="Icon"
															  Foreground="{TemplateBinding Foreground}"
															  Content="{TemplateBinding Icon}" />
										</Viewbox>
										<ContentPresenter x:Name="ContentPresenter"
														  Grid.Column="1"
														  TextWrapping="NoWrap"
														  FontSize="{TemplateBinding FontSize}"
														  Foreground="{TemplateBinding Foreground}"
														  Margin="{StaticResource MaterialColoredTopTabBarItemContentMargin}"
														  ContentTransitions="{TemplateBinding ContentTransitions}"
														  ContentTemplate="{TemplateBinding ContentTemplate}"
														  Content="{Binding Content, RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource MaterialTopTabBarToUpperConverter}}"
														  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
														  ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
														  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
														  AutomationProperties.AccessibilityView="Raw" />
									</Grid>
								</Grid>
							</um:Ripple.Content>
						</um:Ripple>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</not_mobile:Style>

	<!--#endregion-->
	
</ResourceDictionary>
