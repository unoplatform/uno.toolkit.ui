<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
					xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
					xmlns:utu="using:Uno.Toolkit.UI"
					xmlns:um="using:Uno.Material"
					xmlns:toolkit="using:Uno.UI.Toolkit">

	<!--  Card Variables  -->
	<CornerRadius x:Key="MaterialCardCornerRadius">4</CornerRadius>
	<Thickness x:Key="MaterialCardBorderThickness">1</Thickness>
	<x:Double x:Key="MaterialCardElevation">6</x:Double>
	<Thickness x:Key="MaterialCardElevationMargin">6</Thickness>

	<DataTemplate x:Key="DefaultHeaderContentTemplate">
		<TextBlock Text="{Binding}"
				   MaxLines="1"
				   Margin="16,14,16,0"
				   Style="{ThemeResource MaterialHeadline6}" />
	</DataTemplate>

	<DataTemplate x:Key="DefaultSubHeaderContentTemplate">
		<TextBlock Text="{Binding}"
				   MaxLines="2"
				   Margin="16,0,16,14"
				   Style="{ThemeResource MaterialBody2}" />
	</DataTemplate>

	<DataTemplate x:Key="DefaultSupportingContentTemplate">
		<TextBlock Text="{Binding}"
				   Margin="16,0,16,14"
				   Style="{ThemeResource MaterialBody2}" />
	</DataTemplate>

	<DataTemplate x:Key="DefaultAvatarSupportingContentTemplate">
		<TextBlock Text="{Binding}"
				   Margin="16,12,16,14"
				   Style="{ThemeResource MaterialBody2}" />
	</DataTemplate>

	<DataTemplate x:Key="DefaultSmallMediaSupportingContentTemplate">
		<Border BorderThickness="0,1,0,0"
				BorderBrush="{StaticResource MaterialOnSurfaceFocusedBrush}">
			<TextBlock Text="{Binding}"
					   Margin="16,12,16,14"
					   Style="{ThemeResource MaterialBody2}" />
		</Border>
	</DataTemplate>

	<DataTemplate x:Key="DefaultMediaContentTemplate">
		<Image Source="{Binding}"
			   Stretch="Uniform"
			   MaxHeight="194" />
	</DataTemplate>

	<DataTemplate x:Key="DefaultSmallMediaContentTemplate">
		<Image Source="{Binding}"
			   Stretch="Uniform"
			   MaxHeight="94"
			   VerticalAlignment="Top" />
	</DataTemplate>

	<DataTemplate x:Key="DefaultAvatarContentTemplate">
		<Image Source="{Binding}"
			   Stretch="Uniform"
			   MaxHeight="40" />
	</DataTemplate>



	<Style x:Key="MaterialBaseCardStyle"
		   TargetType="utu:Card">
		<Setter Property="HeaderContentTemplate"
				Value="{StaticResource DefaultHeaderContentTemplate}" />
		<Setter Property="SubHeaderContentTemplate"
				Value="{StaticResource DefaultSubHeaderContentTemplate}" />
		<Setter Property="SupportingContentTemplate"
				Value="{StaticResource DefaultSupportingContentTemplate}" />
		<Setter Property="MediaContentTemplate"
				Value="{StaticResource DefaultMediaContentTemplate}" />
	</Style>

	<Style x:Key="MaterialOutlinedCardStyle"
		   TargetType="utu:Card"
		   BasedOn="{StaticResource MaterialBaseCardStyle}">

		<Setter Property="MinHeight"
				Value="72" />
		<Setter Property="MaxWidth"
				Value="344" />
		<Setter Property="Margin"
				Value="{StaticResource MaterialCardElevationMargin}" />
		<Setter Property="Padding"
				Value="16,14" />
		<Setter Property="Background"
				Value="{StaticResource MaterialSurfaceBrush}" />
		<Setter Property="BorderBrush"
				Value="{ThemeResource MaterialOnSurfaceMediumBrush}" />
		<Setter Property="BorderThickness"
				Value="{StaticResource MaterialCardBorderThickness}" />
		<Setter Property="CornerRadius"
				Value="{StaticResource MaterialCardCornerRadius}" />
		<Setter Property="HorizontalAlignment"
				Value="Stretch" />
		<Setter Property="HorizontalContentAlignment"
				Value="Stretch" />
		<Setter Property="VerticalAlignment"
				Value="Stretch" />
		<Setter Property="VerticalContentAlignment"
				Value="Stretch" />


		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="utu:Card">
					<Grid x:Name="GridRoot"
						  MinWidth="{TemplateBinding MinWidth}"
						  MinHeight="{TemplateBinding MinHeight}"
						  MaxWidth="{TemplateBinding MaxWidth}"
						  MaxHeight="{TemplateBinding MaxHeight}"
						  Margin="{TemplateBinding Margin}"
						  Background="{TemplateBinding Background}"
						  BorderBrush="{TemplateBinding BorderBrush}"
						  CornerRadius="{TemplateBinding CornerRadius}"
						  BorderThickness="{TemplateBinding BorderThickness}"
						  HorizontalAlignment="{TemplateBinding HorizontalAlignment}">
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal">
									<VisualState.Setters>
										<Setter Target="HoverOverlay.Opacity"
												Value="0" />
										<Setter Target="FocusedOverlay.Opacity"
												Value="0" />
									</VisualState.Setters>
								</VisualState>
								<VisualState x:Name="PointerOver">
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="HoverOverlay"
														 Storyboard.TargetProperty="Opacity"
														 Duration="{StaticResource MaterialAnimationDuration}"
														 From="0"
														 To="1">
											<DoubleAnimation.EasingFunction>
												<CubicEase EasingMode="EaseIn" />
											</DoubleAnimation.EasingFunction>
										</DoubleAnimation>
									</Storyboard>
								</VisualState>

								<VisualState x:Name="Pressed">
									<Storyboard>

										<DoubleAnimation Storyboard.TargetName="HoverOverlay"
														 Storyboard.TargetProperty="Opacity"
														 Duration="{StaticResource MaterialAnimationDuration}"
														 To="0">
											<DoubleAnimation.EasingFunction>
												<CubicEase EasingMode="EaseIn" />
											</DoubleAnimation.EasingFunction>
										</DoubleAnimation>

										<DoubleAnimation Storyboard.TargetName="FocusedOverlay"
														 Storyboard.TargetProperty="Opacity"
														 Duration="{StaticResource MaterialAnimationDuration}"
														 To="0">
											<DoubleAnimation.EasingFunction>
												<CubicEase EasingMode="EaseIn" />
											</DoubleAnimation.EasingFunction>
										</DoubleAnimation>
									</Storyboard>
								</VisualState>

								<VisualState x:Name="Disabled">
									<VisualState.Setters>
										<Setter Target="HoverOverlay.Opacity"
												Value="0" />
										<Setter Target="FocusedOverlay.Opacity"
												Value="0" />
										<Setter Target="GridRoot.Opacity"
												Value="0.38" />
									</VisualState.Setters>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="FocusStates">
								<VisualState x:Name="Focused">
									<VisualState.Setters>
										<Setter Target="FocusedOverlay.Opacity"
												Value="1" />
									</VisualState.Setters>
								</VisualState>
								<VisualState x:Name="PointerFocused" />
								<VisualState x:Name="Unfocused">
									<VisualState.Setters>
										<Setter Target="FocusedOverlay.Opacity"
												Value="0" />
									</VisualState.Setters>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>

						<Grid.RowDefinitions>
							<RowDefinition Height="Auto" />
							<RowDefinition Height="Auto" />
							<RowDefinition Height="Auto" />
							<RowDefinition Height="Auto" />
						</Grid.RowDefinitions>

						<!--  Border for PointerOver State  -->
						<Border Grid.RowSpan="4"
								x:Name="HoverOverlay"
								Background="{StaticResource MaterialOnSurfaceHoverBrush}"
								Opacity="0" />

						<!--  Border for Focused State  -->
						<Border Grid.RowSpan="4"
								x:Name="FocusedOverlay"
								Background="{StaticResource MaterialOnSurfaceFocusedBrush}"
								Opacity="0" />

						<!--  Media content part  -->
						<ContentPresenter x:Name="MediaContentPresenter"
										  Content="{TemplateBinding MediaContent}"
										  ContentTemplate="{TemplateBinding MediaContentTemplate}"
										  HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
										  VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
										  AutomationProperties.AccessibilityView="Raw"
										  IsHitTestVisible="False"
										  Visibility="{Binding MediaContent, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource MaterialEmptyOrNullToCollapsed}}" />

						<!--  Header part  -->
						<ContentPresenter Grid.Row="1"
										  x:Name="HeaderContentPresenter"
										  Content="{TemplateBinding HeaderContent}"
										  ContentTemplate="{TemplateBinding HeaderContentTemplate}"
										  HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
										  VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
										  AutomationProperties.AccessibilityView="Raw"
										  Visibility="{Binding HeaderContent, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource MaterialEmptyOrNullToCollapsed}}" />

						<!--  SubHeader part  -->
						<ContentPresenter Grid.Row="2"
										  x:Name="SubHeaderContentPresenter"
										  Content="{TemplateBinding SubHeaderContent}"
										  ContentTemplate="{TemplateBinding SubHeaderContentTemplate}"
										  HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
										  VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
										  AutomationProperties.AccessibilityView="Raw"
										  Visibility="{Binding SubHeaderContent, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource MaterialEmptyOrNullToCollapsed}}" />

						<!--  Ripple effect  -->
						<um:Ripple Grid.RowSpan="4"
										 Feedback="{StaticResource MaterialOnSurfaceFocusedBrush}"
										 BorderBrush="{TemplateBinding BorderBrush}"
										 BorderThickness="{TemplateBinding BorderThickness}"
										 CornerRadius="{StaticResource MaterialCardCornerRadius}"
										 Padding="{TemplateBinding Padding}"
										 AutomationProperties.AccessibilityView="Raw" />

						<!--  Supporting Content part  -->
						<ContentPresenter Grid.Row="3"
										  x:Name="SupportingContentPresenter"
										  Content="{TemplateBinding SupportingContent}"
										  ContentTemplate="{TemplateBinding SupportingContentTemplate}"
										  HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
										  VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
										  AutomationProperties.AccessibilityView="Raw"
										  Visibility="{Binding SupportingContent, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource MaterialEmptyOrNullToCollapsed}}" />

						<!--  Icons section part  -->
						<ContentPresenter Grid.Row="3"
										  x:Name="IconsContentPresenter"
										  Content="{TemplateBinding IconsContent}"
										  ContentTemplate="{TemplateBinding IconsContentTemplate}"
										  HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
										  VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
										  AutomationProperties.AccessibilityView="Raw"
										  Visibility="{Binding IconsContentTemplate, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource MaterialNullToCollapsedConverter}}" />
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="MaterialElevatedCardStyle"
		   BasedOn="{StaticResource MaterialBaseCardStyle}"
		   TargetType="utu:Card">

		<Setter Property="MinHeight"
				Value="72" />
		<Setter Property="MaxWidth"
				Value="344" />
		<Setter Property="Padding"
				Value="16,14" />
		<Setter Property="Background"
				Value="{StaticResource MaterialSurfaceBrush}" />
		<Setter Property="CornerRadius"
				Value="{StaticResource MaterialCardCornerRadius}" />
		<Setter Property="HorizontalAlignment"
				Value="Stretch" />
		<Setter Property="HorizontalContentAlignment"
				Value="Stretch" />
		<Setter Property="VerticalAlignment"
				Value="Stretch" />
		<Setter Property="VerticalContentAlignment"
				Value="Stretch" />
		<Setter Property="Margin"
				Value="{StaticResource MaterialCardElevationMargin}" />
		<Setter Property="Elevation"
				Value="{StaticResource MaterialCardElevation}" />

		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="utu:Card">
					<!--  Elevated View  -->
					<toolkit:ElevatedView x:Name="ElevatedRoot"
										  MinWidth="{TemplateBinding MinWidth}"
										  MinHeight="{TemplateBinding MinHeight}"
										  MaxWidth="{TemplateBinding MaxWidth}"
										  MaxHeight="{TemplateBinding MaxHeight}"
										  Margin="{TemplateBinding Margin}"
										  Background="{TemplateBinding Background}"
										  HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
										  VerticalAlignment="{TemplateBinding VerticalAlignment}"
										  CornerRadius="{TemplateBinding CornerRadius}"
										  Elevation="{TemplateBinding Elevation}"
										  ShadowColor="{TemplateBinding ShadowColor}">
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal">
									<VisualState.Setters>
										<Setter Target="HoverOverlay.Opacity"
												Value="0" />
										<Setter Target="FocusedOverlay.Opacity"
												Value="0" />
									</VisualState.Setters>
								</VisualState>
								<VisualState x:Name="PointerOver">
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="HoverOverlay"
														 Storyboard.TargetProperty="Opacity"
														 Duration="{StaticResource MaterialAnimationDuration}"
														 From="0"
														 To="1">
											<DoubleAnimation.EasingFunction>
												<CubicEase EasingMode="EaseIn" />
											</DoubleAnimation.EasingFunction>
										</DoubleAnimation>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Pressed">
									<Storyboard>

										<DoubleAnimation Storyboard.TargetName="HoverOverlay"
														 Storyboard.TargetProperty="Opacity"
														 Duration="{StaticResource MaterialAnimationDuration}"
														 To="0">
											<DoubleAnimation.EasingFunction>
												<CubicEase EasingMode="EaseIn" />
											</DoubleAnimation.EasingFunction>
										</DoubleAnimation>

										<DoubleAnimation Storyboard.TargetName="FocusedOverlay"
														 Storyboard.TargetProperty="Opacity"
														 Duration="{StaticResource MaterialAnimationDuration}"
														 To="0">
											<DoubleAnimation.EasingFunction>
												<CubicEase EasingMode="EaseIn" />
											</DoubleAnimation.EasingFunction>
										</DoubleAnimation>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Disabled">
									<VisualState.Setters>
										<Setter Target="HoverOverlay.Opacity"
												Value="0" />
										<Setter Target="FocusedOverlay.Opacity"
												Value="0" />
										<Setter Target="GridRoot.Opacity"
												Value="0.38" />
									</VisualState.Setters>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="FocusStates">
								<VisualState x:Name="Focused">
									<VisualState.Setters>
										<Setter Target="FocusedOverlay.Opacity"
												Value="1" />
									</VisualState.Setters>
								</VisualState>
								<VisualState x:Name="PointerFocused" />
								<VisualState x:Name="Unfocused">
									<VisualState.Setters>
										<Setter Target="FocusedOverlay.Opacity"
												Value="0" />
									</VisualState.Setters>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>

						<Grid x:Name="GridRoot"
							  CornerRadius="{TemplateBinding CornerRadius}">
							<Grid.RowDefinitions>
								<RowDefinition Height="Auto" />
								<RowDefinition Height="Auto" />
								<RowDefinition Height="Auto" />
								<RowDefinition Height="Auto" />
							</Grid.RowDefinitions>

							<!--  Border for PointerOver State  -->
							<Border Grid.RowSpan="4"
									x:Name="HoverOverlay"
									Background="{StaticResource MaterialOnSurfaceHoverBrush}"
									Opacity="0" />

							<!--  Border for Focused State  -->
							<Border Grid.RowSpan="4"
									x:Name="FocusedOverlay"
									Background="{StaticResource MaterialOnSurfaceFocusedBrush}"
									Opacity="0" />

							<!--  Media content part  -->
							<ContentPresenter x:Name="MediaContentPresenter"
											  Content="{TemplateBinding MediaContent}"
											  ContentTemplate="{TemplateBinding MediaContentTemplate}"
											  HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
											  VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
											  AutomationProperties.AccessibilityView="Raw"
											  IsHitTestVisible="False"
											  Visibility="{Binding MediaContent, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource MaterialEmptyOrNullToCollapsed}}" />

							<!--  Header part  -->
							<ContentPresenter Grid.Row="1"
											  x:Name="HeaderContentPresenter"
											  Content="{TemplateBinding HeaderContent}"
											  ContentTemplate="{TemplateBinding HeaderContentTemplate}"
											  HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
											  VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
											  AutomationProperties.AccessibilityView="Raw"
											  Visibility="{Binding HeaderContent, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource MaterialEmptyOrNullToCollapsed}}" />

							<!--  SubHeader part  -->
							<ContentPresenter Grid.Row="2"
											  x:Name="SubHeaderContentPresenter"
											  Content="{TemplateBinding SubHeaderContent}"
											  ContentTemplate="{TemplateBinding SubHeaderContentTemplate}"
											  HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
											  VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
											  AutomationProperties.AccessibilityView="Raw"
											  Visibility="{Binding SubHeaderContent, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource MaterialEmptyOrNullToCollapsed}}" />

							<!--  Ripple effect  -->
							<um:Ripple Grid.RowSpan="4"
											 Feedback="{StaticResource MaterialOnSurfaceFocusedBrush}"
											 CornerRadius="{StaticResource MaterialCardCornerRadius}"
											 Padding="{TemplateBinding Padding}"
											 AutomationProperties.AccessibilityView="Raw" />

							<!--  Supporting Content part  -->
							<ContentPresenter Grid.Row="3"
											  x:Name="SupportingContentPresenter"
											  Content="{TemplateBinding SupportingContent}"
											  ContentTemplate="{TemplateBinding SupportingContentTemplate}"
											  HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
											  VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
											  AutomationProperties.AccessibilityView="Raw"
											  Visibility="{Binding SupportingContent, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource MaterialEmptyOrNullToCollapsed}}" />

							<!--  Icons section part  -->
							<ContentPresenter Grid.Row="3"
											  x:Name="IconsContentPresenter"
											  Content="{TemplateBinding IconsContent}"
											  ContentTemplate="{TemplateBinding IconsContentTemplate}"
											  HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
											  VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
											  AutomationProperties.AccessibilityView="Raw"
											  Visibility="{Binding IconsContentTemplate, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource MaterialNullToCollapsedConverter}}" />
						</Grid>
					</toolkit:ElevatedView>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="MaterialAvatarOutlinedCardStyle"
		   BasedOn="{StaticResource MaterialBaseCardStyle}"
		   TargetType="utu:Card">
		<Setter Property="MinHeight"
				Value="72" />
		<Setter Property="MaxWidth"
				Value="344" />
		<Setter Property="Margin"
				Value="{StaticResource MaterialCardElevationMargin}" />
		<Setter Property="Padding"
				Value="16,14" />
		<Setter Property="Background"
				Value="{StaticResource MaterialSurfaceBrush}" />
		<Setter Property="BorderBrush"
				Value="{ThemeResource MaterialOnSurfaceMediumBrush}" />
		<Setter Property="BorderThickness"
				Value="{StaticResource MaterialCardBorderThickness}" />
		<Setter Property="CornerRadius"
				Value="{StaticResource MaterialCardCornerRadius}" />
		<Setter Property="HorizontalAlignment"
				Value="Stretch" />
		<Setter Property="HorizontalContentAlignment"
				Value="Stretch" />
		<Setter Property="SupportingContentTemplate"
				Value="{StaticResource DefaultAvatarSupportingContentTemplate}" />
		<Setter Property="AvatarContentTemplate"
				Value="{StaticResource DefaultAvatarContentTemplate}" />

		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="utu:Card">
					<Grid x:Name="GridRoot"
						  MinWidth="{TemplateBinding MinWidth}"
						  MinHeight="{TemplateBinding MinHeight}"
						  MaxWidth="{TemplateBinding MaxWidth}"
						  MaxHeight="{TemplateBinding MaxHeight}"
						  Margin="{TemplateBinding Margin}"
						  Background="{TemplateBinding Background}"
						  BorderBrush="{TemplateBinding BorderBrush}"
						  CornerRadius="{TemplateBinding CornerRadius}"
						  BorderThickness="{TemplateBinding BorderThickness}"
						  HorizontalAlignment="{TemplateBinding HorizontalAlignment}">
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal">
									<VisualState.Setters>
										<Setter Target="HoverOverlay.Opacity"
												Value="0" />
										<Setter Target="FocusedOverlay.Opacity"
												Value="0" />
									</VisualState.Setters>
								</VisualState>
								<VisualState x:Name="PointerOver">
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="HoverOverlay"
														 Storyboard.TargetProperty="Opacity"
														 Duration="{StaticResource MaterialAnimationDuration}"
														 From="0"
														 To="1">
											<DoubleAnimation.EasingFunction>
												<CubicEase EasingMode="EaseIn" />
											</DoubleAnimation.EasingFunction>
										</DoubleAnimation>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Pressed">
									<Storyboard>

										<DoubleAnimation Storyboard.TargetName="HoverOverlay"
														 Storyboard.TargetProperty="Opacity"
														 Duration="{StaticResource MaterialAnimationDuration}"
														 To="0">
											<DoubleAnimation.EasingFunction>
												<CubicEase EasingMode="EaseIn" />
											</DoubleAnimation.EasingFunction>
										</DoubleAnimation>

										<DoubleAnimation Storyboard.TargetName="FocusedOverlay"
														 Storyboard.TargetProperty="Opacity"
														 Duration="{StaticResource MaterialAnimationDuration}"
														 To="0">
											<DoubleAnimation.EasingFunction>
												<CubicEase EasingMode="EaseIn" />
											</DoubleAnimation.EasingFunction>
										</DoubleAnimation>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Disabled">
									<VisualState.Setters>
										<Setter Target="HoverOverlay.Opacity"
												Value="0" />
										<Setter Target="FocusedOverlay.Opacity"
												Value="0" />
										<Setter Target="GridRoot.Opacity"
												Value="0.38" />
									</VisualState.Setters>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="FocusStates">
								<VisualState x:Name="Focused">
									<VisualState.Setters>
										<Setter Target="FocusedOverlay.Opacity"
												Value="1" />
									</VisualState.Setters>
								</VisualState>
								<VisualState x:Name="PointerFocused" />
								<VisualState x:Name="Unfocused">
									<VisualState.Setters>
										<Setter Target="FocusedOverlay.Opacity"
												Value="0" />
									</VisualState.Setters>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>

						<Grid.RowDefinitions>
							<RowDefinition Height="Auto" />
							<RowDefinition Height="Auto" />
							<RowDefinition Height="Auto" />
						</Grid.RowDefinitions>
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="Auto" />
							<ColumnDefinition Width="*" />
							<ColumnDefinition Width="Auto" />
						</Grid.ColumnDefinitions>

						<!--  Border for PointedOver state  -->
						<Border Grid.RowSpan="3"
								Grid.ColumnSpan="3"
								x:Name="HoverOverlay"
								Background="{StaticResource MaterialOnSurfaceHoverBrush}"
								Opacity="0" />

						<!--  Border for Focus state  -->
						<Border Grid.RowSpan="3"
								Grid.ColumnSpan="3"
								x:Name="FocusedOverlay"
								Background="{StaticResource MaterialOnSurfaceFocusedBrush}"
								Opacity="0" />

						<!--  Avatart part  -->
						<ContentPresenter x:Name="AvatarContentPresenter"
										  Content="{TemplateBinding AvatarContent}"
										  ContentTemplate="{TemplateBinding AvatarContentTemplate}"
										  HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
										  VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
										  AutomationProperties.AccessibilityView="Raw"
										  IsHitTestVisible="False"
										  Margin="16,0,0,0"
										  Visibility="{Binding AvatarContent, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource MaterialEmptyOrNullToCollapsed}}" />

						<StackPanel Grid.Column="1"
									IsHitTestVisible="False">
							<!--  Header part  -->
							<ContentPresenter x:Name="HeaderContentPresenter"
											  Content="{TemplateBinding HeaderContent}"
											  ContentTemplate="{TemplateBinding HeaderContentTemplate}"
											  HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
											  VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
											  AutomationProperties.AccessibilityView="Raw"
											  Visibility="{Binding HeaderContent, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource MaterialEmptyOrNullToCollapsed}}" />

							<!--  SubHeader part  -->
							<ContentPresenter x:Name="SubHeaderContentPresenter"
											  Content="{TemplateBinding SubHeaderContent}"
											  ContentTemplate="{TemplateBinding SubHeaderContentTemplate}"
											  HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
											  VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
											  AutomationProperties.AccessibilityView="Raw"
											  Visibility="{Binding SubHeaderContent, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource MaterialEmptyOrNullToCollapsed}}" />
						</StackPanel>

						<!--  Ripple effect  -->
						<um:Ripple Grid.RowSpan="3"
										 Grid.ColumnSpan="3"
										 Feedback="{StaticResource MaterialOnSurfaceFocusedBrush}"
										 BorderBrush="{TemplateBinding BorderBrush}"
										 BorderThickness="{TemplateBinding BorderThickness}"
										 CornerRadius="{StaticResource MaterialCardCornerRadius}"
										 Padding="{TemplateBinding Padding}"
										 AutomationProperties.AccessibilityView="Raw" />

						<!--  Icons section part  -->
						<ContentPresenter Grid.Column="2"
										  x:Name="IconsContentPresenter"
										  Content="{TemplateBinding IconsContent}"
										  ContentTemplate="{TemplateBinding IconsContentTemplate}"
										  HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
										  VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
										  AutomationProperties.AccessibilityView="Raw"
										  Visibility="{Binding IconsContentTemplate, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource MaterialEmptyOrNullToCollapsed}}" />

						<!--  Media content part  -->
						<ContentPresenter Grid.Row="1"
										  Grid.ColumnSpan="3"
										  x:Name="MediaContentPresenter"
										  Content="{TemplateBinding MediaContent}"
										  ContentTemplate="{TemplateBinding MediaContentTemplate}"
										  HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
										  VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
										  AutomationProperties.AccessibilityView="Raw"
										  IsHitTestVisible="False"
										  Visibility="{Binding MediaContent, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource MaterialEmptyOrNullToCollapsed}}" />

						<!--  Supporting Content part  -->
						<ContentPresenter Grid.Row="2"
										  Grid.ColumnSpan="3"
										  x:Name="SupportingContentPresenter"
										  Content="{TemplateBinding SupportingContent}"
										  ContentTemplate="{TemplateBinding SupportingContentTemplate}"
										  HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
										  VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
										  AutomationProperties.AccessibilityView="Raw"
										  Visibility="{Binding SupportingContent, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource MaterialEmptyOrNullToCollapsed}}" />
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="MaterialAvatarElevatedCardStyle"
		   BasedOn="{StaticResource MaterialBaseCardStyle}"
		   TargetType="utu:Card">
		<Setter Property="MinHeight"
				Value="72" />
		<Setter Property="MaxWidth"
				Value="344" />
		<Setter Property="Padding"
				Value="16,14" />
		<Setter Property="Background"
				Value="{StaticResource MaterialSurfaceBrush}" />
		<Setter Property="CornerRadius"
				Value="{StaticResource MaterialCardCornerRadius}" />
		<Setter Property="HorizontalAlignment"
				Value="Stretch" />
		<Setter Property="HorizontalContentAlignment"
				Value="Stretch" />
		<Setter Property="Margin"
				Value="{StaticResource MaterialCardElevationMargin}" />
		<Setter Property="Elevation"
				Value="{StaticResource MaterialCardElevation}" />
		<Setter Property="SupportingContentTemplate"
				Value="{StaticResource DefaultAvatarSupportingContentTemplate}" />
		<Setter Property="AvatarContentTemplate"
				Value="{StaticResource DefaultAvatarContentTemplate}" />

		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="utu:Card">
					<!--  Elevated View  -->
					<toolkit:ElevatedView x:Name="ElevatedRoot"
										  MinWidth="{TemplateBinding MinWidth}"
										  MinHeight="{TemplateBinding MinHeight}"
										  MaxWidth="{TemplateBinding MaxWidth}"
										  MaxHeight="{TemplateBinding MaxHeight}"
										  Margin="{TemplateBinding Margin}"
										  Background="{TemplateBinding Background}"
										  BorderBrush="{TemplateBinding BorderBrush}"
										  HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
										  VerticalAlignment="{TemplateBinding VerticalAlignment}"
										  CornerRadius="{TemplateBinding CornerRadius}"
										  Elevation="{TemplateBinding Elevation}"
										  ShadowColor="{TemplateBinding ShadowColor}">
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal">
									<VisualState.Setters>
										<Setter Target="HoverOverlay.Opacity"
												Value="0" />
										<Setter Target="FocusedOverlay.Opacity"
												Value="0" />
									</VisualState.Setters>
								</VisualState>
								<VisualState x:Name="PointerOver">
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="HoverOverlay"
														 Storyboard.TargetProperty="Opacity"
														 Duration="{StaticResource MaterialAnimationDuration}"
														 From="0"
														 To="1">
											<DoubleAnimation.EasingFunction>
												<CubicEase EasingMode="EaseIn" />
											</DoubleAnimation.EasingFunction>
										</DoubleAnimation>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Pressed">
									<Storyboard>

										<DoubleAnimation Storyboard.TargetName="HoverOverlay"
														 Storyboard.TargetProperty="Opacity"
														 Duration="{StaticResource MaterialAnimationDuration}"
														 To="0">
											<DoubleAnimation.EasingFunction>
												<CubicEase EasingMode="EaseIn" />
											</DoubleAnimation.EasingFunction>
										</DoubleAnimation>

										<DoubleAnimation Storyboard.TargetName="FocusedOverlay"
														 Storyboard.TargetProperty="Opacity"
														 Duration="{StaticResource MaterialAnimationDuration}"
														 To="0">
											<DoubleAnimation.EasingFunction>
												<CubicEase EasingMode="EaseIn" />
											</DoubleAnimation.EasingFunction>
										</DoubleAnimation>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Disabled">
									<VisualState.Setters>
										<Setter Target="HoverOverlay.Opacity"
												Value="0" />
										<Setter Target="FocusedOverlay.Opacity"
												Value="0" />
										<Setter Target="GridRoot.Opacity"
												Value="0.38" />
									</VisualState.Setters>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="FocusStates">
								<VisualState x:Name="Focused">
									<VisualState.Setters>
										<Setter Target="FocusedOverlay.Opacity"
												Value="1" />
									</VisualState.Setters>
								</VisualState>
								<VisualState x:Name="PointerFocused" />
								<VisualState x:Name="Unfocused">
									<VisualState.Setters>
										<Setter Target="FocusedOverlay.Opacity"
												Value="0" />
									</VisualState.Setters>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>

						<Grid x:Name="GridRoot"
							  CornerRadius="{TemplateBinding CornerRadius}">
							<Grid.RowDefinitions>
								<RowDefinition Height="Auto" />
								<RowDefinition Height="Auto" />
								<RowDefinition Height="Auto" />
							</Grid.RowDefinitions>
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="Auto" />
								<ColumnDefinition Width="*" />
								<ColumnDefinition Width="Auto" />
							</Grid.ColumnDefinitions>

							<!--  Border for PointedOver state  -->
							<Border Grid.RowSpan="3"
									Grid.ColumnSpan="3"
									x:Name="HoverOverlay"
									Background="{StaticResource MaterialOnSurfaceHoverBrush}"
									Opacity="0" />

							<!--  Border for Focus state  -->
							<Border Grid.RowSpan="3"
									Grid.ColumnSpan="3"
									x:Name="FocusedOverlay"
									Background="{StaticResource MaterialOnSurfaceFocusedBrush}"
									Opacity="0" />

							<!--  Avatart part  -->
							<ContentPresenter x:Name="AvatarContentPresenter"
											  Content="{TemplateBinding AvatarContent}"
											  ContentTemplate="{TemplateBinding AvatarContentTemplate}"
											  HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
											  VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
											  AutomationProperties.AccessibilityView="Raw"
											  IsHitTestVisible="False"
											  Margin="16,0,0,0"
											  Visibility="{Binding AvatarContent, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource MaterialEmptyOrNullToCollapsed}}" />

							<StackPanel Grid.Column="1"
										IsHitTestVisible="False">
								<!--  Header part  -->
								<ContentPresenter x:Name="HeaderContentPresenter"
												  Content="{TemplateBinding HeaderContent}"
												  ContentTemplate="{TemplateBinding HeaderContentTemplate}"
												  HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
												  VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
												  AutomationProperties.AccessibilityView="Raw"
												  Visibility="{Binding HeaderContent, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource MaterialEmptyOrNullToCollapsed}}" />

								<!--  SubHeader part  -->
								<ContentPresenter x:Name="SubHeaderContentPresenter"
												  Content="{TemplateBinding SubHeaderContent}"
												  ContentTemplate="{TemplateBinding SubHeaderContentTemplate}"
												  HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
												  VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
												  AutomationProperties.AccessibilityView="Raw"
												  Visibility="{Binding SubHeaderContent, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource MaterialEmptyOrNullToCollapsed}}" />
							</StackPanel>
							<!--  Ripple effect  -->
							<um:Ripple Grid.RowSpan="3"
											 Grid.ColumnSpan="3"
											 Feedback="{StaticResource MaterialOnSurfaceFocusedBrush}"
											 CornerRadius="{StaticResource MaterialCardCornerRadius}"
											 Padding="{TemplateBinding Padding}"
											 AutomationProperties.AccessibilityView="Raw" />

							<!--  Icons section part  -->
							<ContentPresenter Grid.Column="2"
											  x:Name="IconsContentPresenter"
											  Content="{TemplateBinding IconsContent}"
											  ContentTemplate="{TemplateBinding IconsContentTemplate}"
											  HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
											  VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
											  AutomationProperties.AccessibilityView="Raw"
											  Visibility="{Binding IconsContentTemplate, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource MaterialNullToCollapsedConverter}}" />

							<!--  Media content part  -->
							<ContentPresenter Grid.Row="1"
											  Grid.ColumnSpan="3"
											  x:Name="MediaContentPresenter"
											  Content="{TemplateBinding MediaContent}"
											  ContentTemplate="{TemplateBinding MediaContentTemplate}"
											  HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
											  VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
											  AutomationProperties.AccessibilityView="Raw"
											  IsHitTestVisible="False"
											  Visibility="{Binding MediaContent, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource MaterialEmptyOrNullToCollapsed}}" />

							<!--  Supporting Content part  -->
							<ContentPresenter Grid.Row="2"
											  Grid.ColumnSpan="3"
											  x:Name="SupportingContentPresenter"
											  Content="{TemplateBinding SupportingContent}"
											  ContentTemplate="{TemplateBinding SupportingContentTemplate}"
											  HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
											  VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
											  AutomationProperties.AccessibilityView="Raw"
											  Visibility="{Binding SupportingContent, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource MaterialEmptyOrNullToCollapsed}}" />
						</Grid>
					</toolkit:ElevatedView>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="MaterialSmallMediaOutlinedCardStyle"
		   BasedOn="{StaticResource MaterialBaseCardStyle}"
		   TargetType="utu:Card">

		<Setter Property="MinHeight"
				Value="72" />
		<Setter Property="MaxWidth"
				Value="344" />
		<Setter Property="Margin"
				Value="{StaticResource MaterialCardElevationMargin}" />
		<Setter Property="Padding"
				Value="0" />
		<Setter Property="Background"
				Value="{StaticResource MaterialSurfaceBrush}" />
		<Setter Property="BorderBrush"
				Value="{ThemeResource MaterialOnSurfaceMediumBrush}" />
		<Setter Property="BorderThickness"
				Value="{StaticResource MaterialCardBorderThickness}" />
		<Setter Property="CornerRadius"
				Value="{StaticResource MaterialCardCornerRadius}" />
		<Setter Property="HorizontalAlignment"
				Value="Stretch" />
		<Setter Property="HorizontalContentAlignment"
				Value="Stretch" />
		<Setter Property="VerticalAlignment"
				Value="Stretch" />
		<Setter Property="VerticalContentAlignment"
				Value="Stretch" />
		<Setter Property="MediaContentTemplate"
				Value="{StaticResource DefaultSmallMediaContentTemplate}" />
		<Setter Property="SupportingContentTemplate"
				Value="{StaticResource DefaultSmallMediaSupportingContentTemplate}" />

		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="utu:Card">
					<Grid x:Name="GridRoot"
						  MinWidth="{TemplateBinding MinWidth}"
						  MinHeight="{TemplateBinding MinHeight}"
						  MaxWidth="{TemplateBinding MaxWidth}"
						  MaxHeight="{TemplateBinding MaxHeight}"
						  Margin="{TemplateBinding Margin}"
						  Background="{TemplateBinding Background}"
						  BorderBrush="{TemplateBinding BorderBrush}"
						  CornerRadius="{TemplateBinding CornerRadius}"
						  BorderThickness="{TemplateBinding BorderThickness}"
						  HorizontalAlignment="{TemplateBinding HorizontalAlignment}">
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal">
									<VisualState.Setters>
										<Setter Target="HoverOverlay.Opacity"
												Value="0" />
										<Setter Target="FocusedOverlay.Opacity"
												Value="0" />
									</VisualState.Setters>
								</VisualState>
								<VisualState x:Name="PointerOver">
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="HoverOverlay"
														 Storyboard.TargetProperty="Opacity"
														 Duration="{StaticResource MaterialAnimationDuration}"
														 From="0"
														 To="1">
											<DoubleAnimation.EasingFunction>
												<CubicEase EasingMode="EaseIn" />
											</DoubleAnimation.EasingFunction>
										</DoubleAnimation>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Pressed">
									<Storyboard>

										<DoubleAnimation Storyboard.TargetName="HoverOverlay"
														 Storyboard.TargetProperty="Opacity"
														 Duration="{StaticResource MaterialAnimationDuration}"
														 To="0">
											<DoubleAnimation.EasingFunction>
												<CubicEase EasingMode="EaseIn" />
											</DoubleAnimation.EasingFunction>
										</DoubleAnimation>

										<DoubleAnimation Storyboard.TargetName="FocusedOverlay"
														 Storyboard.TargetProperty="Opacity"
														 Duration="{StaticResource MaterialAnimationDuration}"
														 To="0">
											<DoubleAnimation.EasingFunction>
												<CubicEase EasingMode="EaseIn" />
											</DoubleAnimation.EasingFunction>
										</DoubleAnimation>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Disabled">
									<VisualState.Setters>
										<Setter Target="HoverOverlay.Opacity"
												Value="0" />
										<Setter Target="FocusedOverlay.Opacity"
												Value="0" />
										<Setter Target="GridRoot.Opacity"
												Value="0.38" />
									</VisualState.Setters>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="FocusStates">
								<VisualState x:Name="Focused">
									<VisualState.Setters>
										<Setter Target="FocusedOverlay.Opacity"
												Value="1" />
									</VisualState.Setters>
								</VisualState>
								<VisualState x:Name="PointerFocused" />
								<VisualState x:Name="Unfocused">
									<VisualState.Setters>
										<Setter Target="FocusedOverlay.Opacity"
												Value="0" />
									</VisualState.Setters>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>

						<Grid.RowDefinitions>
							<RowDefinition Height="Auto" />
							<RowDefinition Height="Auto" />
							<RowDefinition Height="Auto" />
						</Grid.RowDefinitions>
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="Auto" />
							<ColumnDefinition Width="*" />
							<ColumnDefinition Width="Auto" />
						</Grid.ColumnDefinitions>

						<!--  Border for PointerOver State  -->
						<Border Grid.RowSpan="3"
								Grid.ColumnSpan="3"
								x:Name="HoverOverlay"
								Background="{StaticResource MaterialOnSurfaceHoverBrush}"
								Opacity="0" />

						<!--  Border for Focused State  -->
						<Border Grid.RowSpan="3"
								Grid.ColumnSpan="3"
								x:Name="FocusedOverlay"
								Background="{StaticResource MaterialOnSurfaceFocusedBrush}"
								Opacity="0" />

						<!--  Media content part  -->
						<ContentPresenter x:Name="MediaContentPresenter"
										  Content="{TemplateBinding MediaContent}"
										  ContentTemplate="{TemplateBinding MediaContentTemplate}"
										  HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
										  VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
										  AutomationProperties.AccessibilityView="Raw"
										  IsHitTestVisible="False"
										  Visibility="{Binding MediaContent, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource MaterialEmptyOrNullToCollapsed}}" />

						<StackPanel Grid.Column="1">
							<!--  Header part  -->
							<ContentPresenter x:Name="HeaderContentPresenter"
											  Content="{TemplateBinding HeaderContent}"
											  ContentTemplate="{TemplateBinding HeaderContentTemplate}"
											  HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
											  VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
											  AutomationProperties.AccessibilityView="Raw"
											  Visibility="{Binding HeaderContent, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource MaterialEmptyOrNullToCollapsed}}" />

							<!--  SubHeader part  -->
							<ContentPresenter x:Name="SubHeaderContentPresenter"
											  Content="{TemplateBinding SubHeaderContent}"
											  ContentTemplate="{TemplateBinding SubHeaderContentTemplate}"
											  HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
											  VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
											  AutomationProperties.AccessibilityView="Raw"
											  Visibility="{Binding SubHeaderContent, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource MaterialEmptyOrNullToCollapsed}}" />
						</StackPanel>

						<!--  Ripple effect  -->
						<um:Ripple Grid.RowSpan="3"
										 Grid.ColumnSpan="3"
										 Feedback="{StaticResource MaterialOnSurfaceFocusedBrush}"
										 BorderBrush="{TemplateBinding BorderBrush}"
										 BorderThickness="{TemplateBinding BorderThickness}"
										 CornerRadius="{StaticResource MaterialCardCornerRadius}"
										 Padding="{TemplateBinding Padding}"
										 AutomationProperties.AccessibilityView="Raw" />

						<!--  Supporting Content part  -->
						<ContentPresenter Grid.Row="1"
										  Grid.ColumnSpan="3"
										  x:Name="SupportingContentPresenter"
										  Content="{TemplateBinding SupportingContent}"
										  ContentTemplate="{TemplateBinding SupportingContentTemplate}"
										  HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
										  VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
										  AutomationProperties.AccessibilityView="Raw"
										  Visibility="{Binding SupportingContent, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource MaterialEmptyOrNullToCollapsed}}" />

						<!--  Icons section part  -->
						<ContentPresenter Grid.Row="2"
										  Grid.ColumnSpan="3"
										  x:Name="IconsContentPresenter"
										  Content="{TemplateBinding IconsContent}"
										  ContentTemplate="{TemplateBinding IconsContentTemplate}"
										  HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
										  VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
										  AutomationProperties.AccessibilityView="Raw"
										  Visibility="{Binding IconsContentTemplate, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource MaterialNullToCollapsedConverter}}" />
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="MaterialSmallMediaElevatedCardStyle"
		   BasedOn="{StaticResource MaterialBaseCardStyle}"
		   TargetType="utu:Card">

		<Setter Property="MinHeight"
				Value="72" />
		<Setter Property="MaxWidth"
				Value="344" />
		<Setter Property="Padding"
				Value="0" />
		<Setter Property="Background"
				Value="{StaticResource MaterialSurfaceBrush}" />
		<Setter Property="CornerRadius"
				Value="{StaticResource MaterialCardCornerRadius}" />
		<Setter Property="HorizontalAlignment"
				Value="Stretch" />
		<Setter Property="HorizontalContentAlignment"
				Value="Stretch" />
		<Setter Property="VerticalAlignment"
				Value="Stretch" />
		<Setter Property="VerticalContentAlignment"
				Value="Stretch" />
		<Setter Property="Margin"
				Value="{StaticResource MaterialCardElevationMargin}" />
		<Setter Property="Elevation"
				Value="{StaticResource MaterialCardElevation}" />
		<Setter Property="MediaContentTemplate"
				Value="{StaticResource DefaultSmallMediaContentTemplate}" />
		<Setter Property="SupportingContentTemplate"
				Value="{StaticResource DefaultSmallMediaSupportingContentTemplate}" />

		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="utu:Card">
					<!--  Elevated View  -->
					<toolkit:ElevatedView x:Name="ElevatedRoot"
										  MinWidth="{TemplateBinding MinWidth}"
										  MinHeight="{TemplateBinding MinHeight}"
										  MaxWidth="{TemplateBinding MaxWidth}"
										  MaxHeight="{TemplateBinding MaxHeight}"
										  Margin="{TemplateBinding Margin}"
										  Background="{TemplateBinding Background}"
										  BorderBrush="{TemplateBinding BorderBrush}"
										  HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
										  VerticalAlignment="{TemplateBinding VerticalAlignment}"
										  CornerRadius="{TemplateBinding CornerRadius}"
										  Elevation="{TemplateBinding Elevation}"
										  ShadowColor="{TemplateBinding ShadowColor}">
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal">
									<VisualState.Setters>
										<Setter Target="HoverOverlay.Opacity"
												Value="0" />
										<Setter Target="FocusedOverlay.Opacity"
												Value="0" />
									</VisualState.Setters>
								</VisualState>
								<VisualState x:Name="PointerOver">
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="HoverOverlay"
														 Storyboard.TargetProperty="Opacity"
														 Duration="{StaticResource MaterialAnimationDuration}"
														 From="0"
														 To="1">
											<DoubleAnimation.EasingFunction>
												<CubicEase EasingMode="EaseIn" />
											</DoubleAnimation.EasingFunction>
										</DoubleAnimation>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Pressed">
									<Storyboard>

										<DoubleAnimation Storyboard.TargetName="HoverOverlay"
														 Storyboard.TargetProperty="Opacity"
														 Duration="{StaticResource MaterialAnimationDuration}"
														 To="0">
											<DoubleAnimation.EasingFunction>
												<CubicEase EasingMode="EaseIn" />
											</DoubleAnimation.EasingFunction>
										</DoubleAnimation>

										<DoubleAnimation Storyboard.TargetName="FocusedOverlay"
														 Storyboard.TargetProperty="Opacity"
														 Duration="{StaticResource MaterialAnimationDuration}"
														 To="0">
											<DoubleAnimation.EasingFunction>
												<CubicEase EasingMode="EaseIn" />
											</DoubleAnimation.EasingFunction>
										</DoubleAnimation>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Disabled">
									<VisualState.Setters>
										<Setter Target="HoverOverlay.Opacity"
												Value="0" />
										<Setter Target="FocusedOverlay.Opacity"
												Value="0" />
										<Setter Target="GridRoot.Opacity"
												Value="0.38" />
									</VisualState.Setters>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="FocusStates">
								<VisualState x:Name="Focused">
									<VisualState.Setters>
										<Setter Target="FocusedOverlay.Opacity"
												Value="1" />
									</VisualState.Setters>
								</VisualState>
								<VisualState x:Name="PointerFocused" />
								<VisualState x:Name="Unfocused">
									<VisualState.Setters>
										<Setter Target="FocusedOverlay.Opacity"
												Value="0" />
									</VisualState.Setters>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>

						<Grid x:Name="GridRoot"
							  CornerRadius="{TemplateBinding CornerRadius}">
							<Grid.RowDefinitions>
								<RowDefinition Height="Auto" />
								<RowDefinition Height="Auto" />
								<RowDefinition Height="Auto" />
							</Grid.RowDefinitions>
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="Auto" />
								<ColumnDefinition Width="*" />
								<ColumnDefinition Width="Auto" />
							</Grid.ColumnDefinitions>

							<!--  Border for PointerOver State  -->
							<Border Grid.RowSpan="3"
									Grid.ColumnSpan="3"
									x:Name="HoverOverlay"
									Background="{StaticResource MaterialOnSurfaceHoverBrush}"
									Opacity="0" />

							<!--  Border for Focused State  -->
							<Border Grid.RowSpan="3"
									Grid.ColumnSpan="3"
									x:Name="FocusedOverlay"
									Background="{StaticResource MaterialOnSurfaceFocusedBrush}"
									Opacity="0" />

							<!--  Media content part  -->
							<ContentPresenter x:Name="MediaContentPresenter"
											  Content="{TemplateBinding MediaContent}"
											  ContentTemplate="{TemplateBinding MediaContentTemplate}"
											  HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
											  VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
											  AutomationProperties.AccessibilityView="Raw"
											  IsHitTestVisible="False"
											  Visibility="{Binding MediaContent, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource MaterialEmptyOrNullToCollapsed}}" />

							<StackPanel Grid.Column="1">
								<!--  Header part  -->
								<ContentPresenter x:Name="HeaderContentPresenter"
												  Content="{TemplateBinding HeaderContent}"
												  ContentTemplate="{TemplateBinding HeaderContentTemplate}"
												  HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
												  VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
												  AutomationProperties.AccessibilityView="Raw"
												  Visibility="{Binding HeaderContent, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource MaterialEmptyOrNullToCollapsed}}" />

								<!--  SubHeader part  -->
								<ContentPresenter x:Name="SubHeaderContentPresenter"
												  Content="{TemplateBinding SubHeaderContent}"
												  ContentTemplate="{TemplateBinding SubHeaderContentTemplate}"
												  HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
												  VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
												  AutomationProperties.AccessibilityView="Raw"
												  Visibility="{Binding SubHeaderContent, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource MaterialEmptyOrNullToCollapsed}}" />
							</StackPanel>

							<!--  Ripple effect  -->
							<um:Ripple Grid.RowSpan="3"
											 Grid.ColumnSpan="3"
											 Feedback="{StaticResource MaterialOnSurfaceFocusedBrush}"
											 CornerRadius="{StaticResource MaterialCardCornerRadius}"
											 Padding="{TemplateBinding Padding}"
											 AutomationProperties.AccessibilityView="Raw" />

							<!--  Supporting Content part  -->
							<ContentPresenter Grid.Row="1"
											  Grid.ColumnSpan="3"
											  x:Name="SupportingContentPresenter"
											  Content="{TemplateBinding SupportingContent}"
											  ContentTemplate="{TemplateBinding SupportingContentTemplate}"
											  HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
											  VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
											  AutomationProperties.AccessibilityView="Raw"
											  Visibility="{Binding SupportingContent, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource MaterialEmptyOrNullToCollapsed}}" />

							<!--  Icons section part  -->
							<ContentPresenter Grid.Row="2"
											  Grid.ColumnSpan="3"
											  x:Name="IconsContentPresenter"
											  Content="{TemplateBinding IconsContent}"
											  ContentTemplate="{TemplateBinding IconsContentTemplate}"
											  HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
											  VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
											  AutomationProperties.AccessibilityView="Raw"
											  Visibility="{Binding IconsContentTemplate, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource MaterialNullToCollapsedConverter}}" />
						</Grid>
					</toolkit:ElevatedView>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
</ResourceDictionary>
