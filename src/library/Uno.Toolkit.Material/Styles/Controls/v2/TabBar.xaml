<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
					xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
					xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
					xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
					xmlns:mobile="http://uno.ui/mobile"
					xmlns:not_mobile="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
					xmlns:todo="what should be done"
					xmlns:toolkit="using:Uno.UI.Toolkit"
					xmlns:not_win="http://uno.ui/not_win"
					xmlns:um="using:Uno.Material"
					xmlns:utu="using:Uno.Toolkit.UI"
					mc:Ignorable="d mobile todo not_win">

	<!--  Base Navigation-style TabBar Resources  -->
	<x:Double x:Key="MaterialNavigationTabBarWidthOrHeight">80</x:Double>
	<x:Double x:Key="MaterialNavigationTabBarItemIconHeight">18</x:Double>
	<x:Double x:Key="MaterialNavigationTabBarItemActiveIndicatorWidth">64</x:Double>
	<x:Double x:Key="MaterialNavigationTabBarItemActiveIndicatorHeight">32</x:Double>
	<Thickness x:Key="MaterialNavigationTabBarItemPadding">0,12,0,16</Thickness>
	<CornerRadius x:Key="MaterialNavigationTabBarItemActiveIndicatorCornerRadius">16</CornerRadius>

	<!--  Top TabBar Resources  -->
	<x:Double x:Key="MaterialTopTabBarHeight">48</x:Double>
	<x:Double x:Key="MaterialTopTabBarItemIconHeight">20</x:Double>
	<Thickness x:Key="MaterialTopTabBarItemContentMargin">0,0,0,0</Thickness>

	<!--  FAB Resources  -->
	<x:Double x:Key="MaterialFabTabBarItemOffset">-32</x:Double>
	<x:Double x:Key="MaterialFabTabBarItemContentWidthOrHeight">16</x:Double>
	<x:Double x:Key="MaterialFabTabBarItemIconTextPadding">12</x:Double>
	<CornerRadius x:Key="MaterialFabTabBarItemCornerRadius">16</CornerRadius>
	<Thickness x:Key="MaterialFabTabBarItemPadding">20</Thickness>

	<!--  Small Badge  -->
	<x:Double x:Key="MaterialNavigationTabBarItemSmallBadgeHeight">6</x:Double>
	<x:Double x:Key="MaterialNavigationTabBarItemSmallBadgeWidth">6</x:Double>
	<Thickness x:Key="MaterialNavigationTabBarItemSmallBadgeMargin">0,4,20,0</Thickness>

	<!--  Large Badge  -->
	<x:Double x:Key="MaterialNavigationTabBarItemLargeBadgeHeight">16</x:Double>
	<x:Double x:Key="MaterialNavigationTabBarItemLargeBadgeMinWidth">16</x:Double>
	<Thickness x:Key="MaterialNavigationTabBarItemLargeBadgeMargin">32,2,0,0</Thickness>
	<Thickness x:Key="MaterialNavigationTabBarItemLargeBadgePadding">4,0</Thickness>
	<CornerRadius x:Key="MaterialNavigationTabBarItemLargeBadgeCornerRadius">8</CornerRadius>

	<!-- WORKAROUND: ControlExtensions must be explicitly referenced as an attribute to avoid a crash on WinAppSDK apps, and not just as a a setter property -->
	<Style x:Key="WorkaroundTabBarStyle"
		   TargetType="utu:TabBar">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="utu:TabBar">
					<Grid um:ControlExtensions.IsTintEnabled="False" />
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!--#region TabBar Styles-->

	<Style x:Key="BaseMaterialTabBarStyle"
		   BasedOn="{StaticResource DefaultTabBarStyle}"
		   TargetType="utu:TabBar">

		<Setter Property="um:ControlExtensions.TintedBackground"
				Value="{x:Null}" />
		<Setter Property="um:ControlExtensions.IsTintEnabled"
				Value="True" />
		<Setter Property="IsTabStop"
				Value="False" />
		<Setter Property="ItemsPanel">
			<Setter.Value>
				<ItemsPanelTemplate>
					<utu:TabBarListPanel />
				</ItemsPanelTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="ItemContainerStyle"
				Value="{StaticResource DefaultTabBarItemStyle}" />
		<Setter Property="SelectionIndicatorPresenterStyle"
				Value="{StaticResource DefaultTabBarSelectionIndicatorPresenterStyle}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="utu:TabBar">
					<Grid x:Name="TabBarGrid"
						  Background="{Binding Path=(um:ControlExtensions.TintedBackground), RelativeSource={RelativeSource TemplatedParent}}"
						  BorderBrush="{TemplateBinding BorderBrush}"
						  BorderThickness="{TemplateBinding BorderThickness}">
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="OrientationStates">
								<VisualState x:Name="Horizontal">
									<VisualState.Setters>
										<Setter Target="TabBarGrid.Height"
												Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Height}" />
										<Setter Target="SelectionIndicatorPresenter.VerticalContentAlignment"
												Value="Stretch" />
										<Setter Target="SelectionIndicatorPresenter.HorizontalContentAlignment"
												Value="Left" />
									</VisualState.Setters>
								</VisualState>
								<VisualState x:Name="Vertical">
									<VisualState.Setters>
										<Setter Target="TabBarGrid.Width"
												Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Width}" />
										<Setter Target="SelectionIndicatorPresenter.VerticalContentAlignment"
												Value="Top" />
										<Setter Target="SelectionIndicatorPresenter.HorizontalContentAlignment"
												Value="Stretch" />
									</VisualState.Setters>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<ItemsPresenter x:Name="TabBarItemsPresenter"
										Padding="{TemplateBinding Padding}" />
						<utu:TabBarSelectionIndicatorPresenter x:Name="SelectionIndicatorPresenter"
															   Content="{TemplateBinding SelectionIndicatorContent}"
															   ContentTemplate="{TemplateBinding SelectionIndicatorContentTemplate}"
															   Style="{TemplateBinding SelectionIndicatorPresenterStyle}"
															   IndicatorTransitionMode="{TemplateBinding SelectionIndicatorTransitionMode}"
															   Foreground="{TemplateBinding Foreground}"
															   Owner="{Binding RelativeSource={RelativeSource TemplatedParent}}"
															   AutomationProperties.AutomationId="SelectionIndicatorPresenter"
															   Opacity="0" />
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="MaterialVerticalTabBarStyle"
		   BasedOn="{StaticResource BaseVerticalTabBarStyle}"
		   TargetType="utu:TabBar">
		<Setter Property="um:ControlExtensions.Elevation"
				Value="1" />
		<Setter Property="Background"
				Value="{ThemeResource SurfaceBrush}" />
		<Setter Property="HorizontalAlignment"
				Value="Center" />
		<Setter Property="MinWidth"
				Value="{StaticResource MaterialNavigationTabBarWidthOrHeight}" />
		<Setter Property="utu:SafeArea.Insets"
				Value="VisibleBounds" />
		<Setter Property="ItemContainerStyle"
				Value="{StaticResource MaterialVerticalTabBarItemStyle}" />
	</Style>

	<Style x:Key="MaterialBottomTabBarStyle"
		   BasedOn="{StaticResource BaseHorizontalTabBarStyle}"
		   TargetType="utu:TabBar">
		<Setter Property="um:ControlExtensions.Elevation"
				Value="1" />
		<Setter Property="Background"
				Value="{ThemeResource SurfaceBrush}" />
		<Setter Property="VerticalAlignment"
				Value="Bottom" />
		<Setter Property="MinHeight"
				Value="{StaticResource MaterialNavigationTabBarWidthOrHeight}" />
		<Setter Property="utu:SafeArea.Insets"
				Value="Bottom" />
		<Setter Property="ItemContainerStyle"
				Value="{StaticResource MaterialBottomTabBarItemStyle}" />
	</Style>

	<Style x:Key="MaterialTopTabBarStyle"
		   BasedOn="{StaticResource BaseHorizontalTabBarStyle}"
		   TargetType="utu:TabBar">
		<Setter Property="Background"
				Value="{ThemeResource BackgroundBrush}" />
		<Setter Property="VerticalAlignment"
				Value="Top" />
		<Setter Property="MinHeight"
				Value="{StaticResource MaterialTopTabBarHeight}" />
		<Setter Property="utu:SafeArea.Insets"
				Value="Top" />
		<Setter Property="ItemContainerStyle"
				Value="{StaticResource MaterialTopTabBarItemStyle}" />
		<Setter Property="SelectionIndicatorPresenterStyle"
				Value="{StaticResource MaterialTabBarSelectionIndicatorPresenterStyle}" />
		<Setter Property="SelectionIndicatorContentTemplate">
			<Setter.Value>
				<DataTemplate>
					<Border Height="2"
							Margin="0,0,0,1"
							VerticalAlignment="Bottom"
							Background="{ThemeResource PrimaryBrush}" />
				</DataTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="MaterialColoredTopTabBarStyle"
		   BasedOn="{StaticResource BaseHorizontalTabBarStyle}"
		   TargetType="utu:TabBar">
		<Setter Property="Background"
				Value="{ThemeResource PrimaryBrush}" />
		<Setter Property="VerticalAlignment"
				Value="Top" />
		<Setter Property="MinHeight"
				Value="{StaticResource MaterialTopTabBarHeight}" />
		<Setter Property="utu:SafeArea.Insets"
				Value="Top" />
		<Setter Property="ItemContainerStyle"
				Value="{StaticResource MaterialColoredTopTabBarItemStyle}" />
		<Setter Property="SelectionIndicatorPresenterStyle"
				Value="{StaticResource MaterialTabBarSelectionIndicatorPresenterStyle}" />
		<Setter Property="SelectionIndicatorContentTemplate">
			<Setter.Value>
				<DataTemplate>
					<Border Height="2"
							Margin="0,0,0,1"
							VerticalAlignment="Bottom"
							Background="{ThemeResource OnPrimaryBrush}" />
				</DataTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<!--#endregion-->

	<!--#region TabBarItem Styles-->
	<!--
		"Navigation" Base TabBarItem Style defines commonalities between:
		- VerticalTabBar (known as Navigation Rail in Material Design 3: https://m3.material.io/components/navigation-rail/overview) and,
		- BottomTabBar (known as NavigationBar in Material Design 3: https://m3.material.io/components/navigation-bar/overview)
	-->
	<Style x:Key="MaterialBaseNavigationTabBarItemStyle"
		   TargetType="utu:TabBarItem">
		<Setter Property="FontFamily"
				Value="{ThemeResource MaterialMediumFontFamily}" />
		<Setter Property="FontSize"
				Value="{ThemeResource LabelMediumFontSize}" />
		<Setter Property="FontWeight"
				Value="{ThemeResource LabelMediumFontWeight}" />
		<Setter Property="UseSystemFocusVisuals"
				Value="True" />
		<Setter Property="HorizontalContentAlignment"
				Value="Center" />
		<Setter Property="Background"
				Value="{ThemeResource SystemControlTransparentBrush}" />
		<Setter Property="Foreground"
				Value="{ThemeResource OnSurfaceVariantBrush}" />
		<Setter Property="BorderBrush"
				Value="{ThemeResource SystemControlTransparentBrush}" />
		<Setter Property="Padding"
				Value="{StaticResource MaterialNavigationTabBarItemPadding}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="utu:TabBarItem">
					<Grid x:Name="LayoutRoot"
						  Background="{TemplateBinding Background}"
						  BorderBrush="{TemplateBinding BorderBrush}"
						  BorderThickness="{TemplateBinding BorderThickness}"
						  VerticalAlignment="{TemplateBinding VerticalAlignment}"
						  HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
						  Control.IsTemplateFocusTarget="True">

						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="PointerStates">
								<VisualState x:Name="Normal" />
								<not_mobile:VisualState x:Name="PointerOver">
									<VisualState.Setters>
										<Setter Target="ActiveIndicator.Background"
												Value="{ThemeResource OnSurfaceVariantHoverBrush}" />
										<Setter Target="Icon.Foreground"
												Value="{ThemeResource OnSurfaceVariantBrush}" />
										<Setter Target="ContentPresenter.Foreground"
												Value="{ThemeResource OnSurfaceVariantBrush}" />
									</VisualState.Setters>
								</not_mobile:VisualState>
								<VisualState x:Name="Pressed">
									<VisualState.Setters>
										<Setter Target="ActiveIndicator.Background"
												Value="{ThemeResource OnSurfaceVariantPressedBrush}" />
										<Setter Target="Icon.Foreground"
												Value="{ThemeResource OnSurfaceVariantBrush}" />
										<Setter Target="ContentPresenter.Foreground"
												Value="{ThemeResource OnSurfaceVariantBrush}" />
									</VisualState.Setters>
								</VisualState>
								<VisualState x:Name="Selected">
									<VisualState.Setters>
										<Setter Target="ActiveIndicator.Background"
												Value="{ThemeResource SecondaryContainerBrush}" />
										<Setter Target="Icon.Foreground"
												Value="{ThemeResource OnSecondaryContainerBrush}" />
										<Setter Target="ContentPresenter.Foreground"
												Value="{ThemeResource OnSurfaceBrush}" />
									</VisualState.Setters>
								</VisualState>
								<not_mobile:VisualState x:Name="PointerOverSelected">
									<VisualState.Setters>
										<Setter Target="ActiveIndicator.Background"
												Value="{ThemeResource OnSurfaceHoverBrush}" />
										<Setter Target="Icon.Foreground"
												Value="{ThemeResource OnSecondaryContainerBrush}" />
										<Setter Target="ContentPresenter.Foreground"
												Value="{ThemeResource OnSurfaceBrush}" />
									</VisualState.Setters>
								</not_mobile:VisualState>
								<VisualState x:Name="PressedSelected">
									<VisualState.Setters>
										<Setter Target="ActiveIndicator.Background"
												Value="{ThemeResource OnSurfacePressedBrush}" />
										<Setter Target="Icon.Foreground"
												Value="{ThemeResource OnSecondaryContainerBrush}" />
										<Setter Target="ContentPresenter.Foreground"
												Value="{ThemeResource OnSurfaceBrush}" />
									</VisualState.Setters>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="DisabledStates">
								<VisualState x:Name="Enabled" />
								<VisualState x:Name="Disabled">
									<VisualState.Setters>
										<Setter Target="Icon.Foreground"
												Value="{ThemeResource SystemControlDisabledBaseMediumLowBrush}" />
										<Setter Target="ContentPresenter.Foreground"
												Value="{ThemeResource SystemControlDisabledBaseMediumLowBrush}" />
									</VisualState.Setters>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="TabBarIconPositionStates">
								<VisualState x:Name="IconOnTop" />
								<VisualState x:Name="IconOnly">
									<VisualState.Setters>
										<Setter Target="ContentPresenter.Visibility"
												Value="Collapsed" />
										<Setter Target="ContentGrid.RowSpacing"
												Value="0" />
									</VisualState.Setters>
								</VisualState>
								<VisualState x:Name="ContentOnly">
									<VisualState.Setters>
										<Setter Target="IconBox.Visibility"
												Value="Collapsed" />
										<Setter Target="ContentPresenter.Margin"
												Value="12,0" />
										<Setter Target="IconRow.Height"
												Value="0" />
										<Setter Target="ContentRow.Height"
												Value="*" />
									</VisualState.Setters>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<um:Ripple x:Name="RippleControl"
								   Padding="{TemplateBinding Padding}"
								   AutomationProperties.AccessibilityView="Raw"
								   BorderBrush="{TemplateBinding BorderBrush}"
								   BorderThickness="{TemplateBinding BorderThickness}"
								   CornerRadius="{TemplateBinding CornerRadius}"
								   Feedback="{ThemeResource OnSurfaceBrush}"
								   FeedbackOpacity="{StaticResource PressedOpacity}">
							<um:Ripple.Content>
								<Grid>
									<Rectangle x:Name="PointerRectangle"
											   Fill="Transparent"
											   Visibility="Collapsed" />

									<Grid x:Name="ContentGrid"
										  RowSpacing="4">
										<Grid.RowDefinitions>
											<RowDefinition x:Name="IconRow"
														   Height="*" />
											<RowDefinition x:Name="ContentRow"
														   Height="Auto" />
										</Grid.RowDefinitions>

										<Grid x:Name="ActiveIndicator"
											  Background="{ThemeResource SystemControlTransparentBrush}"
											  VerticalAlignment="Center"
											  HorizontalAlignment="Center"
											  Height="{StaticResource MaterialNavigationTabBarItemActiveIndicatorHeight}"
											  Width="{StaticResource MaterialNavigationTabBarItemActiveIndicatorWidth}"
											  CornerRadius="{StaticResource MaterialNavigationTabBarItemActiveIndicatorCornerRadius}">
											<Border Width="{StaticResource MaterialNavigationTabBarItemIconHeight}"
													Height="{StaticResource MaterialNavigationTabBarItemIconHeight}"
													VerticalAlignment="Center"
													HorizontalAlignment="Center">
												<Viewbox x:Name="IconBox"
														 HorizontalAlignment="Center">
													<ContentPresenter x:Name="Icon"
																	  Content="{TemplateBinding Icon}"
																	  Foreground="{TemplateBinding Foreground}" />
												</Viewbox>
											</Border>

											<!--  BADGE  -->
											<!--  This part can be replaced when InfoBadge will be available in WinUI3  -->
											<!--  See this commit for the implementation: c935919b2c390014dd8509cc50e16b1549511ffa  -->
											<!--  (Related Branch: dev/agzi/I274-InfoBadgeImplementationForTBI)  -->

											<Grid Visibility="{TemplateBinding BadgeVisibility}">
												<!--  Small Badge  -->
												<Ellipse Height="{StaticResource MaterialNavigationTabBarItemSmallBadgeHeight}"
														 Width="{StaticResource MaterialNavigationTabBarItemSmallBadgeWidth}"
														 Margin="{StaticResource MaterialNavigationTabBarItemSmallBadgeMargin}"
														 HorizontalAlignment="Right"
														 VerticalAlignment="Top"
														 Fill="{ThemeResource ErrorBrush}"
														 Visibility="{Binding BadgeValue, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource MaterialEmptyOrNullToVisible}}" />

												<!--  Large Badge  -->
												<Border Height="{StaticResource MaterialNavigationTabBarItemLargeBadgeHeight}"
														MinWidth="{StaticResource MaterialNavigationTabBarItemLargeBadgeMinWidth}"
														Padding="{StaticResource MaterialNavigationTabBarItemLargeBadgePadding}"
														Margin="{StaticResource MaterialNavigationTabBarItemLargeBadgeMargin}"
														HorizontalAlignment="Left"
														VerticalAlignment="Top"
														CornerRadius="{StaticResource MaterialNavigationTabBarItemLargeBadgeCornerRadius}"
														Background="{ThemeResource ErrorBrush}"
														Visibility="{Binding BadgeValue, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource MaterialEmptyOrNullToCollapsed}}">
													<TextBlock Text="{TemplateBinding BadgeValue}"
															   MaxLines="1"
															   TextAlignment="Center"
															   VerticalAlignment="Center"
															   HorizontalAlignment="Center"
															   Foreground="{ThemeResource OnErrorBrush}"
															   Style="{StaticResource LabelExtraSmall}" />
												</Border>
											</Grid>

										</Grid>

										<ContentPresenter x:Name="ContentPresenter"
														  Grid.Row="1"
														  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
														  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
														  AutomationProperties.AccessibilityView="Raw"
														  Content="{TemplateBinding Content}"
														  ContentTemplate="{TemplateBinding ContentTemplate}"
														  ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
														  ContentTransitions="{TemplateBinding ContentTransitions}"
														  FontSize="{TemplateBinding FontSize}"
														  FontFamily="{TemplateBinding FontFamily}"
														  FontWeight="{TemplateBinding FontWeight}"
														  Foreground="{TemplateBinding Foreground}"
														  TextWrapping="NoWrap" />
									</Grid>
								</Grid>
							</um:Ripple.Content>
						</um:Ripple>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="MaterialVerticalTabBarItemStyle"
		   BasedOn="{StaticResource MaterialBaseNavigationTabBarItemStyle}"
		   TargetType="utu:TabBarItem" />

	<Style x:Key="MaterialBottomTabBarItemStyle"
		   BasedOn="{StaticResource MaterialBaseNavigationTabBarItemStyle}"
		   TargetType="utu:TabBarItem" />

	<Style x:Key="MaterialTopTabBarItemStyle"
		   TargetType="utu:TabBarItem">
		<Setter Property="Background"
				Value="{ThemeResource SystemControlTransparentBrush}" />
		<Setter Property="Foreground"
				Value="{ThemeResource OnSurfaceMediumBrush}" />
		<Setter Property="BorderBrush"
				Value="{ThemeResource SystemControlTransparentBrush}" />
		<Setter Property="FontFamily"
				Value="{ThemeResource MaterialRegularFontFamily}" />
		<Setter Property="FontSize"
				Value="{ThemeResource TitleSmallFontSize}" />
		<Setter Property="FontWeight"
				Value="{ThemeResource TitleSmallFontWeight}" />
		<Setter Property="UseSystemFocusVisuals"
				Value="True" />
		<Setter Property="HorizontalContentAlignment"
				Value="Center" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="utu:TabBarItem">
					<Grid x:Name="LayoutRoot"
						  Background="{TemplateBinding Background}"
						  BorderBrush="{TemplateBinding BorderBrush}"
						  BorderThickness="{TemplateBinding BorderThickness}"
						  Control.IsTemplateFocusTarget="True">

						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal" />
								<not_mobile:VisualState x:Name="PointerOver">
									<VisualState.Setters>
										<Setter Target="LayoutRoot.Background"
												Value="{ThemeResource PrimaryHoverBrush}" />
										<Setter Target="PointerRectangle.Fill"
												Value="{ThemeResource PrimaryHoverBrush}" />
										<Setter Target="Icon.Foreground"
												Value="{ThemeResource OnSurfaceMediumBrush}" />
										<Setter Target="ContentPresenter.Foreground"
												Value="{ThemeResource OnSurfaceMediumBrush}" />
									</VisualState.Setters>
								</not_mobile:VisualState>
								<not_mobile:VisualState x:Name="Pressed">
									<VisualState.Setters>
										<Setter Target="LayoutRoot.Background"
												Value="{ThemeResource PrimaryPressedBrush}" />
										<Setter Target="PointerRectangle.Fill"
												Value="{ThemeResource PrimaryPressedBrush}" />
										<Setter Target="Icon.Foreground"
												Value="{ThemeResource OnSurfaceMediumBrush}" />
										<Setter Target="ContentPresenter.Foreground"
												Value="{ThemeResource OnSurfaceMediumBrush}" />
									</VisualState.Setters>
								</not_mobile:VisualState>
								<VisualState x:Name="Selected">
									<VisualState.Setters>
										<Setter Target="LayoutRoot.Background"
												Value="{ThemeResource SystemControlTransparentBrush}" />
										<Setter Target="PointerRectangle.Fill"
												Value="{ThemeResource SystemControlTransparentBrush}" />
										<Setter Target="Icon.Foreground"
												Value="{ThemeResource PrimaryBrush}" />
										<Setter Target="ContentPresenter.Foreground"
												Value="{ThemeResource PrimaryBrush}" />
									</VisualState.Setters>
								</VisualState>
								<not_mobile:VisualState x:Name="PointerOverSelected">
									<VisualState.Setters>
										<Setter Target="LayoutRoot.Background"
												Value="{ThemeResource PrimaryHoverBrush}" />
										<Setter Target="PointerRectangle.Fill"
												Value="{ThemeResource PrimaryHoverBrush}" />
										<Setter Target="Icon.Foreground"
												Value="{ThemeResource PrimaryBrush}" />
										<Setter Target="ContentPresenter.Foreground"
												Value="{ThemeResource PrimaryBrush}" />
									</VisualState.Setters>
								</not_mobile:VisualState>
								<not_mobile:VisualState x:Name="PressedSelected">
									<VisualState.Setters>
										<Setter Target="LayoutRoot.Background"
												Value="{ThemeResource PrimaryPressedBrush}" />
										<Setter Target="PointerRectangle.Fill"
												Value="{ThemeResource PrimaryPressedBrush}" />
										<Setter Target="Icon.Foreground"
												Value="{ThemeResource PrimaryBrush}" />
										<Setter Target="ContentPresenter.Foreground"
												Value="{ThemeResource PrimaryBrush}" />
									</VisualState.Setters>
								</not_mobile:VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="FocusStates">
								<VisualState x:Name="Focused">
									<VisualState.Setters>
										<Setter Target="LayoutRoot.Background"
												Value="{ThemeResource PrimaryLowBrush}" />
										<Setter Target="PointerRectangle.Fill"
												Value="{ThemeResource PrimaryLowBrush}" />
									</VisualState.Setters>
								</VisualState>
								<VisualState x:Name="PointerFocused" />
								<VisualState x:Name="Unfocused" />
							</VisualStateGroup>
							<VisualStateGroup x:Name="DisabledStates">
								<VisualState x:Name="Enabled" />
								<VisualState x:Name="Disabled">
									<VisualState.Setters>
										<Setter Target="Icon.Foreground"
												Value="{ThemeResource SystemControlDisabledBaseMediumLowBrush}" />
										<Setter Target="ContentPresenter.Foreground"
												Value="{ThemeResource SystemControlDisabledBaseMediumLowBrush}" />
									</VisualState.Setters>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="TabBarIconPositionStates">
								<VisualState x:Name="IconOnTop" />
								<VisualState x:Name="IconOnly">
									<VisualState.Setters>
										<Setter Target="PointerRectangle.Visibility"
												Value="Visible" />
										<Setter Target="ContentPresenter.Visibility"
												Value="Collapsed" />
									</VisualState.Setters>
								</VisualState>
								<VisualState x:Name="ContentOnly">
									<VisualState.Setters>
										<Setter Target="IconBox.Visibility"
												Value="Collapsed" />
										<Setter Target="ContentPresenter.Margin"
												Value="12,0" />
										<Setter Target="IconRow.Width"
												Value="0" />
										<Setter Target="ContentRow.Width"
												Value="*" />
									</VisualState.Setters>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<um:Ripple x:Name="RippleControl"
								   Padding="{TemplateBinding Padding}"
								   AutomationProperties.AccessibilityView="Raw"
								   BorderBrush="{TemplateBinding BorderBrush}"
								   BorderThickness="{TemplateBinding BorderThickness}"
								   CornerRadius="{TemplateBinding CornerRadius}"
								   Feedback="{ThemeResource PrimaryBrush}"
								   FeedbackOpacity="{StaticResource PressedOpacity}">
							<um:Ripple.Content>
							<Grid>
								<Rectangle x:Name="PointerRectangle"
										   Fill="Transparent"
										   Visibility="Collapsed" />

								<Grid x:Name="ContentGrid"
									  ColumnSpacing="8">
									<Grid.ColumnDefinitions>
										<ColumnDefinition x:Name="IconRow"
														  Width="*" />
										<ColumnDefinition x:Name="ContentRow"
														  Width="Auto" />
									</Grid.ColumnDefinitions>
									<Viewbox x:Name="IconBox"
											 Width="{StaticResource MaterialTopTabBarItemIconHeight}"
											 Height="{StaticResource MaterialTopTabBarItemIconHeight}">
										<ContentPresenter x:Name="Icon"
														  Content="{TemplateBinding Icon}"
														  Foreground="{TemplateBinding Foreground}" />
									</Viewbox>
									<ContentPresenter x:Name="ContentPresenter"
													  Grid.Column="1"
													  Margin="{StaticResource MaterialTopTabBarItemContentMargin}"
													  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
													  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
													  AutomationProperties.AccessibilityView="Raw"
													  Content="{TemplateBinding Content}"
													  ContentTemplate="{TemplateBinding ContentTemplate}"
													  ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
													  ContentTransitions="{TemplateBinding ContentTransitions}"
													  FontSize="{TemplateBinding FontSize}"
													  Foreground="{TemplateBinding Foreground}"
													  TextWrapping="NoWrap" />
								</Grid>
							</Grid>
							</um:Ripple.Content>
						</um:Ripple>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="MaterialColoredTopTabBarItemStyle"
		   BasedOn="{StaticResource MaterialTopTabBarItemStyle}"
		   TargetType="utu:TabBarItem">
		<Setter Property="Foreground"
				Value="{ThemeResource OnPrimaryMediumBrush}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="utu:TabBarItem">
					<Grid x:Name="LayoutRoot"
						  Background="{TemplateBinding Background}"
						  BorderBrush="{TemplateBinding BorderBrush}"
						  BorderThickness="{TemplateBinding BorderThickness}"
						  Control.IsTemplateFocusTarget="True">

						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal" />
								<not_mobile:VisualState x:Name="PointerOver">
									<VisualState.Setters>
										<Setter Target="LayoutRoot.Background"
												Value="{ThemeResource OnPrimaryHoverBrush}" />
										<Setter Target="PointerRectangle.Fill"
												Value="{ThemeResource OnPrimaryHoverBrush}" />
										<Setter Target="Icon.Foreground"
												Value="{ThemeResource OnPrimaryMediumBrush}" />
										<Setter Target="ContentPresenter.Foreground"
												Value="{ThemeResource OnPrimaryMediumBrush}" />
									</VisualState.Setters>
								</not_mobile:VisualState>
								<not_mobile:VisualState x:Name="Pressed">
									<VisualState.Setters>
										<Setter Target="LayoutRoot.Background"
												Value="{ThemeResource OnPrimaryPressedBrush}" />
										<Setter Target="PointerRectangle.Fill"
												Value="{ThemeResource OnPrimaryPressedBrush}" />
										<Setter Target="Icon.Foreground"
												Value="{ThemeResource OnPrimaryMediumBrush}" />
										<Setter Target="ContentPresenter.Foreground"
												Value="{ThemeResource OnPrimaryMediumBrush}" />
									</VisualState.Setters>
								</not_mobile:VisualState>
								<VisualState x:Name="Selected">
									<VisualState.Setters>
										<Setter Target="LayoutRoot.Background"
												Value="{ThemeResource SystemControlTransparentBrush}" />
										<Setter Target="PointerRectangle.Fill"
												Value="{ThemeResource SystemControlTransparentBrush}" />
										<Setter Target="Icon.Foreground"
												Value="{ThemeResource OnPrimaryBrush}" />
										<Setter Target="ContentPresenter.Foreground"
												Value="{ThemeResource OnPrimaryBrush}" />
									</VisualState.Setters>
								</VisualState>
								<not_mobile:VisualState x:Name="PointerOverSelected">
									<VisualState.Setters>
										<Setter Target="LayoutRoot.Background"
												Value="{ThemeResource OnPrimaryHoverBrush}" />
										<Setter Target="PointerRectangle.Fill"
												Value="{ThemeResource OnPrimaryHoverBrush}" />
										<Setter Target="Icon.Foreground"
												Value="{ThemeResource OnPrimaryBrush}" />
										<Setter Target="ContentPresenter.Foreground"
												Value="{ThemeResource OnPrimaryBrush}" />
									</VisualState.Setters>
								</not_mobile:VisualState>
								<not_mobile:VisualState x:Name="PressedSelected">
									<VisualState.Setters>
										<Setter Target="LayoutRoot.Background"
												Value="{ThemeResource OnPrimaryPressedBrush}" />
										<Setter Target="PointerRectangle.Fill"
												Value="{ThemeResource OnPrimaryPressedBrush}" />
										<Setter Target="Icon.Foreground"
												Value="{ThemeResource OnPrimaryBrush}" />
										<Setter Target="ContentPresenter.Foreground"
												Value="{ThemeResource OnPrimaryBrush}" />
									</VisualState.Setters>
								</not_mobile:VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="FocusStates">
								<VisualState x:Name="Focused">
									<VisualState.Setters>
										<Setter Target="LayoutRoot.Background"
												Value="{ThemeResource OnPrimaryLowBrush}" />
										<Setter Target="PointerRectangle.Fill"
												Value="{ThemeResource OnPrimaryLowBrush}" />
									</VisualState.Setters>
								</VisualState>
								<VisualState x:Name="PointerFocused" />
								<VisualState x:Name="Unfocused" />
							</VisualStateGroup>
							<VisualStateGroup x:Name="DisabledStates">
								<VisualState x:Name="Enabled" />
								<VisualState x:Name="Disabled">
									<VisualState.Setters>
										<Setter Target="Icon.Foreground"
												Value="{ThemeResource SystemControlDisabledBaseMediumLowBrush}" />
										<Setter Target="ContentPresenter.Foreground"
												Value="{ThemeResource SystemControlDisabledBaseMediumLowBrush}" />
									</VisualState.Setters>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="TabBarIconPositionStates">
								<VisualState x:Name="IconOnTop" />
								<VisualState x:Name="IconOnly">
									<VisualState.Setters>
										<Setter Target="PointerRectangle.Visibility"
												Value="Visible" />
										<Setter Target="ContentPresenter.Visibility"
												Value="Collapsed" />
									</VisualState.Setters>
								</VisualState>
								<VisualState x:Name="ContentOnly">
									<VisualState.Setters>
										<Setter Target="IconBox.Visibility"
												Value="Collapsed" />
										<Setter Target="ContentPresenter.Margin"
												Value="12,0" />
										<Setter Target="IconRow.Width"
												Value="0" />
										<Setter Target="ContentRow.Width"
												Value="*" />
									</VisualState.Setters>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<um:Ripple x:Name="RippleControl"
								   Padding="{TemplateBinding Padding}"
								   AutomationProperties.AccessibilityView="Raw"
								   BorderBrush="{TemplateBinding BorderBrush}"
								   BorderThickness="{TemplateBinding BorderThickness}"
								   CornerRadius="{TemplateBinding CornerRadius}"
								   Feedback="{ThemeResource PrimaryBrush}"
								   FeedbackOpacity="{StaticResource PressedOpacity}">
							<um:Ripple.Content>
								<Grid>
									<Rectangle x:Name="PointerRectangle"
											   Fill="Transparent"
											   Visibility="Collapsed" />

									<Grid x:Name="ContentGrid"
										  ColumnSpacing="8">
										<Grid.ColumnDefinitions>
											<ColumnDefinition x:Name="IconRow"
															  Width="*" />
											<ColumnDefinition x:Name="ContentRow"
															  Width="Auto" />
										</Grid.ColumnDefinitions>
										<Viewbox x:Name="IconBox"
												 Width="{StaticResource MaterialTopTabBarItemIconHeight}"
												 Height="{StaticResource MaterialTopTabBarItemIconHeight}">
											<ContentPresenter x:Name="Icon"
															  Content="{TemplateBinding Icon}"
															  Foreground="{TemplateBinding Foreground}" />
										</Viewbox>
										<ContentPresenter x:Name="ContentPresenter"
														  Grid.Column="1"
														  Margin="{StaticResource MaterialTopTabBarItemContentMargin}"
														  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
														  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
														  AutomationProperties.AccessibilityView="Raw"
														  Content="{TemplateBinding Content}"
														  ContentTemplate="{TemplateBinding ContentTemplate}"
														  ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
														  ContentTransitions="{TemplateBinding ContentTransitions}"
														  FontSize="{TemplateBinding FontSize}"
														  Foreground="{TemplateBinding Foreground}"
														  TextWrapping="NoWrap" />
									</Grid>
								</Grid>
							</um:Ripple.Content>
						</um:Ripple>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<!--#endregion-->

	<!--#region FAB TabBarItem Styles-->
	<Style x:Key="MaterialBaseFabTabBarItemStyle"
		   TargetType="utu:TabBarItem">
		<Setter Property="FontFamily"
				Value="{ThemeResource MaterialMediumFontFamily}" />
		<Setter Property="FontSize"
				Value="{ThemeResource LabelMediumFontSize}" />
		<Setter Property="FontWeight"
				Value="{ThemeResource LabelMediumFontWeight}" />
		<Setter Property="IsSelectable"
				Value="False" />
		<Setter Property="UseSystemFocusVisuals"
				Value="True" />
		<Setter Property="VerticalContentAlignment"
				Value="Center" />
		<Setter Property="HorizontalContentAlignment"
				Value="Center" />
		<Setter Property="CornerRadius"
				Value="{StaticResource MaterialFabTabBarItemCornerRadius}" />
		<Setter Property="Padding"
				Value="{StaticResource MaterialFabTabBarItemPadding}" />
		<Setter Property="Background"
				Value="{ThemeResource PrimaryContainerBrush}" />
		<Setter Property="Foreground"
				Value="{ThemeResource OnPrimaryContainerBrush}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="utu:TabBarItem">
					<Grid VerticalAlignment="{TemplateBinding VerticalAlignment}"
						  HorizontalAlignment="{TemplateBinding HorizontalAlignment}">
						<toolkit:ElevatedView x:Name="ElevatedView"
											  HorizontalAlignment="Center"
											  VerticalAlignment="Center"
											  Background="Transparent"
											  CornerRadius="{TemplateBinding CornerRadius}"
											  Elevation="6">

							<um:Ripple x:Name="Ripple"
									   CornerRadius="{TemplateBinding CornerRadius}"
									   Feedback="{TemplateBinding Foreground}"
									   FeedbackOpacity="{StaticResource PressedOpacity}">
								<Grid CornerRadius="{TemplateBinding CornerRadius}">
									<Grid x:Name="Root"
										  Background="{TemplateBinding Background}">
										<StackPanel x:Name="ContentPanel"
													Margin="{TemplateBinding Padding}"
													Orientation="Horizontal">

											<!--  Icon  -->
											<Viewbox Width="{StaticResource MaterialFabTabBarItemContentWidthOrHeight}"
													 Height="{StaticResource MaterialFabTabBarItemContentWidthOrHeight}"
													 HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
													 VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
													 Visibility="{Binding Path=Icon, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource MaterialNullToCollapsedConverter}, FallbackValue=Collapsed, TargetNullValue=Collapsed}">
												<ContentPresenter x:Name="IconPresenter"
																  Content="{TemplateBinding Icon}"
																  Foreground="{Binding Path=Foreground, RelativeSource={RelativeSource TemplatedParent}}" />
											</Viewbox>

											<!--  Icon/Content spacing  -->
											<Border Visibility="{Binding Path=Content, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource MaterialEmptyToCollapsed}, FallbackValue=Collapsed, TargetNullValue=Collapsed}">
												<Border Width="{StaticResource MaterialFabTabBarItemIconTextPadding}"
														Visibility="{Binding Path=Icon, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource MaterialNullToCollapsedConverter}, FallbackValue=Collapsed, TargetNullValue=Collapsed}" />
											</Border>

											<!--  Content  -->
											<ContentPresenter x:Name="ContentPresenter"
															  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
															  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
															  Content="{TemplateBinding Content}"
															  ContentTemplate="{TemplateBinding ContentTemplate}"
															  ContentTransitions="{TemplateBinding ContentTransitions}"
															  FontFamily="{TemplateBinding FontFamily}"
															  FontWeight="{TemplateBinding FontWeight}"
															  FontSize="{TemplateBinding FontSize}" />
										</StackPanel>
									</Grid>
									<Border x:Name="StateOverlay"
											Background="Transparent"
											CornerRadius="{TemplateBinding CornerRadius}" />
								</Grid>
							</um:Ripple>
						</toolkit:ElevatedView>

						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">

								<VisualState x:Name="Normal" />

								<VisualState x:Name="PointerOver">
									<VisualState.Setters>
										<Setter Target="StateOverlay.Background"
												Value="{ThemeResource OnPrimaryContainerHoverBrush}" />
									</VisualState.Setters>
								</VisualState>
								<VisualState x:Name="Pressed">
									<VisualState.Setters>
										<Setter Target="StateOverlay.Background"
												Value="{ThemeResource OnPrimaryContainerPressedBrush}" />
									</VisualState.Setters>
								</VisualState>
								<VisualState x:Name="Disabled">
									<VisualState.Setters>
										<Setter Target="IconPresenter.Foreground"
												Value="{ThemeResource OnSurfaceDisabledBrush}" />
										<Setter Target="ContentPresenter.Foreground"
												Value="{ThemeResource OnSurfaceDisabledBrush}" />
										<Setter Target="StateOverlay.Background"
												Value="{ThemeResource OnSurfaceDisabledLowBrush}" />
									</VisualState.Setters>
								</VisualState>
							</VisualStateGroup>

							<VisualStateGroup x:Name="FocusStates">

								<VisualState x:Name="Focused">
									<VisualState.Setters>
										<Setter Target="StateOverlay.Background"
												Value="{ThemeResource OnPrimaryContainerFocusedBrush}" />
									</VisualState.Setters>
								</VisualState>

								<VisualState x:Name="PointerFocused" />

								<VisualState x:Name="Unfocused" />
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="MaterialVerticalFabTabBarItemStyle"
		   BasedOn="{StaticResource MaterialBaseFabTabBarItemStyle}"
		   TargetType="utu:TabBarItem" />

	<Style x:Key="MaterialBottomFabTabBarItemStyle"
		   BasedOn="{StaticResource MaterialBaseFabTabBarItemStyle}"
		   TargetType="utu:TabBarItem">
		<!--  KNOWN ISSUE: The part of the FAB that is translated outside of the TabBar bounds is not clickable  -->
		<!--  https://github.com/unoplatform/uno/issues/7393  -->
		<Setter Property="RenderTransform">
			<Setter.Value>
				<TranslateTransform Y="{StaticResource MaterialFabTabBarItemOffset}" />
			</Setter.Value>
		</Setter>

	</Style>
	<!--#endregion-->

	<!--#region SelectionIndicator-->
	<Style x:Key="MaterialTabBarSelectionIndicatorPresenterStyle"
		   TargetType="utu:TabBarSelectionIndicatorPresenter">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="utu:TabBarSelectionIndicatorPresenter">
					<Grid x:Name="Root">
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="IndicatorTransitionStates">
								<VisualState x:Name="Horizontal">
									<Storyboard x:Name="IndicatorTransitionHorizontalStoryboard">
										<DoubleAnimation Storyboard.TargetName="IndicatorTransform"
														 Storyboard.TargetProperty="TranslateX"
														 From="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.IndicatorTransitionFrom.X}"
														 To="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.IndicatorTransitionTo.X}"
														 Duration="00:00:00.200" />
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Vertical">
									<Storyboard x:Name="IndicatorTransitionVerticalStoryboard">
										<DoubleAnimation Storyboard.TargetName="IndicatorTransform"
														 Storyboard.TargetProperty="TranslateY"
														 From="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.IndicatorTransitionFrom.Y}"
														 To="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.IndicatorTransitionTo.Y}"
														 Duration="00:00:00.200" />
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<ContentPresenter x:Name="IndicatorPresenter"
										  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
										  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
										  Content="{TemplateBinding Content}"
										  ContentTemplate="{TemplateBinding ContentTemplate}"
										  RenderTransformOrigin=".5,.5"
										  Height="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.IndicatorMaxSize.Height}"
										  Width="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.IndicatorMaxSize.Width}">
							<ContentPresenter.RenderTransform>
								<CompositeTransform x:Name="IndicatorTransform" />
							</ContentPresenter.RenderTransform>
						</ContentPresenter>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<!--#endregion-->

</ResourceDictionary>
