<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
					xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
					xmlns:toolkit="using:Uno.UI.Toolkit"
					xmlns:um="using:Uno.Material"
					xmlns:utu="using:Uno.Toolkit.UI">
	<ResourceDictionary.ThemeDictionaries>
		<!-- Card Brushes Theme Resources -->
		<ResourceDictionary x:Key="Default">
			<!-- Filled -->
			<StaticResource x:Key="FilledCardContentBackground" ResourceKey="SurfaceBrush" />
			<StaticResource x:Key="FilledCardContentBorderBrush" ResourceKey="SystemControlTransparentBrush" />
			<StaticResource x:Key="FilledCardContentBorderBrushPointerOver" ResourceKey="OnSurfaceHoverBrush" />
			<StaticResource x:Key="FilledCardContentBorderBrushFocused" ResourceKey="OnSurfaceFocusedBrush" />
			<StaticResource x:Key="FilledCardContentBorderBrushPressed" ResourceKey="OnSurfacePressedBrush" />

			<!-- Outlined -->
			<StaticResource x:Key="OutlinedCardContentBackground" ResourceKey="SurfaceBrush" />
			<StaticResource x:Key="OutlinedCardContentBorderBrush" ResourceKey="OutlineBrush" />

			<!-- Elevated -->
			<StaticResource x:Key="ElevatedCardContentBackground" ResourceKey="SurfaceBrush" />
			<StaticResource x:Key="ElevatedCardContentBorderBrush" ResourceKey="SystemControlTransparentBrush" />
			<StaticResource x:Key="ElevatedCardContentBorderBrushPointerOver" ResourceKey="OnSurfaceHoverBrush" />
			<StaticResource x:Key="ElevatedCardContentBorderBrushFocused" ResourceKey="OnSurfaceFocusedBrush" />
			<StaticResource x:Key="ElevatedCardContentBorderBrushPressed" ResourceKey="OnSurfacePressedBrush" />
		</ResourceDictionary>

		<ResourceDictionary x:Key="Light">
			<!-- Filled -->
			<StaticResource x:Key="FilledCardContentBackground" ResourceKey="SurfaceBrush" />
			<StaticResource x:Key="FilledCardContentBorderBrush" ResourceKey="SystemControlTransparentBrush" />
			<StaticResource x:Key="FilledCardContentBorderBrushPointerOver" ResourceKey="OnSurfaceHoverBrush" />
			<StaticResource x:Key="FilledCardContentBorderBrushFocused" ResourceKey="OnSurfaceFocusedBrush" />
			<StaticResource x:Key="FilledCardContentBorderBrushPressed" ResourceKey="OnSurfacePressedBrush" />

			<!-- Outlined -->
			<StaticResource x:Key="OutlinedCardContentBackground" ResourceKey="SurfaceBrush" />
			<StaticResource x:Key="OutlinedCardContentBorderBrush" ResourceKey="OutlineBrush" />

			<!-- Elevated -->
			<StaticResource x:Key="ElevatedCardContentBackground" ResourceKey="SurfaceBrush" />
			<StaticResource x:Key="ElevatedCardContentBorderBrush" ResourceKey="SystemControlTransparentBrush" />
			<StaticResource x:Key="ElevatedCardContentBorderBrushPointerOver" ResourceKey="OnSurfaceHoverBrush" />
			<StaticResource x:Key="ElevatedCardContentBorderBrushFocused" ResourceKey="OnSurfaceFocusedBrush" />
			<StaticResource x:Key="ElevatedCardContentBorderBrushPressed" ResourceKey="OnSurfacePressedBrush" />
		</ResourceDictionary>
	</ResourceDictionary.ThemeDictionaries>

	<!-- CardContentControl Base Style -->
	<Style x:Key="MaterialBaseCardContentControlStyle"
		   TargetType="utu:CardContentControl">
		<Setter Property="CornerRadius" Value="{StaticResource CardCornerRadius}" />
		<Setter Property="HorizontalAlignment" Value="Center" />
		<Setter Property="HorizontalContentAlignment" Value="Stretch" />
		<Setter Property="VerticalAlignment" Value="Center" />
		<Setter Property="VerticalContentAlignment" Value="Stretch" />
	</Style>

	<!-- Filled -->
	<Style x:Key="MaterialFilledCardContentControlStyle"
		   BasedOn="{StaticResource MaterialBaseCardContentControlStyle}"
		   TargetType="utu:CardContentControl">
		<Setter Property="Background" Value="{StaticResource FilledCardContentBackground}" />
		<Setter Property="BorderBrush" Value="{ThemeResource FilledCardContentBorderBrush}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="utu:CardContentControl">
					<Grid x:Name="GridRoot"
						  MinWidth="{TemplateBinding MinWidth}"
						  MinHeight="{TemplateBinding MinHeight}"
						  MaxWidth="{TemplateBinding MaxWidth}"
						  MaxHeight="{TemplateBinding MaxHeight}"
						  HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
						  VerticalAlignment="{TemplateBinding VerticalAlignment}"
						  Background="{TemplateBinding Background}"
						  BorderBrush="{TemplateBinding BorderBrush}"
						  BorderThickness="{TemplateBinding BorderThickness}"
						  CornerRadius="{TemplateBinding CornerRadius}">
						<!-- Ripple effect -->
						<!-- Will add the ripple effect later on when this issue is taken care of: -->
						<!-- https://github.com/unoplatform/uno.ui.toolkit/issues/88 -->
						<!--<um:Ripple Feedback="{ThemeResource FilledCardContentBorderBrushFocused}"
										 BorderBrush="{TemplateBinding BorderBrush}"
										 BorderThickness="{TemplateBinding BorderThickness}"
										 CornerRadius="{StaticResource MaterialCardCornerRadius}"
										 Padding="{TemplateBinding Padding}"
										 AutomationProperties.AccessibilityView="Raw" />-->

						<!-- Main ContentPresenter -->
						<ContentPresenter x:Name="ContentPresenter"
										  Padding="{TemplateBinding Padding}"
										  HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
										  VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
										  AutomationProperties.AccessibilityView="Raw"
										  Content="{TemplateBinding Content}"
										  ContentTemplate="{TemplateBinding ContentTemplate}" />

						<!-- Border for Pressed State -->
						<Border x:Name="HoverPressed"
								Background="{ThemeResource FilledCardContentBorderBrushPressed}"
								IsHitTestVisible="False"
								Opacity="0" />

						<!-- Border for PointerOver State -->
						<Border x:Name="HoverOverlay"
								Background="{ThemeResource FilledCardContentBorderBrushPointerOver}"
								IsHitTestVisible="False"
								Opacity="0" />

						<!-- Border for Focused State -->
						<Border x:Name="FocusedOverlay"
								Background="{ThemeResource FilledCardContentBorderBrushFocused}"
								IsHitTestVisible="False"
								Opacity="0" />
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal">
									<VisualState.Setters>
										<Setter Target="HoverOverlay.Opacity" Value="0" />
										<Setter Target="FocusedOverlay.Opacity" Value="0" />
									</VisualState.Setters>
								</VisualState>
								<VisualState x:Name="PointerOver">
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="HoverOverlay"
														 Storyboard.TargetProperty="Opacity"
														 From="0"
														 To="1"
														 Duration="{StaticResource MaterialDelayedBeginTime}">
											<DoubleAnimation.EasingFunction>
												<CubicEase EasingMode="EaseIn" />
											</DoubleAnimation.EasingFunction>
										</DoubleAnimation>
									</Storyboard>
								</VisualState>

								<VisualState x:Name="Pressed">
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="HoverPressed"
														 Storyboard.TargetProperty="Opacity"
														 From="0"
														 To="1"
														 Duration="{StaticResource MaterialDelayedBeginTime}">
											<DoubleAnimation.EasingFunction>
												<CubicEase EasingMode="EaseIn" />
											</DoubleAnimation.EasingFunction>
										</DoubleAnimation>

										<DoubleAnimation Storyboard.TargetName="HoverOverlay"
														 Storyboard.TargetProperty="Opacity"
														 To="0"
														 Duration="{StaticResource MaterialDelayedBeginTime}">
											<DoubleAnimation.EasingFunction>
												<CubicEase EasingMode="EaseIn" />
											</DoubleAnimation.EasingFunction>
										</DoubleAnimation>

										<DoubleAnimation Storyboard.TargetName="FocusedOverlay"
														 Storyboard.TargetProperty="Opacity"
														 To="0"
														 Duration="{StaticResource MaterialDelayedBeginTime}">
											<DoubleAnimation.EasingFunction>
												<CubicEase EasingMode="EaseIn" />
											</DoubleAnimation.EasingFunction>
										</DoubleAnimation>
									</Storyboard>
								</VisualState>

								<VisualState x:Name="Disabled">
									<VisualState.Setters>
										<Setter Target="HoverOverlay.Opacity" Value="0" />
										<Setter Target="FocusedOverlay.Opacity" Value="0" />
										<Setter Target="GridRoot.Opacity" Value="0.38" />
									</VisualState.Setters>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="FocusStates">
								<VisualState x:Name="Focused">
									<VisualState.Setters>
										<Setter Target="FocusedOverlay.Opacity" Value="1" />
									</VisualState.Setters>
								</VisualState>
								<VisualState x:Name="PointerFocused" />
								<VisualState x:Name="Unfocused">
									<VisualState.Setters>
										<Setter Target="FocusedOverlay.Opacity" Value="0" />
									</VisualState.Setters>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- Outlined -->
	<Style x:Key="MaterialOutlinedCardContentControlStyle"
		   BasedOn="{StaticResource MaterialFilledCardContentControlStyle}"
		   TargetType="utu:CardContentControl">
		<Setter Property="Background" Value="{ThemeResource OutlinedCardContentBackground}" />
		<Setter Property="BorderBrush" Value="{ThemeResource OutlinedCardContentBorderBrush}" />
		<Setter Property="BorderThickness" Value="{StaticResource CardBorderThickness}" />
	</Style>

	<!-- Elevated -->
	<Style x:Key="MaterialElevatedCardContentControlStyle"
		   BasedOn="{StaticResource MaterialBaseCardContentControlStyle}"
		   TargetType="utu:CardContentControl">
		<Setter Property="Background" Value="{ThemeResource ElevatedCardContentBackground}" />
		<Setter Property="Elevation" Value="{StaticResource CardElevation}" />
		<Setter Property="Margin" Value="{StaticResource CardElevationMargin}" />

		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="utu:CardContentControl">
					<!-- Elevated View -->
					<toolkit:ElevatedView x:Name="ElevatedRoot"
										  MinWidth="{TemplateBinding MinWidth}"
										  MinHeight="{TemplateBinding MinHeight}"
										  MaxWidth="{TemplateBinding MaxWidth}"
										  MaxHeight="{TemplateBinding MaxHeight}"
										  Margin="{TemplateBinding Margin}"
										  HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
										  VerticalAlignment="{TemplateBinding VerticalAlignment}"
										  Background="{TemplateBinding Background}"
										  CornerRadius="{TemplateBinding CornerRadius}"
										  Elevation="{TemplateBinding Elevation}"
										  ShadowColor="{TemplateBinding ShadowColor}">
						<Grid x:Name="GridRoot"
							  CornerRadius="{TemplateBinding CornerRadius}">

							<!-- Ripple effect -->
							<!-- Will add the ripple effect later on when this issue is taken care of: -->
							<!-- https://github.com/unoplatform/uno.ui.toolkit/issues/88 -->
							<!--<um:Ripple Feedback="{ThemeResource ElevatedCardContentBorderBrushFocused}"
											 CornerRadius="{StaticResource MaterialCardCornerRadius}"
											 Padding="{TemplateBinding Padding}"
											 AutomationProperties.AccessibilityView="Raw" />-->

							<!-- Main ContentPresenter -->
							<ContentPresenter x:Name="ContentPresenter"
											  Padding="{TemplateBinding Padding}"
											  HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
											  VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
											  AutomationProperties.AccessibilityView="Raw"
											  Content="{TemplateBinding Content}"
											  ContentTemplate="{TemplateBinding ContentTemplate}" />

							<!-- Border for Pressed State -->
							<Border x:Name="HoverPressed"
									Background="{ThemeResource ElevatedCardContentBorderBrushPressed}"
									IsHitTestVisible="False"
									Opacity="0" />

							<!-- Border for PointerOver State -->
							<Border x:Name="HoverOverlay"
									Background="{ThemeResource ElevatedCardContentBorderBrushPointerOver}"
									IsHitTestVisible="False"
									Opacity="0" />

							<!-- Border for Focused State -->
							<Border x:Name="FocusedOverlay"
									Background="{ThemeResource ElevatedCardContentBorderBrushFocused}"
									IsHitTestVisible="False"
									Opacity="0" />
						</Grid>
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal">
									<VisualState.Setters>
										<Setter Target="HoverOverlay.Opacity" Value="0" />
										<Setter Target="FocusedOverlay.Opacity" Value="0" />
									</VisualState.Setters>
								</VisualState>
								<VisualState x:Name="PointerOver">
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="HoverOverlay"
														 Storyboard.TargetProperty="Opacity"
														 From="0"
														 To="1"
														 Duration="{StaticResource MaterialDelayedBeginTime}">
											<DoubleAnimation.EasingFunction>
												<CubicEase EasingMode="EaseIn" />
											</DoubleAnimation.EasingFunction>
										</DoubleAnimation>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Pressed">
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="HoverPressed"
														 Storyboard.TargetProperty="Opacity"
														 From="0"
														 To="1"
														 Duration="{StaticResource MaterialDelayedBeginTime}">
											<DoubleAnimation.EasingFunction>
												<CubicEase EasingMode="EaseIn" />
											</DoubleAnimation.EasingFunction>
										</DoubleAnimation>

										<DoubleAnimation Storyboard.TargetName="HoverOverlay"
														 Storyboard.TargetProperty="Opacity"
														 To="0"
														 Duration="{StaticResource MaterialDelayedBeginTime}">
											<DoubleAnimation.EasingFunction>
												<CubicEase EasingMode="EaseIn" />
											</DoubleAnimation.EasingFunction>
										</DoubleAnimation>

										<DoubleAnimation Storyboard.TargetName="FocusedOverlay"
														 Storyboard.TargetProperty="Opacity"
														 To="0"
														 Duration="{StaticResource MaterialDelayedBeginTime}">
											<DoubleAnimation.EasingFunction>
												<CubicEase EasingMode="EaseIn" />
											</DoubleAnimation.EasingFunction>
										</DoubleAnimation>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Disabled">
									<VisualState.Setters>
										<Setter Target="HoverOverlay.Opacity" Value="0" />
										<Setter Target="FocusedOverlay.Opacity" Value="0" />
										<Setter Target="GridRoot.Opacity" Value="0.38" />
									</VisualState.Setters>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="FocusStates">
								<VisualState x:Name="Focused">
									<VisualState.Setters>
										<Setter Target="FocusedOverlay.Opacity" Value="1" />
									</VisualState.Setters>
								</VisualState>
								<VisualState x:Name="PointerFocused" />
								<VisualState x:Name="Unfocused">
									<VisualState.Setters>
										<Setter Target="FocusedOverlay.Opacity" Value="0" />
									</VisualState.Setters>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
					</toolkit:ElevatedView>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
</ResourceDictionary>
