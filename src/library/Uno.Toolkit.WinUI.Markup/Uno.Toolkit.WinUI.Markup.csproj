<Project Sdk="MSBuild.Sdk.Extras/3.0.38">

	<!--
	Adding project references to this project requires some manual adjustments.
	Please see https://github.com/unoplatform/uno/issues/3909 for more details.
	-->
	<PropertyGroup>
		<TargetFrameworks>$(NetCurrentAll)</TargetFrameworks>
		<AllowedOutputExtensionsInPackageBuildOutputFolder>.pdb</AllowedOutputExtensionsInPackageBuildOutputFolder>
		<!-- Ensures the .xr.xml files are generated in a proper layout folder -->
		<GenerateLibraryLayout>true</GenerateLibraryLayout>
		<DefineConstants>WINUI</DefineConstants>
		<UseWinUI>true</UseWinUI>

		<RuntimeIdentifiers Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'windows'">win-x86;win-x64;win-arm64</RuntimeIdentifiers>
	</PropertyGroup>

	<ItemGroup>
		<PackageReference Include="Uno.Extensions.Markup.Generators" PrivateAssets="All"/>
		<PackageReference Include="Uno.WinUI.Markup" />
	</ItemGroup>

	<ItemGroup>
		<ProjectReference Include="..\..\Uno.Toolkit.UI\Uno.Toolkit.WinUI.csproj" />
	</ItemGroup>

	<PropertyGroup>
		<PackageDescription>A set of C# for Markup helpers for Uno.Toolkit.WinUI</PackageDescription>
	</PropertyGroup>

	<ItemGroup Condition="'$(ImplicitUsings)'=='true' OR '$(ImplicitUsings)'=='enable'">
		<Using Include="Uno.Toolkit.UI.Markup" />
	</ItemGroup>

	<Import Project="..\..\winappsdk-workaround.targets" />
</Project>
