<Project ToolsVersion="15.0">
	<PropertyGroup>
		<DebugType>portable</DebugType>
		<DebugSymbols>True</DebugSymbols>
		<AutoGenerateBindingRedirects>true</AutoGenerateBindingRedirects>
		<GenerateBindingRedirectsOutputType>true</GenerateBindingRedirectsOutputType>

		<GeneratePackageOnBuild Condition="'$(Configuration)'=='Release' and '$(GeneratePackageOnBuild)'=='true'">true</GeneratePackageOnBuild>
		<GenerateAppxPackageOnBuild>false</GenerateAppxPackageOnBuild>

		<!-- Required in release using recent SDKs which use assembly embedded XBFs that are not supported by UWP -->
		<DisableEmbeddedXbf Condition="$(TargetFramework.StartsWith('uap'))">true</DisableEmbeddedXbf>

		<!-- Version management is now done through NuGet, this avoids issues related version mismatch -->
		<Version>255.255.255.255</Version>

		<LangVersion>preview</LangVersion>
		<Nullable>enable</Nullable>

		<NoNFloatUsing>true</NoNFloatUsing>
		<TreatWarningsAsErrors>true</TreatWarningsAsErrors>
		<!-- NU5048: The 'PackageIconUrl'/'iconUrl' element is deprecated. Consider using the 'PackageIcon'/'icon' element instead. Learn more at https://aka.ms/deprecateIconUrl -->
		<NoWarn>$(NoWarn);NU5048</NoWarn>
		<!-- Uno0001: Uno type or member is not implemented -->
		<NoWarn>$(NoWarn);Uno0001</NoWarn>
		<!-- This should be enabled back once https://github.com/microsoft/microsoft-ui-xaml/issues/4187 is fixed. -->
		<NoWarn>$(NoWarn);CS8305</NoWarn>
		<!-- TODO: Enable once https://github.com/xamarin/xamarin-macios/pull/16513 is merged and we have it -->
		<NoWarn>$(NoWarn);CA1416</NoWarn>
	</PropertyGroup>

	<PropertyGroup>
		<PackageProjectUrl>$(BUILD_REPOSITORY_URI)</PackageProjectUrl>
		<Description>A set of controls for Uno Platform, UWP and WinUI</Description>
	</PropertyGroup>

	<PropertyGroup>
		<IsTestProject>$(MSBuildProjectName.Contains('Test'))</IsTestProject>
		<IsSampleProject>$(MSBuildProjectName.Contains('Sample'))</IsSampleProject>
		<IsMarkupProject>$(MSBuildProjectName.Contains('Markup'))</IsMarkupProject>
	</PropertyGroup>

	<Choose>
		<When Condition="'$(Configuration)' != 'Debug' and '$(IsTestProject)' != 'true' and '$(SourceLinkEnabled)' != 'false' and '$(IsSampleProject)' != 'true'">
			<PropertyGroup>
				<!-- Optional: Declare that the Repository URL can be published to NuSpec -->
				<PublishRepositoryUrl>true</PublishRepositoryUrl>
				<!-- Optional: Embed source files that are not tracked by the source control manager to the PDB -->
				<EmbedUntrackedSources>true</EmbedUntrackedSources>
				<!-- Optional: Include PDB in the built .nupkg -->
				<AllowedOutputExtensionsInPackageBuildOutputFolder>$(AllowedOutputExtensionsInPackageBuildOutputFolder);.pdb</AllowedOutputExtensionsInPackageBuildOutputFolder>
			</PropertyGroup>
			<ItemGroup>
				<PackageReference Include="Microsoft.SourceLink.GitHub" PrivateAssets="All"/>
			</ItemGroup>
		</When>
	</Choose>

	<PropertyGroup Condition="'$(IsMarkupProject)'=='true'">
		<IsPackable>false</IsPackable>
	</PropertyGroup>

	<PropertyGroup Condition="'$(IsTestProject)'=='false'">
		<!-- Enable performance CA rules from 'Microsoft.CodeAnalysis.NetAnalyzers' as build warnings by default. Specific rules are disabled or downgraded in the repo's editorconfig. -->
		<AnalysisLevel>latest</AnalysisLevel>
		<AnalysisModePerformance>AllEnabledByDefault</AnalysisModePerformance>
	</PropertyGroup>

	<ItemGroup Condition="'$(IsTestProject)'=='false'">
		<PackageReference Include="Microsoft.CodeAnalysis.NetAnalyzers" PrivateAssets="All" />
	</ItemGroup>

	<!--
  Adjust the output paths for runtime project in order for those
  projects to stay in the same folder as the original reference one.
  -->
	<PropertyGroup>
		<BaseOutputPath>bin\$(MSBuildProjectName)</BaseOutputPath>
		<BaseIntermediateOutputPath>obj\$(MSBuildProjectName)</BaseIntermediateOutputPath>
		<DefaultItemExcludes>$(DefaultItemExcludes);obj/**;bin/**</DefaultItemExcludes>
	</PropertyGroup>

	<Import Project="PlatformItemGroups.props" />
	<Import Project="CrossTargeting.props" />
	<Import Project="xamarinmac-workaround.targets" Condition="$(TargetFramework.ToLower().StartsWith('xamarin')) and $(TargetFramework.ToLower().Contains('mac'))" />
</Project>
